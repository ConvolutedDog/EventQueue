

module {
  func @graph(%arg0: memref<3x7x7xf32>, %arg1: memref<5x3x7x3xf32>) {
    %0 = "equeue.create_proc"() {name = "proc0,0", type = "AIEngine"} : () -> i32
    %1 = "equeue.create_mem"() {banks = 3 : i64, data = "f32", name = "mem0,0", shape = dense<3> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %2 = "equeue.create_comp"(%1, %0) {name = "pe_0,0"} : (i32, i32) -> i32
    %3 = "equeue.create_proc"() {name = "proc0,1", type = "AIEngine"} : () -> i32
    %4 = "equeue.create_mem"() {banks = 3 : i64, data = "f32", name = "mem0,1", shape = dense<3> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %5 = "equeue.create_comp"(%4, %3, %2) {name = "pe_0,1"} : (i32, i32, i32) -> i32
    %6 = "equeue.create_proc"() {name = "proc0,2", type = "AIEngine"} : () -> i32
    %7 = "equeue.create_mem"() {banks = 3 : i64, data = "f32", name = "mem0,2", shape = dense<3> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %8 = "equeue.create_comp"(%7, %6, %5) {name = "pe_0,2"} : (i32, i32, i32) -> i32
    %9 = "equeue.create_proc"() {name = "proc0,3", type = "AIEngine"} : () -> i32
    %10 = "equeue.create_mem"() {banks = 3 : i64, data = "f32", name = "mem0,3", shape = dense<3> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %11 = "equeue.create_comp"(%10, %9, %8) {name = "pe_0,3"} : (i32, i32, i32) -> i32
    %12 = "equeue.create_proc"() {name = "proc0,4", type = "AIEngine"} : () -> i32
    %13 = "equeue.create_mem"() {banks = 3 : i64, data = "f32", name = "mem0,4", shape = dense<3> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %14 = "equeue.create_comp"(%13, %12, %11) {name = "pe_0,4"} : (i32, i32, i32) -> i32
    %15 = "equeue.create_proc"() {name = "proc1,0", type = "AIEngine"} : () -> i32
    %16 = "equeue.create_mem"() {banks = 3 : i64, data = "f32", name = "mem1,0", shape = dense<3> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %17 = "equeue.create_comp"(%16, %15, %14) {name = "pe_1,0"} : (i32, i32, i32) -> i32
    %18 = "equeue.create_proc"() {name = "proc1,1", type = "AIEngine"} : () -> i32
    %19 = "equeue.create_mem"() {banks = 3 : i64, data = "f32", name = "mem1,1", shape = dense<3> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %20 = "equeue.create_comp"(%19, %18, %17) {name = "pe_1,1"} : (i32, i32, i32) -> i32
    %21 = "equeue.create_proc"() {name = "proc1,2", type = "AIEngine"} : () -> i32
    %22 = "equeue.create_mem"() {banks = 3 : i64, data = "f32", name = "mem1,2", shape = dense<3> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %23 = "equeue.create_comp"(%22, %21, %20) {name = "pe_1,2"} : (i32, i32, i32) -> i32
    %24 = "equeue.create_proc"() {name = "proc1,3", type = "AIEngine"} : () -> i32
    %25 = "equeue.create_mem"() {banks = 3 : i64, data = "f32", name = "mem1,3", shape = dense<3> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %26 = "equeue.create_comp"(%25, %24, %23) {name = "pe_1,3"} : (i32, i32, i32) -> i32
    %27 = "equeue.create_proc"() {name = "proc1,4", type = "AIEngine"} : () -> i32
    %28 = "equeue.create_mem"() {banks = 3 : i64, data = "f32", name = "mem1,4", shape = dense<3> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %29 = "equeue.create_comp"(%28, %27, %26) {name = "pe_1,4"} : (i32, i32, i32) -> i32
    %30 = "equeue.create_proc"() {name = "proc2,0", type = "AIEngine"} : () -> i32
    %31 = "equeue.create_mem"() {banks = 3 : i64, data = "f32", name = "mem2,0", shape = dense<3> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %32 = "equeue.create_comp"(%31, %30, %29) {name = "pe_2,0"} : (i32, i32, i32) -> i32
    %33 = "equeue.create_proc"() {name = "proc2,1", type = "AIEngine"} : () -> i32
    %34 = "equeue.create_mem"() {banks = 3 : i64, data = "f32", name = "mem2,1", shape = dense<3> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %35 = "equeue.create_comp"(%34, %33, %32) {name = "pe_2,1"} : (i32, i32, i32) -> i32
    %36 = "equeue.create_proc"() {name = "proc2,2", type = "AIEngine"} : () -> i32
    %37 = "equeue.create_mem"() {banks = 3 : i64, data = "f32", name = "mem2,2", shape = dense<3> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %38 = "equeue.create_comp"(%37, %36, %35) {name = "pe_2,2"} : (i32, i32, i32) -> i32
    %39 = "equeue.create_proc"() {name = "proc2,3", type = "AIEngine"} : () -> i32
    %40 = "equeue.create_mem"() {banks = 3 : i64, data = "f32", name = "mem2,3", shape = dense<3> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %41 = "equeue.create_comp"(%40, %39, %38) {name = "pe_2,3"} : (i32, i32, i32) -> i32
    %42 = "equeue.create_proc"() {name = "proc2,4", type = "AIEngine"} : () -> i32
    %43 = "equeue.create_mem"() {banks = 3 : i64, data = "f32", name = "mem2,4", shape = dense<3> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %44 = "equeue.create_comp"(%43, %42, %41) {name = "pe_2,4"} : (i32, i32, i32) -> i32
    %45 = "equeue.create_proc"() {name = "proc3,0", type = "AIEngine"} : () -> i32
    %46 = "equeue.create_mem"() {banks = 3 : i64, data = "f32", name = "mem3,0", shape = dense<3> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %47 = "equeue.create_comp"(%46, %45, %44) {name = "pe_3,0"} : (i32, i32, i32) -> i32
    %48 = "equeue.create_proc"() {name = "proc3,1", type = "AIEngine"} : () -> i32
    %49 = "equeue.create_mem"() {banks = 3 : i64, data = "f32", name = "mem3,1", shape = dense<3> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %50 = "equeue.create_comp"(%49, %48, %47) {name = "pe_3,1"} : (i32, i32, i32) -> i32
    %51 = "equeue.create_proc"() {name = "proc3,2", type = "AIEngine"} : () -> i32
    %52 = "equeue.create_mem"() {banks = 3 : i64, data = "f32", name = "mem3,2", shape = dense<3> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %53 = "equeue.create_comp"(%52, %51, %50) {name = "pe_3,2"} : (i32, i32, i32) -> i32
    %54 = "equeue.create_proc"() {name = "proc3,3", type = "AIEngine"} : () -> i32
    %55 = "equeue.create_mem"() {banks = 3 : i64, data = "f32", name = "mem3,3", shape = dense<3> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %56 = "equeue.create_comp"(%55, %54, %53) {name = "pe_3,3"} : (i32, i32, i32) -> i32
    %57 = "equeue.create_proc"() {name = "proc3,4", type = "AIEngine"} : () -> i32
    %58 = "equeue.create_mem"() {banks = 3 : i64, data = "f32", name = "mem3,4", shape = dense<3> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %59 = "equeue.create_comp"(%58, %57, %56) {name = "pe_3,4"} : (i32, i32, i32) -> i32
    %60 = "equeue.create_proc"() {name = "proc4,0", type = "AIEngine"} : () -> i32
    %61 = "equeue.create_mem"() {banks = 3 : i64, data = "f32", name = "mem4,0", shape = dense<3> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %62 = "equeue.create_comp"(%61, %60, %59) {name = "pe_4,0"} : (i32, i32, i32) -> i32
    %63 = "equeue.create_proc"() {name = "proc4,1", type = "AIEngine"} : () -> i32
    %64 = "equeue.create_mem"() {banks = 3 : i64, data = "f32", name = "mem4,1", shape = dense<3> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %65 = "equeue.create_comp"(%64, %63, %62) {name = "pe_4,1"} : (i32, i32, i32) -> i32
    %66 = "equeue.create_proc"() {name = "proc4,2", type = "AIEngine"} : () -> i32
    %67 = "equeue.create_mem"() {banks = 3 : i64, data = "f32", name = "mem4,2", shape = dense<3> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %68 = "equeue.create_comp"(%67, %66, %65) {name = "pe_4,2"} : (i32, i32, i32) -> i32
    %69 = "equeue.create_proc"() {name = "proc4,3", type = "AIEngine"} : () -> i32
    %70 = "equeue.create_mem"() {banks = 3 : i64, data = "f32", name = "mem4,3", shape = dense<3> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %71 = "equeue.create_comp"(%70, %69, %68) {name = "pe_4,3"} : (i32, i32, i32) -> i32
    %72 = "equeue.create_proc"() {name = "proc4,4", type = "AIEngine"} : () -> i32
    %73 = "equeue.create_mem"() {banks = 3 : i64, data = "f32", name = "mem4,4", shape = dense<3> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %74 = "equeue.create_comp"(%73, %72, %71) {name = "pe_4,4"} : (i32, i32, i32) -> i32
    %75 = "equeue.create_mem"() {banks = 10 : i64, data = "f32", name = "mem", shape = dense<110592> : tensor<1xi64>, type = "SRAM"} : () -> i32
    %76 = "equeue.create_dma"() {name = "dma0"} : () -> i32
    %77 = "equeue.create_comp"(%76) {name = "dma_col"} : (i32) -> i32
    %78 = "equeue.create_dma"() {name = "dma1"} : () -> i32
    %79 = "equeue.create_comp"(%78, %77) {name = "dma_col"} : (i32, i32) -> i32
    %80 = "equeue.create_dma"() {name = "dma2"} : () -> i32
    %81 = "equeue.create_comp"(%80, %79) {name = "dma_col"} : (i32, i32) -> i32
    %82 = "equeue.create_dma"() {name = "dma3"} : () -> i32
    %83 = "equeue.create_comp"(%82, %81) {name = "dma_col"} : (i32, i32) -> i32
    %84 = "equeue.create_dma"() {name = "dma4"} : () -> i32
    %85 = "equeue.create_comp"(%84, %83) {name = "dma_col"} : (i32, i32) -> i32
    %86 = "equeue.create_dma"() {name = "dma0"} : () -> i32
    %87 = "equeue.create_comp"(%86) {name = "dma_row"} : (i32) -> i32
    %88 = "equeue.create_dma"() {name = "dma1"} : () -> i32
    %89 = "equeue.create_comp"(%88, %87) {name = "dma_row"} : (i32, i32) -> i32
    %90 = "equeue.create_dma"() {name = "dma2"} : () -> i32
    %91 = "equeue.create_comp"(%90, %89) {name = "dma_row"} : (i32, i32) -> i32
    %92 = "equeue.create_dma"() {name = "dma3"} : () -> i32
    %93 = "equeue.create_comp"(%92, %91) {name = "dma_row"} : (i32, i32) -> i32
    %94 = "equeue.create_dma"() {name = "dma4"} : () -> i32
    %95 = "equeue.create_comp"(%94, %93) {name = "dma_row"} : (i32, i32) -> i32
    %96 = "equeue.create_proc"() {name = "proc", type = "MicroPlate"} : () -> i32
    %97 = "equeue.create_comp"(%74, %96, %75, %95, %85) {name = "accel"} : (i32, i32, i32, i32, i32) -> i32
    %98 = "equeue.control_start"() : () -> !equeue.signal
    %done = "equeue.launch"(%98, %96, %97, %arg0, %arg1) ( {
    ^bb0(%arg2: i32, %arg3: memref<3x7x7xf32>, %arg4: memref<5x3x7x3xf32>):  // no predecessors
      %99 = "equeue.get_comp"(%arg2) {name = "proc"} : (i32) -> i32
      %100 = "equeue.get_comp"(%arg2) {name = "dma_row"} : (i32) -> i32
      %101 = "equeue.get_comp"(%arg2) {name = "dma_col"} : (i32) -> i32
      %102 = "equeue.get_comp"(%100) {name = "dma4"} : (i32) -> i32
      %103 = "equeue.get_comp"(%100) {name = "dma_row"} : (i32) -> i32
      %104 = "equeue.get_comp"(%103) {name = "dma3"} : (i32) -> i32
      %105 = "equeue.get_comp"(%103) {name = "dma_row"} : (i32) -> i32
      %106 = "equeue.get_comp"(%105) {name = "dma2"} : (i32) -> i32
      %107 = "equeue.get_comp"(%105) {name = "dma_row"} : (i32) -> i32
      %108 = "equeue.get_comp"(%107) {name = "dma1"} : (i32) -> i32
      %109 = "equeue.get_comp"(%107) {name = "dma_row"} : (i32) -> i32
      %110 = "equeue.get_comp"(%109) {name = "dma0"} : (i32) -> i32
      %111 = "equeue.get_comp"(%101) {name = "dma4"} : (i32) -> i32
      %112 = "equeue.get_comp"(%101) {name = "dma_col"} : (i32) -> i32
      %113 = "equeue.get_comp"(%112) {name = "dma3"} : (i32) -> i32
      %114 = "equeue.get_comp"(%112) {name = "dma_col"} : (i32) -> i32
      %115 = "equeue.get_comp"(%114) {name = "dma2"} : (i32) -> i32
      %116 = "equeue.get_comp"(%114) {name = "dma_col"} : (i32) -> i32
      %117 = "equeue.get_comp"(%116) {name = "dma1"} : (i32) -> i32
      %118 = "equeue.get_comp"(%116) {name = "dma_col"} : (i32) -> i32
      %119 = "equeue.get_comp"(%118) {name = "dma0"} : (i32) -> i32
      %120 = "equeue.get_comp"(%arg2) {name = "mem"} : (i32) -> i32
      %121 = "equeue.alloc"(%120) {data = "f32", shape = dense<[3, 7, 7]> : tensor<3xi64>} : (i32) -> memref<3x7x7xf32>
      %122 = "equeue.alloc"(%120) {data = "f32", shape = dense<[5, 3, 7, 3]> : tensor<4xi64>} : (i32) -> memref<5x3x7x3xf32>
      %123 = "equeue.alloc"(%120) {data = "f32", shape = dense<[5, 3, 3]> : tensor<3xi64>} : (i32) -> memref<5x3x3xf32>
      %124 = "equeue.get_comp"(%arg2) {name = "pe_4,4"} : (i32) -> i32
      %125 = "equeue.get_comp"(%124) {name = "mem4,4"} : (i32) -> i32
      %126 = "equeue.get_comp"(%124) {name = "proc4,4"} : (i32) -> i32
      %127 = "equeue.alloc"(%125) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %128 = "equeue.alloc"(%125) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %129 = "equeue.alloc"(%125) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %130 = "equeue.get_comp"(%124) {name = "pe_4,3"} : (i32) -> i32
      %131 = "equeue.get_comp"(%130) {name = "mem4,3"} : (i32) -> i32
      %132 = "equeue.get_comp"(%130) {name = "proc4,3"} : (i32) -> i32
      %133 = "equeue.alloc"(%131) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %134 = "equeue.alloc"(%131) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %135 = "equeue.alloc"(%131) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %136 = "equeue.get_comp"(%130) {name = "pe_4,2"} : (i32) -> i32
      %137 = "equeue.get_comp"(%136) {name = "mem4,2"} : (i32) -> i32
      %138 = "equeue.get_comp"(%136) {name = "proc4,2"} : (i32) -> i32
      %139 = "equeue.alloc"(%137) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %140 = "equeue.alloc"(%137) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %141 = "equeue.alloc"(%137) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %142 = "equeue.get_comp"(%136) {name = "pe_4,1"} : (i32) -> i32
      %143 = "equeue.get_comp"(%142) {name = "mem4,1"} : (i32) -> i32
      %144 = "equeue.get_comp"(%142) {name = "proc4,1"} : (i32) -> i32
      %145 = "equeue.alloc"(%143) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %146 = "equeue.alloc"(%143) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %147 = "equeue.alloc"(%143) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %148 = "equeue.get_comp"(%142) {name = "pe_4,0"} : (i32) -> i32
      %149 = "equeue.get_comp"(%148) {name = "mem4,0"} : (i32) -> i32
      %150 = "equeue.get_comp"(%148) {name = "proc4,0"} : (i32) -> i32
      %151 = "equeue.alloc"(%149) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %152 = "equeue.alloc"(%149) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %153 = "equeue.alloc"(%149) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %154 = "equeue.get_comp"(%148) {name = "pe_3,4"} : (i32) -> i32
      %155 = "equeue.get_comp"(%154) {name = "mem3,4"} : (i32) -> i32
      %156 = "equeue.get_comp"(%154) {name = "proc3,4"} : (i32) -> i32
      %157 = "equeue.alloc"(%155) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %158 = "equeue.alloc"(%155) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %159 = "equeue.alloc"(%155) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %160 = "equeue.get_comp"(%154) {name = "pe_3,3"} : (i32) -> i32
      %161 = "equeue.get_comp"(%160) {name = "mem3,3"} : (i32) -> i32
      %162 = "equeue.get_comp"(%160) {name = "proc3,3"} : (i32) -> i32
      %163 = "equeue.alloc"(%161) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %164 = "equeue.alloc"(%161) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %165 = "equeue.alloc"(%161) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %166 = "equeue.get_comp"(%160) {name = "pe_3,2"} : (i32) -> i32
      %167 = "equeue.get_comp"(%166) {name = "mem3,2"} : (i32) -> i32
      %168 = "equeue.get_comp"(%166) {name = "proc3,2"} : (i32) -> i32
      %169 = "equeue.alloc"(%167) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %170 = "equeue.alloc"(%167) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %171 = "equeue.alloc"(%167) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %172 = "equeue.get_comp"(%166) {name = "pe_3,1"} : (i32) -> i32
      %173 = "equeue.get_comp"(%172) {name = "mem3,1"} : (i32) -> i32
      %174 = "equeue.get_comp"(%172) {name = "proc3,1"} : (i32) -> i32
      %175 = "equeue.alloc"(%173) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %176 = "equeue.alloc"(%173) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %177 = "equeue.alloc"(%173) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %178 = "equeue.get_comp"(%172) {name = "pe_3,0"} : (i32) -> i32
      %179 = "equeue.get_comp"(%178) {name = "mem3,0"} : (i32) -> i32
      %180 = "equeue.get_comp"(%178) {name = "proc3,0"} : (i32) -> i32
      %181 = "equeue.alloc"(%179) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %182 = "equeue.alloc"(%179) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %183 = "equeue.alloc"(%179) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %184 = "equeue.get_comp"(%178) {name = "pe_2,4"} : (i32) -> i32
      %185 = "equeue.get_comp"(%184) {name = "mem2,4"} : (i32) -> i32
      %186 = "equeue.get_comp"(%184) {name = "proc2,4"} : (i32) -> i32
      %187 = "equeue.alloc"(%185) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %188 = "equeue.alloc"(%185) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %189 = "equeue.alloc"(%185) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %190 = "equeue.get_comp"(%184) {name = "pe_2,3"} : (i32) -> i32
      %191 = "equeue.get_comp"(%190) {name = "mem2,3"} : (i32) -> i32
      %192 = "equeue.get_comp"(%190) {name = "proc2,3"} : (i32) -> i32
      %193 = "equeue.alloc"(%191) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %194 = "equeue.alloc"(%191) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %195 = "equeue.alloc"(%191) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %196 = "equeue.get_comp"(%190) {name = "pe_2,2"} : (i32) -> i32
      %197 = "equeue.get_comp"(%196) {name = "mem2,2"} : (i32) -> i32
      %198 = "equeue.get_comp"(%196) {name = "proc2,2"} : (i32) -> i32
      %199 = "equeue.alloc"(%197) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %200 = "equeue.alloc"(%197) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %201 = "equeue.alloc"(%197) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %202 = "equeue.get_comp"(%196) {name = "pe_2,1"} : (i32) -> i32
      %203 = "equeue.get_comp"(%202) {name = "mem2,1"} : (i32) -> i32
      %204 = "equeue.get_comp"(%202) {name = "proc2,1"} : (i32) -> i32
      %205 = "equeue.alloc"(%203) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %206 = "equeue.alloc"(%203) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %207 = "equeue.alloc"(%203) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %208 = "equeue.get_comp"(%202) {name = "pe_2,0"} : (i32) -> i32
      %209 = "equeue.get_comp"(%208) {name = "mem2,0"} : (i32) -> i32
      %210 = "equeue.get_comp"(%208) {name = "proc2,0"} : (i32) -> i32
      %211 = "equeue.alloc"(%209) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %212 = "equeue.alloc"(%209) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %213 = "equeue.alloc"(%209) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %214 = "equeue.get_comp"(%208) {name = "pe_1,4"} : (i32) -> i32
      %215 = "equeue.get_comp"(%214) {name = "mem1,4"} : (i32) -> i32
      %216 = "equeue.get_comp"(%214) {name = "proc1,4"} : (i32) -> i32
      %217 = "equeue.alloc"(%215) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %218 = "equeue.alloc"(%215) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %219 = "equeue.alloc"(%215) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %220 = "equeue.get_comp"(%214) {name = "pe_1,3"} : (i32) -> i32
      %221 = "equeue.get_comp"(%220) {name = "mem1,3"} : (i32) -> i32
      %222 = "equeue.get_comp"(%220) {name = "proc1,3"} : (i32) -> i32
      %223 = "equeue.alloc"(%221) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %224 = "equeue.alloc"(%221) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %225 = "equeue.alloc"(%221) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %226 = "equeue.get_comp"(%220) {name = "pe_1,2"} : (i32) -> i32
      %227 = "equeue.get_comp"(%226) {name = "mem1,2"} : (i32) -> i32
      %228 = "equeue.get_comp"(%226) {name = "proc1,2"} : (i32) -> i32
      %229 = "equeue.alloc"(%227) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %230 = "equeue.alloc"(%227) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %231 = "equeue.alloc"(%227) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %232 = "equeue.get_comp"(%226) {name = "pe_1,1"} : (i32) -> i32
      %233 = "equeue.get_comp"(%232) {name = "mem1,1"} : (i32) -> i32
      %234 = "equeue.get_comp"(%232) {name = "proc1,1"} : (i32) -> i32
      %235 = "equeue.alloc"(%233) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %236 = "equeue.alloc"(%233) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %237 = "equeue.alloc"(%233) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %238 = "equeue.get_comp"(%232) {name = "pe_1,0"} : (i32) -> i32
      %239 = "equeue.get_comp"(%238) {name = "mem1,0"} : (i32) -> i32
      %240 = "equeue.get_comp"(%238) {name = "proc1,0"} : (i32) -> i32
      %241 = "equeue.alloc"(%239) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %242 = "equeue.alloc"(%239) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %243 = "equeue.alloc"(%239) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %244 = "equeue.get_comp"(%238) {name = "pe_0,4"} : (i32) -> i32
      %245 = "equeue.get_comp"(%244) {name = "mem0,4"} : (i32) -> i32
      %246 = "equeue.get_comp"(%244) {name = "proc0,4"} : (i32) -> i32
      %247 = "equeue.alloc"(%245) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %248 = "equeue.alloc"(%245) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %249 = "equeue.alloc"(%245) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %250 = "equeue.get_comp"(%244) {name = "pe_0,3"} : (i32) -> i32
      %251 = "equeue.get_comp"(%250) {name = "mem0,3"} : (i32) -> i32
      %252 = "equeue.get_comp"(%250) {name = "proc0,3"} : (i32) -> i32
      %253 = "equeue.alloc"(%251) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %254 = "equeue.alloc"(%251) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %255 = "equeue.alloc"(%251) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %256 = "equeue.get_comp"(%250) {name = "pe_0,2"} : (i32) -> i32
      %257 = "equeue.get_comp"(%256) {name = "mem0,2"} : (i32) -> i32
      %258 = "equeue.get_comp"(%256) {name = "proc0,2"} : (i32) -> i32
      %259 = "equeue.alloc"(%257) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %260 = "equeue.alloc"(%257) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %261 = "equeue.alloc"(%257) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %262 = "equeue.get_comp"(%256) {name = "pe_0,1"} : (i32) -> i32
      %263 = "equeue.get_comp"(%262) {name = "mem0,1"} : (i32) -> i32
      %264 = "equeue.get_comp"(%262) {name = "proc0,1"} : (i32) -> i32
      %265 = "equeue.alloc"(%263) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %266 = "equeue.alloc"(%263) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %267 = "equeue.alloc"(%263) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %268 = "equeue.get_comp"(%262) {name = "pe_0,0"} : (i32) -> i32
      %269 = "equeue.get_comp"(%268) {name = "mem0,0"} : (i32) -> i32
      %270 = "equeue.get_comp"(%268) {name = "proc0,0"} : (i32) -> i32
      %271 = "equeue.alloc"(%269) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %272 = "equeue.alloc"(%269) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %273 = "equeue.alloc"(%269) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %274 = "equeue.control_start"() : () -> !equeue.signal
      %c0 = constant 0 : index
      %275 = "equeue.memcpy"(%274, %122, %127, %111, %c0) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %276 = "equeue.memcpy"(%274, %121, %129, %102, %c0) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      "equeue.await"(%276, %275) : (!equeue.signal, !equeue.signal) -> ()
      %277 = "equeue.control_start"() : () -> !equeue.signal
      %done_0 = "equeue.launch"(%277, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_1 = "equeue.launch"(%277, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %278 = "equeue.control_and"(%done_0, %done_1) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2 = "equeue.launch"(%277, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %279 = "equeue.control_and"(%278, %done_2) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_3 = "equeue.launch"(%277, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %280 = "equeue.control_and"(%279, %done_3) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_4 = "equeue.launch"(%277, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %281 = "equeue.control_and"(%280, %done_4) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_5 = "equeue.launch"(%277, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %282 = "equeue.control_and"(%281, %done_5) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_6 = "equeue.launch"(%277, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %283 = "equeue.control_and"(%282, %done_6) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_7 = "equeue.launch"(%277, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %284 = "equeue.control_and"(%283, %done_7) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_8 = "equeue.launch"(%277, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %285 = "equeue.control_and"(%284, %done_8) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_9 = "equeue.launch"(%277, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %286 = "equeue.control_and"(%285, %done_9) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_10 = "equeue.launch"(%277, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %287 = "equeue.control_and"(%286, %done_10) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_11 = "equeue.launch"(%277, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %288 = "equeue.control_and"(%287, %done_11) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_12 = "equeue.launch"(%277, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %289 = "equeue.control_and"(%288, %done_12) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_13 = "equeue.launch"(%277, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %290 = "equeue.control_and"(%289, %done_13) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_14 = "equeue.launch"(%277, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %291 = "equeue.control_and"(%290, %done_14) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_15 = "equeue.launch"(%277, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %292 = "equeue.control_and"(%291, %done_15) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_16 = "equeue.launch"(%277, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %293 = "equeue.control_and"(%292, %done_16) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_17 = "equeue.launch"(%277, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %294 = "equeue.control_and"(%293, %done_17) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_18 = "equeue.launch"(%277, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %295 = "equeue.control_and"(%294, %done_18) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_19 = "equeue.launch"(%277, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %296 = "equeue.control_and"(%295, %done_19) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_20 = "equeue.launch"(%277, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %297 = "equeue.control_and"(%296, %done_20) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_21 = "equeue.launch"(%277, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %298 = "equeue.control_and"(%297, %done_21) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_22 = "equeue.launch"(%277, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %299 = "equeue.control_and"(%298, %done_22) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_23 = "equeue.launch"(%277, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %300 = "equeue.control_and"(%299, %done_23) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_24 = "equeue.launch"(%277, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %301 = "equeue.control_and"(%300, %done_24) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%301) : (!equeue.signal) -> ()
      %302 = "equeue.control_start"() : () -> !equeue.signal
      %c0_25 = constant 0 : index
      %303 = "equeue.memcpy"(%302, %122, %127, %111, %c0_25) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %304 = "equeue.memcpy"(%302, %122, %133, %113, %c0_25) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %305 = "equeue.control_and"(%304, %303) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %306 = "equeue.memcpy"(%302, %121, %129, %102, %c0_25) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %307 = "equeue.memcpy"(%302, %121, %159, %104, %c0_25) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %308 = "equeue.control_and"(%307, %306) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%308, %305) : (!equeue.signal, !equeue.signal) -> ()
      %309 = "equeue.control_start"() : () -> !equeue.signal
      %done_26 = "equeue.launch"(%309, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_27 = "equeue.launch"(%309, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %310 = "equeue.control_and"(%done_26, %done_27) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_28 = "equeue.launch"(%309, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %311 = "equeue.control_and"(%310, %done_28) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_29 = "equeue.launch"(%309, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %312 = "equeue.control_and"(%311, %done_29) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_30 = "equeue.launch"(%309, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %313 = "equeue.control_and"(%312, %done_30) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_31 = "equeue.launch"(%309, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %314 = "equeue.control_and"(%313, %done_31) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_32 = "equeue.launch"(%309, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %315 = "equeue.control_and"(%314, %done_32) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_33 = "equeue.launch"(%309, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %316 = "equeue.control_and"(%315, %done_33) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_34 = "equeue.launch"(%309, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %317 = "equeue.control_and"(%316, %done_34) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_35 = "equeue.launch"(%309, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %318 = "equeue.control_and"(%317, %done_35) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_36 = "equeue.launch"(%309, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %319 = "equeue.control_and"(%318, %done_36) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_37 = "equeue.launch"(%309, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %320 = "equeue.control_and"(%319, %done_37) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_38 = "equeue.launch"(%309, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %321 = "equeue.control_and"(%320, %done_38) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_39 = "equeue.launch"(%309, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %322 = "equeue.control_and"(%321, %done_39) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_40 = "equeue.launch"(%309, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %323 = "equeue.control_and"(%322, %done_40) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_41 = "equeue.launch"(%309, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %324 = "equeue.control_and"(%323, %done_41) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_42 = "equeue.launch"(%309, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %325 = "equeue.control_and"(%324, %done_42) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_43 = "equeue.launch"(%309, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %326 = "equeue.control_and"(%325, %done_43) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_44 = "equeue.launch"(%309, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %327 = "equeue.control_and"(%326, %done_44) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_45 = "equeue.launch"(%309, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %328 = "equeue.control_and"(%327, %done_45) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_46 = "equeue.launch"(%309, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %329 = "equeue.control_and"(%328, %done_46) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_47 = "equeue.launch"(%309, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %330 = "equeue.control_and"(%329, %done_47) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_48 = "equeue.launch"(%309, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %331 = "equeue.control_and"(%330, %done_48) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_49 = "equeue.launch"(%309, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %332 = "equeue.control_and"(%331, %done_49) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_50 = "equeue.launch"(%309, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %333 = "equeue.control_and"(%332, %done_50) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%333) : (!equeue.signal) -> ()
      %334 = "equeue.control_start"() : () -> !equeue.signal
      %c0_51 = constant 0 : index
      %335 = "equeue.memcpy"(%334, %122, %127, %111, %c0_51) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %336 = "equeue.memcpy"(%334, %122, %133, %113, %c0_51) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %337 = "equeue.control_and"(%336, %335) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %338 = "equeue.memcpy"(%334, %122, %139, %115, %c0_51) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %339 = "equeue.control_and"(%338, %337) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %340 = "equeue.memcpy"(%334, %121, %129, %102, %c0_51) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %341 = "equeue.memcpy"(%334, %121, %159, %104, %c0_51) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %342 = "equeue.control_and"(%341, %340) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %343 = "equeue.memcpy"(%334, %121, %189, %106, %c0_51) {dest_bank = 1 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %344 = "equeue.control_and"(%343, %342) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%344, %339) : (!equeue.signal, !equeue.signal) -> ()
      %345 = "equeue.control_start"() : () -> !equeue.signal
      %done_52 = "equeue.launch"(%345, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_53 = "equeue.launch"(%345, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %346 = "equeue.control_and"(%done_52, %done_53) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_54 = "equeue.launch"(%345, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %347 = "equeue.control_and"(%346, %done_54) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_55 = "equeue.launch"(%345, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %348 = "equeue.control_and"(%347, %done_55) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_56 = "equeue.launch"(%345, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %349 = "equeue.control_and"(%348, %done_56) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_57 = "equeue.launch"(%345, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %350 = "equeue.control_and"(%349, %done_57) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_58 = "equeue.launch"(%345, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %351 = "equeue.control_and"(%350, %done_58) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_59 = "equeue.launch"(%345, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %352 = "equeue.control_and"(%351, %done_59) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_60 = "equeue.launch"(%345, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %353 = "equeue.control_and"(%352, %done_60) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_61 = "equeue.launch"(%345, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %354 = "equeue.control_and"(%353, %done_61) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_62 = "equeue.launch"(%345, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %355 = "equeue.control_and"(%354, %done_62) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_63 = "equeue.launch"(%345, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %356 = "equeue.control_and"(%355, %done_63) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_64 = "equeue.launch"(%345, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %357 = "equeue.control_and"(%356, %done_64) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_65 = "equeue.launch"(%345, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %358 = "equeue.control_and"(%357, %done_65) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_66 = "equeue.launch"(%345, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %359 = "equeue.control_and"(%358, %done_66) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_67 = "equeue.launch"(%345, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %360 = "equeue.control_and"(%359, %done_67) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_68 = "equeue.launch"(%345, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %361 = "equeue.control_and"(%360, %done_68) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_69 = "equeue.launch"(%345, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %362 = "equeue.control_and"(%361, %done_69) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_70 = "equeue.launch"(%345, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %363 = "equeue.control_and"(%362, %done_70) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_71 = "equeue.launch"(%345, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %364 = "equeue.control_and"(%363, %done_71) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_72 = "equeue.launch"(%345, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %365 = "equeue.control_and"(%364, %done_72) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_73 = "equeue.launch"(%345, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %366 = "equeue.control_and"(%365, %done_73) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_74 = "equeue.launch"(%345, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %367 = "equeue.control_and"(%366, %done_74) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_75 = "equeue.launch"(%345, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %368 = "equeue.control_and"(%367, %done_75) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_76 = "equeue.launch"(%345, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %369 = "equeue.control_and"(%368, %done_76) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%369) : (!equeue.signal) -> ()
      %370 = "equeue.control_start"() : () -> !equeue.signal
      %c0_77 = constant 0 : index
      %371 = "equeue.memcpy"(%370, %122, %127, %111, %c0_77) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %372 = "equeue.memcpy"(%370, %122, %133, %113, %c0_77) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %373 = "equeue.control_and"(%372, %371) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %374 = "equeue.memcpy"(%370, %122, %139, %115, %c0_77) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %375 = "equeue.control_and"(%374, %373) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %376 = "equeue.memcpy"(%370, %122, %145, %117, %c0_77) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %377 = "equeue.control_and"(%376, %375) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %378 = "equeue.memcpy"(%370, %121, %129, %102, %c0_77) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %379 = "equeue.memcpy"(%370, %121, %159, %104, %c0_77) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %380 = "equeue.control_and"(%379, %378) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %381 = "equeue.memcpy"(%370, %121, %189, %106, %c0_77) {dest_bank = 1 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %382 = "equeue.control_and"(%381, %380) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %383 = "equeue.memcpy"(%370, %121, %219, %108, %c0_77) {dest_bank = 1 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %384 = "equeue.control_and"(%383, %382) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%384, %377) : (!equeue.signal, !equeue.signal) -> ()
      %385 = "equeue.control_start"() : () -> !equeue.signal
      %done_78 = "equeue.launch"(%385, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_79 = "equeue.launch"(%385, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %386 = "equeue.control_and"(%done_78, %done_79) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_80 = "equeue.launch"(%385, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %387 = "equeue.control_and"(%386, %done_80) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_81 = "equeue.launch"(%385, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %388 = "equeue.control_and"(%387, %done_81) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_82 = "equeue.launch"(%385, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %389 = "equeue.control_and"(%388, %done_82) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_83 = "equeue.launch"(%385, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %390 = "equeue.control_and"(%389, %done_83) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_84 = "equeue.launch"(%385, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %391 = "equeue.control_and"(%390, %done_84) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_85 = "equeue.launch"(%385, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %392 = "equeue.control_and"(%391, %done_85) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_86 = "equeue.launch"(%385, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %393 = "equeue.control_and"(%392, %done_86) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_87 = "equeue.launch"(%385, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %394 = "equeue.control_and"(%393, %done_87) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_88 = "equeue.launch"(%385, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %395 = "equeue.control_and"(%394, %done_88) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_89 = "equeue.launch"(%385, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %396 = "equeue.control_and"(%395, %done_89) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_90 = "equeue.launch"(%385, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %397 = "equeue.control_and"(%396, %done_90) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_91 = "equeue.launch"(%385, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %398 = "equeue.control_and"(%397, %done_91) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_92 = "equeue.launch"(%385, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %399 = "equeue.control_and"(%398, %done_92) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_93 = "equeue.launch"(%385, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %400 = "equeue.control_and"(%399, %done_93) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_94 = "equeue.launch"(%385, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %401 = "equeue.control_and"(%400, %done_94) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_95 = "equeue.launch"(%385, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %402 = "equeue.control_and"(%401, %done_95) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_96 = "equeue.launch"(%385, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %403 = "equeue.control_and"(%402, %done_96) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_97 = "equeue.launch"(%385, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %404 = "equeue.control_and"(%403, %done_97) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_98 = "equeue.launch"(%385, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %405 = "equeue.control_and"(%404, %done_98) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_99 = "equeue.launch"(%385, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %406 = "equeue.control_and"(%405, %done_99) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_100 = "equeue.launch"(%385, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %407 = "equeue.control_and"(%406, %done_100) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_101 = "equeue.launch"(%385, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %408 = "equeue.control_and"(%407, %done_101) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_102 = "equeue.launch"(%385, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %409 = "equeue.control_and"(%408, %done_102) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%409) : (!equeue.signal) -> ()
      %410 = "equeue.control_start"() : () -> !equeue.signal
      %c0_103 = constant 0 : index
      %411 = "equeue.memcpy"(%410, %122, %127, %111, %c0_103) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %412 = "equeue.memcpy"(%410, %122, %133, %113, %c0_103) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %413 = "equeue.control_and"(%412, %411) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %414 = "equeue.memcpy"(%410, %122, %139, %115, %c0_103) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %415 = "equeue.control_and"(%414, %413) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %416 = "equeue.memcpy"(%410, %122, %145, %117, %c0_103) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %417 = "equeue.control_and"(%416, %415) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %418 = "equeue.memcpy"(%410, %122, %151, %119, %c0_103) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %419 = "equeue.control_and"(%418, %417) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %420 = "equeue.memcpy"(%410, %121, %129, %102, %c0_103) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %421 = "equeue.memcpy"(%410, %121, %159, %104, %c0_103) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %422 = "equeue.control_and"(%421, %420) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %423 = "equeue.memcpy"(%410, %121, %189, %106, %c0_103) {dest_bank = 1 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %424 = "equeue.control_and"(%423, %422) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %425 = "equeue.memcpy"(%410, %121, %219, %108, %c0_103) {dest_bank = 1 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %426 = "equeue.control_and"(%425, %424) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %427 = "equeue.memcpy"(%410, %121, %249, %110, %c0_103) {dest_bank = 1 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %428 = "equeue.control_and"(%427, %426) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%428, %419) : (!equeue.signal, !equeue.signal) -> ()
      %429 = "equeue.control_start"() : () -> !equeue.signal
      %done_104 = "equeue.launch"(%429, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_105 = "equeue.launch"(%429, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %430 = "equeue.control_and"(%done_104, %done_105) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_106 = "equeue.launch"(%429, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %431 = "equeue.control_and"(%430, %done_106) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_107 = "equeue.launch"(%429, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %432 = "equeue.control_and"(%431, %done_107) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_108 = "equeue.launch"(%429, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %433 = "equeue.control_and"(%432, %done_108) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_109 = "equeue.launch"(%429, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %434 = "equeue.control_and"(%433, %done_109) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_110 = "equeue.launch"(%429, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %435 = "equeue.control_and"(%434, %done_110) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_111 = "equeue.launch"(%429, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %436 = "equeue.control_and"(%435, %done_111) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_112 = "equeue.launch"(%429, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %437 = "equeue.control_and"(%436, %done_112) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_113 = "equeue.launch"(%429, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %438 = "equeue.control_and"(%437, %done_113) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_114 = "equeue.launch"(%429, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %439 = "equeue.control_and"(%438, %done_114) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_115 = "equeue.launch"(%429, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %440 = "equeue.control_and"(%439, %done_115) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_116 = "equeue.launch"(%429, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %441 = "equeue.control_and"(%440, %done_116) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_117 = "equeue.launch"(%429, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %442 = "equeue.control_and"(%441, %done_117) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_118 = "equeue.launch"(%429, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %443 = "equeue.control_and"(%442, %done_118) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_119 = "equeue.launch"(%429, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %444 = "equeue.control_and"(%443, %done_119) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_120 = "equeue.launch"(%429, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %445 = "equeue.control_and"(%444, %done_120) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_121 = "equeue.launch"(%429, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %446 = "equeue.control_and"(%445, %done_121) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_122 = "equeue.launch"(%429, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %447 = "equeue.control_and"(%446, %done_122) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_123 = "equeue.launch"(%429, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %448 = "equeue.control_and"(%447, %done_123) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_124 = "equeue.launch"(%429, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %449 = "equeue.control_and"(%448, %done_124) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_125 = "equeue.launch"(%429, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %450 = "equeue.control_and"(%449, %done_125) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_126 = "equeue.launch"(%429, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %451 = "equeue.control_and"(%450, %done_126) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_127 = "equeue.launch"(%429, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %452 = "equeue.control_and"(%451, %done_127) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_128 = "equeue.launch"(%429, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %453 = "equeue.control_and"(%452, %done_128) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%453) : (!equeue.signal) -> ()
      %454 = "equeue.control_start"() : () -> !equeue.signal
      %c0_129 = constant 0 : index
      %455 = "equeue.memcpy"(%454, %122, %127, %111, %c0_129) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %456 = "equeue.memcpy"(%454, %122, %133, %113, %c0_129) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %457 = "equeue.control_and"(%456, %455) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %458 = "equeue.memcpy"(%454, %122, %139, %115, %c0_129) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %459 = "equeue.control_and"(%458, %457) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %460 = "equeue.memcpy"(%454, %122, %145, %117, %c0_129) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %461 = "equeue.control_and"(%460, %459) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %462 = "equeue.memcpy"(%454, %122, %151, %119, %c0_129) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %463 = "equeue.control_and"(%462, %461) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %464 = "equeue.memcpy"(%454, %121, %129, %102, %c0_129) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %465 = "equeue.memcpy"(%454, %121, %159, %104, %c0_129) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %466 = "equeue.control_and"(%465, %464) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %467 = "equeue.memcpy"(%454, %121, %189, %106, %c0_129) {dest_bank = 1 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %468 = "equeue.control_and"(%467, %466) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %469 = "equeue.memcpy"(%454, %121, %219, %108, %c0_129) {dest_bank = 1 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %470 = "equeue.control_and"(%469, %468) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %471 = "equeue.memcpy"(%454, %121, %249, %110, %c0_129) {dest_bank = 1 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %472 = "equeue.control_and"(%471, %470) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%472, %463) : (!equeue.signal, !equeue.signal) -> ()
      %473 = "equeue.control_start"() : () -> !equeue.signal
      %done_130 = "equeue.launch"(%473, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_131 = "equeue.launch"(%473, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %474 = "equeue.control_and"(%done_130, %done_131) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_132 = "equeue.launch"(%473, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %475 = "equeue.control_and"(%474, %done_132) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_133 = "equeue.launch"(%473, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %476 = "equeue.control_and"(%475, %done_133) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_134 = "equeue.launch"(%473, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %477 = "equeue.control_and"(%476, %done_134) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_135 = "equeue.launch"(%473, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %478 = "equeue.control_and"(%477, %done_135) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_136 = "equeue.launch"(%473, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %479 = "equeue.control_and"(%478, %done_136) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_137 = "equeue.launch"(%473, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %480 = "equeue.control_and"(%479, %done_137) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_138 = "equeue.launch"(%473, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %481 = "equeue.control_and"(%480, %done_138) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_139 = "equeue.launch"(%473, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %482 = "equeue.control_and"(%481, %done_139) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_140 = "equeue.launch"(%473, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %483 = "equeue.control_and"(%482, %done_140) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_141 = "equeue.launch"(%473, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %484 = "equeue.control_and"(%483, %done_141) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_142 = "equeue.launch"(%473, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %485 = "equeue.control_and"(%484, %done_142) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_143 = "equeue.launch"(%473, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %486 = "equeue.control_and"(%485, %done_143) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_144 = "equeue.launch"(%473, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %487 = "equeue.control_and"(%486, %done_144) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_145 = "equeue.launch"(%473, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %488 = "equeue.control_and"(%487, %done_145) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_146 = "equeue.launch"(%473, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %489 = "equeue.control_and"(%488, %done_146) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_147 = "equeue.launch"(%473, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %490 = "equeue.control_and"(%489, %done_147) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_148 = "equeue.launch"(%473, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %491 = "equeue.control_and"(%490, %done_148) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_149 = "equeue.launch"(%473, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %492 = "equeue.control_and"(%491, %done_149) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_150 = "equeue.launch"(%473, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %493 = "equeue.control_and"(%492, %done_150) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_151 = "equeue.launch"(%473, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %494 = "equeue.control_and"(%493, %done_151) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_152 = "equeue.launch"(%473, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %495 = "equeue.control_and"(%494, %done_152) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_153 = "equeue.launch"(%473, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %496 = "equeue.control_and"(%495, %done_153) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_154 = "equeue.launch"(%473, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %497 = "equeue.control_and"(%496, %done_154) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%497) : (!equeue.signal) -> ()
      %498 = "equeue.control_start"() : () -> !equeue.signal
      %c0_155 = constant 0 : index
      %499 = "equeue.memcpy"(%498, %122, %127, %111, %c0_155) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %500 = "equeue.memcpy"(%498, %122, %133, %113, %c0_155) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %501 = "equeue.control_and"(%500, %499) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %502 = "equeue.memcpy"(%498, %122, %139, %115, %c0_155) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %503 = "equeue.control_and"(%502, %501) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %504 = "equeue.memcpy"(%498, %122, %145, %117, %c0_155) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %505 = "equeue.control_and"(%504, %503) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %506 = "equeue.memcpy"(%498, %122, %151, %119, %c0_155) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %507 = "equeue.control_and"(%506, %505) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %508 = "equeue.memcpy"(%498, %121, %129, %102, %c0_155) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %509 = "equeue.memcpy"(%498, %121, %159, %104, %c0_155) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %510 = "equeue.control_and"(%509, %508) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %511 = "equeue.memcpy"(%498, %121, %189, %106, %c0_155) {dest_bank = 1 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %512 = "equeue.control_and"(%511, %510) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %513 = "equeue.memcpy"(%498, %121, %219, %108, %c0_155) {dest_bank = 1 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %514 = "equeue.control_and"(%513, %512) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %515 = "equeue.memcpy"(%498, %121, %249, %110, %c0_155) {dest_bank = 1 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %516 = "equeue.control_and"(%515, %514) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%516, %507) : (!equeue.signal, !equeue.signal) -> ()
      %517 = "equeue.control_start"() : () -> !equeue.signal
      %done_156 = "equeue.launch"(%517, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_157 = "equeue.launch"(%517, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %518 = "equeue.control_and"(%done_156, %done_157) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_158 = "equeue.launch"(%517, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %519 = "equeue.control_and"(%518, %done_158) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_159 = "equeue.launch"(%517, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %520 = "equeue.control_and"(%519, %done_159) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_160 = "equeue.launch"(%517, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %521 = "equeue.control_and"(%520, %done_160) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_161 = "equeue.launch"(%517, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %522 = "equeue.control_and"(%521, %done_161) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_162 = "equeue.launch"(%517, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %523 = "equeue.control_and"(%522, %done_162) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_163 = "equeue.launch"(%517, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %524 = "equeue.control_and"(%523, %done_163) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_164 = "equeue.launch"(%517, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %525 = "equeue.control_and"(%524, %done_164) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_165 = "equeue.launch"(%517, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %526 = "equeue.control_and"(%525, %done_165) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_166 = "equeue.launch"(%517, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %527 = "equeue.control_and"(%526, %done_166) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_167 = "equeue.launch"(%517, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %528 = "equeue.control_and"(%527, %done_167) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_168 = "equeue.launch"(%517, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %529 = "equeue.control_and"(%528, %done_168) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_169 = "equeue.launch"(%517, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %530 = "equeue.control_and"(%529, %done_169) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_170 = "equeue.launch"(%517, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %531 = "equeue.control_and"(%530, %done_170) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_171 = "equeue.launch"(%517, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %532 = "equeue.control_and"(%531, %done_171) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_172 = "equeue.launch"(%517, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %533 = "equeue.control_and"(%532, %done_172) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_173 = "equeue.launch"(%517, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %534 = "equeue.control_and"(%533, %done_173) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_174 = "equeue.launch"(%517, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %535 = "equeue.control_and"(%534, %done_174) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_175 = "equeue.launch"(%517, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %536 = "equeue.control_and"(%535, %done_175) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_176 = "equeue.launch"(%517, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %537 = "equeue.control_and"(%536, %done_176) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_177 = "equeue.launch"(%517, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %538 = "equeue.control_and"(%537, %done_177) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_178 = "equeue.launch"(%517, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %539 = "equeue.control_and"(%538, %done_178) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_179 = "equeue.launch"(%517, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %540 = "equeue.control_and"(%539, %done_179) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_180 = "equeue.launch"(%517, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %541 = "equeue.control_and"(%540, %done_180) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%541) : (!equeue.signal) -> ()
      %542 = "equeue.control_start"() : () -> !equeue.signal
      %c0_181 = constant 0 : index
      %543 = "equeue.memcpy"(%542, %122, %127, %111, %c0_181) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %544 = "equeue.memcpy"(%542, %122, %133, %113, %c0_181) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %545 = "equeue.control_and"(%544, %543) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %546 = "equeue.memcpy"(%542, %122, %139, %115, %c0_181) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %547 = "equeue.control_and"(%546, %545) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %548 = "equeue.memcpy"(%542, %122, %145, %117, %c0_181) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %549 = "equeue.control_and"(%548, %547) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %550 = "equeue.memcpy"(%542, %122, %151, %119, %c0_181) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %551 = "equeue.control_and"(%550, %549) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %552 = "equeue.memcpy"(%542, %121, %129, %102, %c0_181) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %553 = "equeue.memcpy"(%542, %121, %159, %104, %c0_181) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %554 = "equeue.control_and"(%553, %552) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %555 = "equeue.memcpy"(%542, %121, %189, %106, %c0_181) {dest_bank = 1 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %556 = "equeue.control_and"(%555, %554) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %557 = "equeue.memcpy"(%542, %121, %219, %108, %c0_181) {dest_bank = 1 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %558 = "equeue.control_and"(%557, %556) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %559 = "equeue.memcpy"(%542, %121, %249, %110, %c0_181) {dest_bank = 1 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %560 = "equeue.control_and"(%559, %558) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%560, %551) : (!equeue.signal, !equeue.signal) -> ()
      %561 = "equeue.control_start"() : () -> !equeue.signal
      %done_182 = "equeue.launch"(%561, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_183 = "equeue.launch"(%561, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %562 = "equeue.control_and"(%done_182, %done_183) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_184 = "equeue.launch"(%561, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %563 = "equeue.control_and"(%562, %done_184) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_185 = "equeue.launch"(%561, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %564 = "equeue.control_and"(%563, %done_185) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_186 = "equeue.launch"(%561, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %565 = "equeue.control_and"(%564, %done_186) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_187 = "equeue.launch"(%561, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %566 = "equeue.control_and"(%565, %done_187) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_188 = "equeue.launch"(%561, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %567 = "equeue.control_and"(%566, %done_188) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_189 = "equeue.launch"(%561, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %568 = "equeue.control_and"(%567, %done_189) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_190 = "equeue.launch"(%561, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %569 = "equeue.control_and"(%568, %done_190) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_191 = "equeue.launch"(%561, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %570 = "equeue.control_and"(%569, %done_191) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_192 = "equeue.launch"(%561, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %571 = "equeue.control_and"(%570, %done_192) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_193 = "equeue.launch"(%561, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %572 = "equeue.control_and"(%571, %done_193) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_194 = "equeue.launch"(%561, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %573 = "equeue.control_and"(%572, %done_194) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_195 = "equeue.launch"(%561, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %574 = "equeue.control_and"(%573, %done_195) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_196 = "equeue.launch"(%561, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %575 = "equeue.control_and"(%574, %done_196) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_197 = "equeue.launch"(%561, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %576 = "equeue.control_and"(%575, %done_197) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_198 = "equeue.launch"(%561, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %577 = "equeue.control_and"(%576, %done_198) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_199 = "equeue.launch"(%561, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %578 = "equeue.control_and"(%577, %done_199) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_200 = "equeue.launch"(%561, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %579 = "equeue.control_and"(%578, %done_200) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_201 = "equeue.launch"(%561, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %580 = "equeue.control_and"(%579, %done_201) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_202 = "equeue.launch"(%561, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %581 = "equeue.control_and"(%580, %done_202) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_203 = "equeue.launch"(%561, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %582 = "equeue.control_and"(%581, %done_203) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_204 = "equeue.launch"(%561, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %583 = "equeue.control_and"(%582, %done_204) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_205 = "equeue.launch"(%561, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %584 = "equeue.control_and"(%583, %done_205) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_206 = "equeue.launch"(%561, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %585 = "equeue.control_and"(%584, %done_206) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%585) : (!equeue.signal) -> ()
      %586 = "equeue.control_start"() : () -> !equeue.signal
      %c0_207 = constant 0 : index
      %587 = "equeue.memcpy"(%586, %122, %127, %111, %c0_207) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %588 = "equeue.memcpy"(%586, %122, %133, %113, %c0_207) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %589 = "equeue.control_and"(%588, %587) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %590 = "equeue.memcpy"(%586, %122, %139, %115, %c0_207) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %591 = "equeue.control_and"(%590, %589) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %592 = "equeue.memcpy"(%586, %122, %145, %117, %c0_207) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %593 = "equeue.control_and"(%592, %591) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %594 = "equeue.memcpy"(%586, %122, %151, %119, %c0_207) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %595 = "equeue.control_and"(%594, %593) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %596 = "equeue.memcpy"(%586, %121, %129, %102, %c0_207) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %597 = "equeue.memcpy"(%586, %121, %159, %104, %c0_207) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %598 = "equeue.control_and"(%597, %596) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %599 = "equeue.memcpy"(%586, %121, %189, %106, %c0_207) {dest_bank = 1 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %600 = "equeue.control_and"(%599, %598) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %601 = "equeue.memcpy"(%586, %121, %219, %108, %c0_207) {dest_bank = 1 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %602 = "equeue.control_and"(%601, %600) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %603 = "equeue.memcpy"(%586, %121, %249, %110, %c0_207) {dest_bank = 1 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %604 = "equeue.control_and"(%603, %602) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%604, %595) : (!equeue.signal, !equeue.signal) -> ()
      %605 = "equeue.control_start"() : () -> !equeue.signal
      %done_208 = "equeue.launch"(%605, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_209 = "equeue.launch"(%605, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %606 = "equeue.control_and"(%done_208, %done_209) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_210 = "equeue.launch"(%605, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %607 = "equeue.control_and"(%606, %done_210) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_211 = "equeue.launch"(%605, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %608 = "equeue.control_and"(%607, %done_211) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_212 = "equeue.launch"(%605, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %609 = "equeue.control_and"(%608, %done_212) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_213 = "equeue.launch"(%605, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %610 = "equeue.control_and"(%609, %done_213) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_214 = "equeue.launch"(%605, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %611 = "equeue.control_and"(%610, %done_214) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_215 = "equeue.launch"(%605, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %612 = "equeue.control_and"(%611, %done_215) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_216 = "equeue.launch"(%605, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %613 = "equeue.control_and"(%612, %done_216) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_217 = "equeue.launch"(%605, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %614 = "equeue.control_and"(%613, %done_217) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_218 = "equeue.launch"(%605, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %615 = "equeue.control_and"(%614, %done_218) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_219 = "equeue.launch"(%605, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %616 = "equeue.control_and"(%615, %done_219) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_220 = "equeue.launch"(%605, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %617 = "equeue.control_and"(%616, %done_220) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_221 = "equeue.launch"(%605, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %618 = "equeue.control_and"(%617, %done_221) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_222 = "equeue.launch"(%605, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %619 = "equeue.control_and"(%618, %done_222) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_223 = "equeue.launch"(%605, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %620 = "equeue.control_and"(%619, %done_223) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_224 = "equeue.launch"(%605, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %621 = "equeue.control_and"(%620, %done_224) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_225 = "equeue.launch"(%605, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %622 = "equeue.control_and"(%621, %done_225) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_226 = "equeue.launch"(%605, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %623 = "equeue.control_and"(%622, %done_226) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_227 = "equeue.launch"(%605, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %624 = "equeue.control_and"(%623, %done_227) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_228 = "equeue.launch"(%605, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %625 = "equeue.control_and"(%624, %done_228) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_229 = "equeue.launch"(%605, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %626 = "equeue.control_and"(%625, %done_229) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_230 = "equeue.launch"(%605, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %627 = "equeue.control_and"(%626, %done_230) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_231 = "equeue.launch"(%605, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %628 = "equeue.control_and"(%627, %done_231) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_232 = "equeue.launch"(%605, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %629 = "equeue.control_and"(%628, %done_232) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%629) : (!equeue.signal) -> ()
      %630 = "equeue.control_start"() : () -> !equeue.signal
      %c0_233 = constant 0 : index
      %631 = "equeue.memcpy"(%630, %122, %127, %111, %c0_233) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %632 = "equeue.memcpy"(%630, %122, %133, %113, %c0_233) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %633 = "equeue.control_and"(%632, %631) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %634 = "equeue.memcpy"(%630, %122, %139, %115, %c0_233) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %635 = "equeue.control_and"(%634, %633) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %636 = "equeue.memcpy"(%630, %122, %145, %117, %c0_233) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %637 = "equeue.control_and"(%636, %635) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %638 = "equeue.memcpy"(%630, %122, %151, %119, %c0_233) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %639 = "equeue.control_and"(%638, %637) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %640 = "equeue.memcpy"(%630, %121, %129, %102, %c0_233) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %641 = "equeue.memcpy"(%630, %121, %159, %104, %c0_233) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %642 = "equeue.control_and"(%641, %640) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %643 = "equeue.memcpy"(%630, %121, %189, %106, %c0_233) {dest_bank = 1 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %644 = "equeue.control_and"(%643, %642) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %645 = "equeue.memcpy"(%630, %121, %219, %108, %c0_233) {dest_bank = 1 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %646 = "equeue.control_and"(%645, %644) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %647 = "equeue.memcpy"(%630, %121, %249, %110, %c0_233) {dest_bank = 1 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %648 = "equeue.control_and"(%647, %646) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%648, %639) : (!equeue.signal, !equeue.signal) -> ()
      %649 = "equeue.control_start"() : () -> !equeue.signal
      %done_234 = "equeue.launch"(%649, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_235 = "equeue.launch"(%649, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %650 = "equeue.control_and"(%done_234, %done_235) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_236 = "equeue.launch"(%649, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %651 = "equeue.control_and"(%650, %done_236) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_237 = "equeue.launch"(%649, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %652 = "equeue.control_and"(%651, %done_237) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_238 = "equeue.launch"(%649, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %653 = "equeue.control_and"(%652, %done_238) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_239 = "equeue.launch"(%649, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %654 = "equeue.control_and"(%653, %done_239) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_240 = "equeue.launch"(%649, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %655 = "equeue.control_and"(%654, %done_240) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_241 = "equeue.launch"(%649, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %656 = "equeue.control_and"(%655, %done_241) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_242 = "equeue.launch"(%649, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %657 = "equeue.control_and"(%656, %done_242) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_243 = "equeue.launch"(%649, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %658 = "equeue.control_and"(%657, %done_243) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_244 = "equeue.launch"(%649, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %659 = "equeue.control_and"(%658, %done_244) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_245 = "equeue.launch"(%649, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %660 = "equeue.control_and"(%659, %done_245) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_246 = "equeue.launch"(%649, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %661 = "equeue.control_and"(%660, %done_246) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_247 = "equeue.launch"(%649, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %662 = "equeue.control_and"(%661, %done_247) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_248 = "equeue.launch"(%649, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %663 = "equeue.control_and"(%662, %done_248) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_249 = "equeue.launch"(%649, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %664 = "equeue.control_and"(%663, %done_249) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_250 = "equeue.launch"(%649, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %665 = "equeue.control_and"(%664, %done_250) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_251 = "equeue.launch"(%649, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %666 = "equeue.control_and"(%665, %done_251) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_252 = "equeue.launch"(%649, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %667 = "equeue.control_and"(%666, %done_252) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_253 = "equeue.launch"(%649, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %668 = "equeue.control_and"(%667, %done_253) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_254 = "equeue.launch"(%649, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %669 = "equeue.control_and"(%668, %done_254) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_255 = "equeue.launch"(%649, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %670 = "equeue.control_and"(%669, %done_255) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_256 = "equeue.launch"(%649, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %671 = "equeue.control_and"(%670, %done_256) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_257 = "equeue.launch"(%649, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %672 = "equeue.control_and"(%671, %done_257) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_258 = "equeue.launch"(%649, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %673 = "equeue.control_and"(%672, %done_258) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%673) : (!equeue.signal) -> ()
      %674 = "equeue.control_start"() : () -> !equeue.signal
      %c0_259 = constant 0 : index
      %675 = "equeue.memcpy"(%674, %122, %127, %111, %c0_259) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %676 = "equeue.memcpy"(%674, %122, %133, %113, %c0_259) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %677 = "equeue.control_and"(%676, %675) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %678 = "equeue.memcpy"(%674, %122, %139, %115, %c0_259) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %679 = "equeue.control_and"(%678, %677) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %680 = "equeue.memcpy"(%674, %122, %145, %117, %c0_259) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %681 = "equeue.control_and"(%680, %679) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %682 = "equeue.memcpy"(%674, %122, %151, %119, %c0_259) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %683 = "equeue.control_and"(%682, %681) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %684 = "equeue.memcpy"(%674, %121, %129, %102, %c0_259) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %685 = "equeue.memcpy"(%674, %121, %159, %104, %c0_259) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %686 = "equeue.control_and"(%685, %684) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %687 = "equeue.memcpy"(%674, %121, %189, %106, %c0_259) {dest_bank = 1 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %688 = "equeue.control_and"(%687, %686) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %689 = "equeue.memcpy"(%674, %121, %219, %108, %c0_259) {dest_bank = 1 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %690 = "equeue.control_and"(%689, %688) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %691 = "equeue.memcpy"(%674, %121, %249, %110, %c0_259) {dest_bank = 1 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %692 = "equeue.control_and"(%691, %690) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%692, %683) : (!equeue.signal, !equeue.signal) -> ()
      %693 = "equeue.control_start"() : () -> !equeue.signal
      %done_260 = "equeue.launch"(%693, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_261 = "equeue.launch"(%693, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %694 = "equeue.control_and"(%done_260, %done_261) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_262 = "equeue.launch"(%693, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %695 = "equeue.control_and"(%694, %done_262) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_263 = "equeue.launch"(%693, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %696 = "equeue.control_and"(%695, %done_263) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_264 = "equeue.launch"(%693, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %697 = "equeue.control_and"(%696, %done_264) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_265 = "equeue.launch"(%693, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %698 = "equeue.control_and"(%697, %done_265) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_266 = "equeue.launch"(%693, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %699 = "equeue.control_and"(%698, %done_266) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_267 = "equeue.launch"(%693, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %700 = "equeue.control_and"(%699, %done_267) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_268 = "equeue.launch"(%693, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %701 = "equeue.control_and"(%700, %done_268) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_269 = "equeue.launch"(%693, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %702 = "equeue.control_and"(%701, %done_269) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_270 = "equeue.launch"(%693, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %703 = "equeue.control_and"(%702, %done_270) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_271 = "equeue.launch"(%693, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %704 = "equeue.control_and"(%703, %done_271) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_272 = "equeue.launch"(%693, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %705 = "equeue.control_and"(%704, %done_272) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_273 = "equeue.launch"(%693, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %706 = "equeue.control_and"(%705, %done_273) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_274 = "equeue.launch"(%693, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %707 = "equeue.control_and"(%706, %done_274) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_275 = "equeue.launch"(%693, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %708 = "equeue.control_and"(%707, %done_275) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_276 = "equeue.launch"(%693, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %709 = "equeue.control_and"(%708, %done_276) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_277 = "equeue.launch"(%693, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %710 = "equeue.control_and"(%709, %done_277) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_278 = "equeue.launch"(%693, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %711 = "equeue.control_and"(%710, %done_278) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_279 = "equeue.launch"(%693, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %712 = "equeue.control_and"(%711, %done_279) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_280 = "equeue.launch"(%693, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %713 = "equeue.control_and"(%712, %done_280) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_281 = "equeue.launch"(%693, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %714 = "equeue.control_and"(%713, %done_281) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_282 = "equeue.launch"(%693, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %715 = "equeue.control_and"(%714, %done_282) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_283 = "equeue.launch"(%693, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %716 = "equeue.control_and"(%715, %done_283) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_284 = "equeue.launch"(%693, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %717 = "equeue.control_and"(%716, %done_284) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%717) : (!equeue.signal) -> ()
      %718 = "equeue.control_start"() : () -> !equeue.signal
      %c0_285 = constant 0 : index
      %719 = "equeue.memcpy"(%718, %122, %127, %111, %c0_285) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %720 = "equeue.memcpy"(%718, %122, %133, %113, %c0_285) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %721 = "equeue.control_and"(%720, %719) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %722 = "equeue.memcpy"(%718, %122, %139, %115, %c0_285) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %723 = "equeue.control_and"(%722, %721) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %724 = "equeue.memcpy"(%718, %122, %145, %117, %c0_285) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %725 = "equeue.control_and"(%724, %723) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %726 = "equeue.memcpy"(%718, %122, %151, %119, %c0_285) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %727 = "equeue.control_and"(%726, %725) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %728 = "equeue.memcpy"(%718, %121, %129, %102, %c0_285) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %729 = "equeue.memcpy"(%718, %121, %159, %104, %c0_285) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %730 = "equeue.control_and"(%729, %728) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %731 = "equeue.memcpy"(%718, %121, %189, %106, %c0_285) {dest_bank = 1 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %732 = "equeue.control_and"(%731, %730) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %733 = "equeue.memcpy"(%718, %121, %219, %108, %c0_285) {dest_bank = 1 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %734 = "equeue.control_and"(%733, %732) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %735 = "equeue.memcpy"(%718, %121, %249, %110, %c0_285) {dest_bank = 1 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %736 = "equeue.control_and"(%735, %734) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%736, %727) : (!equeue.signal, !equeue.signal) -> ()
      %737 = "equeue.control_start"() : () -> !equeue.signal
      %done_286 = "equeue.launch"(%737, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_287 = "equeue.launch"(%737, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %738 = "equeue.control_and"(%done_286, %done_287) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_288 = "equeue.launch"(%737, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %739 = "equeue.control_and"(%738, %done_288) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_289 = "equeue.launch"(%737, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %740 = "equeue.control_and"(%739, %done_289) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_290 = "equeue.launch"(%737, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %741 = "equeue.control_and"(%740, %done_290) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_291 = "equeue.launch"(%737, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %742 = "equeue.control_and"(%741, %done_291) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_292 = "equeue.launch"(%737, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %743 = "equeue.control_and"(%742, %done_292) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_293 = "equeue.launch"(%737, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %744 = "equeue.control_and"(%743, %done_293) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_294 = "equeue.launch"(%737, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %745 = "equeue.control_and"(%744, %done_294) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_295 = "equeue.launch"(%737, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %746 = "equeue.control_and"(%745, %done_295) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_296 = "equeue.launch"(%737, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %747 = "equeue.control_and"(%746, %done_296) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_297 = "equeue.launch"(%737, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %748 = "equeue.control_and"(%747, %done_297) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_298 = "equeue.launch"(%737, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %749 = "equeue.control_and"(%748, %done_298) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_299 = "equeue.launch"(%737, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %750 = "equeue.control_and"(%749, %done_299) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_300 = "equeue.launch"(%737, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %751 = "equeue.control_and"(%750, %done_300) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_301 = "equeue.launch"(%737, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %752 = "equeue.control_and"(%751, %done_301) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_302 = "equeue.launch"(%737, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %753 = "equeue.control_and"(%752, %done_302) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_303 = "equeue.launch"(%737, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %754 = "equeue.control_and"(%753, %done_303) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_304 = "equeue.launch"(%737, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %755 = "equeue.control_and"(%754, %done_304) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_305 = "equeue.launch"(%737, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %756 = "equeue.control_and"(%755, %done_305) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_306 = "equeue.launch"(%737, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %757 = "equeue.control_and"(%756, %done_306) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_307 = "equeue.launch"(%737, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %758 = "equeue.control_and"(%757, %done_307) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_308 = "equeue.launch"(%737, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %759 = "equeue.control_and"(%758, %done_308) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_309 = "equeue.launch"(%737, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %760 = "equeue.control_and"(%759, %done_309) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_310 = "equeue.launch"(%737, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %761 = "equeue.control_and"(%760, %done_310) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%761) : (!equeue.signal) -> ()
      %762 = "equeue.control_start"() : () -> !equeue.signal
      %c0_311 = constant 0 : index
      %763 = "equeue.memcpy"(%762, %122, %127, %111, %c0_311) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %764 = "equeue.memcpy"(%762, %122, %133, %113, %c0_311) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %765 = "equeue.control_and"(%764, %763) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %766 = "equeue.memcpy"(%762, %122, %139, %115, %c0_311) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %767 = "equeue.control_and"(%766, %765) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %768 = "equeue.memcpy"(%762, %122, %145, %117, %c0_311) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %769 = "equeue.control_and"(%768, %767) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %770 = "equeue.memcpy"(%762, %122, %151, %119, %c0_311) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %771 = "equeue.control_and"(%770, %769) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %772 = "equeue.memcpy"(%762, %121, %129, %102, %c0_311) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %773 = "equeue.memcpy"(%762, %121, %159, %104, %c0_311) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %774 = "equeue.control_and"(%773, %772) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %775 = "equeue.memcpy"(%762, %121, %189, %106, %c0_311) {dest_bank = 1 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %776 = "equeue.control_and"(%775, %774) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %777 = "equeue.memcpy"(%762, %121, %219, %108, %c0_311) {dest_bank = 1 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %778 = "equeue.control_and"(%777, %776) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %779 = "equeue.memcpy"(%762, %121, %249, %110, %c0_311) {dest_bank = 1 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %780 = "equeue.control_and"(%779, %778) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%780, %771) : (!equeue.signal, !equeue.signal) -> ()
      %781 = "equeue.control_start"() : () -> !equeue.signal
      %done_312 = "equeue.launch"(%781, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_313 = "equeue.launch"(%781, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %782 = "equeue.control_and"(%done_312, %done_313) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_314 = "equeue.launch"(%781, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %783 = "equeue.control_and"(%782, %done_314) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_315 = "equeue.launch"(%781, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %784 = "equeue.control_and"(%783, %done_315) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_316 = "equeue.launch"(%781, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %785 = "equeue.control_and"(%784, %done_316) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_317 = "equeue.launch"(%781, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %786 = "equeue.control_and"(%785, %done_317) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_318 = "equeue.launch"(%781, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %787 = "equeue.control_and"(%786, %done_318) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_319 = "equeue.launch"(%781, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %788 = "equeue.control_and"(%787, %done_319) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_320 = "equeue.launch"(%781, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %789 = "equeue.control_and"(%788, %done_320) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_321 = "equeue.launch"(%781, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %790 = "equeue.control_and"(%789, %done_321) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_322 = "equeue.launch"(%781, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %791 = "equeue.control_and"(%790, %done_322) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_323 = "equeue.launch"(%781, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %792 = "equeue.control_and"(%791, %done_323) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_324 = "equeue.launch"(%781, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %793 = "equeue.control_and"(%792, %done_324) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_325 = "equeue.launch"(%781, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %794 = "equeue.control_and"(%793, %done_325) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_326 = "equeue.launch"(%781, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %795 = "equeue.control_and"(%794, %done_326) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_327 = "equeue.launch"(%781, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %796 = "equeue.control_and"(%795, %done_327) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_328 = "equeue.launch"(%781, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %797 = "equeue.control_and"(%796, %done_328) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_329 = "equeue.launch"(%781, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %798 = "equeue.control_and"(%797, %done_329) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_330 = "equeue.launch"(%781, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %799 = "equeue.control_and"(%798, %done_330) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_331 = "equeue.launch"(%781, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %800 = "equeue.control_and"(%799, %done_331) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_332 = "equeue.launch"(%781, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %801 = "equeue.control_and"(%800, %done_332) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_333 = "equeue.launch"(%781, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %802 = "equeue.control_and"(%801, %done_333) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_334 = "equeue.launch"(%781, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %803 = "equeue.control_and"(%802, %done_334) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_335 = "equeue.launch"(%781, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %804 = "equeue.control_and"(%803, %done_335) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_336 = "equeue.launch"(%781, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %805 = "equeue.control_and"(%804, %done_336) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%805) : (!equeue.signal) -> ()
      %806 = "equeue.control_start"() : () -> !equeue.signal
      %c0_337 = constant 0 : index
      %807 = "equeue.memcpy"(%806, %122, %127, %111, %c0_337) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %808 = "equeue.memcpy"(%806, %122, %133, %113, %c0_337) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %809 = "equeue.control_and"(%808, %807) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %810 = "equeue.memcpy"(%806, %122, %139, %115, %c0_337) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %811 = "equeue.control_and"(%810, %809) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %812 = "equeue.memcpy"(%806, %122, %145, %117, %c0_337) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %813 = "equeue.control_and"(%812, %811) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %814 = "equeue.memcpy"(%806, %122, %151, %119, %c0_337) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %815 = "equeue.control_and"(%814, %813) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %816 = "equeue.memcpy"(%806, %121, %129, %102, %c0_337) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %817 = "equeue.memcpy"(%806, %121, %159, %104, %c0_337) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %818 = "equeue.control_and"(%817, %816) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %819 = "equeue.memcpy"(%806, %121, %189, %106, %c0_337) {dest_bank = 1 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %820 = "equeue.control_and"(%819, %818) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %821 = "equeue.memcpy"(%806, %121, %219, %108, %c0_337) {dest_bank = 1 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %822 = "equeue.control_and"(%821, %820) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %823 = "equeue.memcpy"(%806, %121, %249, %110, %c0_337) {dest_bank = 1 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %824 = "equeue.control_and"(%823, %822) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%824, %815) : (!equeue.signal, !equeue.signal) -> ()
      %825 = "equeue.control_start"() : () -> !equeue.signal
      %done_338 = "equeue.launch"(%825, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_339 = "equeue.launch"(%825, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %826 = "equeue.control_and"(%done_338, %done_339) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_340 = "equeue.launch"(%825, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %827 = "equeue.control_and"(%826, %done_340) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_341 = "equeue.launch"(%825, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %828 = "equeue.control_and"(%827, %done_341) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_342 = "equeue.launch"(%825, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %829 = "equeue.control_and"(%828, %done_342) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_343 = "equeue.launch"(%825, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %830 = "equeue.control_and"(%829, %done_343) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_344 = "equeue.launch"(%825, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %831 = "equeue.control_and"(%830, %done_344) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_345 = "equeue.launch"(%825, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %832 = "equeue.control_and"(%831, %done_345) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_346 = "equeue.launch"(%825, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %833 = "equeue.control_and"(%832, %done_346) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_347 = "equeue.launch"(%825, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %834 = "equeue.control_and"(%833, %done_347) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_348 = "equeue.launch"(%825, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %835 = "equeue.control_and"(%834, %done_348) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_349 = "equeue.launch"(%825, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %836 = "equeue.control_and"(%835, %done_349) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_350 = "equeue.launch"(%825, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %837 = "equeue.control_and"(%836, %done_350) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_351 = "equeue.launch"(%825, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %838 = "equeue.control_and"(%837, %done_351) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_352 = "equeue.launch"(%825, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %839 = "equeue.control_and"(%838, %done_352) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_353 = "equeue.launch"(%825, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %840 = "equeue.control_and"(%839, %done_353) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_354 = "equeue.launch"(%825, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %841 = "equeue.control_and"(%840, %done_354) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_355 = "equeue.launch"(%825, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %842 = "equeue.control_and"(%841, %done_355) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_356 = "equeue.launch"(%825, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %843 = "equeue.control_and"(%842, %done_356) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_357 = "equeue.launch"(%825, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %844 = "equeue.control_and"(%843, %done_357) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_358 = "equeue.launch"(%825, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %845 = "equeue.control_and"(%844, %done_358) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_359 = "equeue.launch"(%825, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %846 = "equeue.control_and"(%845, %done_359) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_360 = "equeue.launch"(%825, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %847 = "equeue.control_and"(%846, %done_360) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_361 = "equeue.launch"(%825, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %848 = "equeue.control_and"(%847, %done_361) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_362 = "equeue.launch"(%825, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %849 = "equeue.control_and"(%848, %done_362) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%849) : (!equeue.signal) -> ()
      %850 = "equeue.control_start"() : () -> !equeue.signal
      %c0_363 = constant 0 : index
      %851 = "equeue.memcpy"(%850, %122, %127, %111, %c0_363) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %852 = "equeue.memcpy"(%850, %122, %133, %113, %c0_363) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %853 = "equeue.control_and"(%852, %851) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %854 = "equeue.memcpy"(%850, %122, %139, %115, %c0_363) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %855 = "equeue.control_and"(%854, %853) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %856 = "equeue.memcpy"(%850, %122, %145, %117, %c0_363) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %857 = "equeue.control_and"(%856, %855) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %858 = "equeue.memcpy"(%850, %122, %151, %119, %c0_363) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %859 = "equeue.control_and"(%858, %857) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %860 = "equeue.memcpy"(%850, %121, %129, %102, %c0_363) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %861 = "equeue.memcpy"(%850, %121, %159, %104, %c0_363) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %862 = "equeue.control_and"(%861, %860) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %863 = "equeue.memcpy"(%850, %121, %189, %106, %c0_363) {dest_bank = 1 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %864 = "equeue.control_and"(%863, %862) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %865 = "equeue.memcpy"(%850, %121, %219, %108, %c0_363) {dest_bank = 1 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %866 = "equeue.control_and"(%865, %864) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %867 = "equeue.memcpy"(%850, %121, %249, %110, %c0_363) {dest_bank = 1 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %868 = "equeue.control_and"(%867, %866) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%868, %859) : (!equeue.signal, !equeue.signal) -> ()
      %869 = "equeue.control_start"() : () -> !equeue.signal
      %done_364 = "equeue.launch"(%869, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_365 = "equeue.launch"(%869, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %870 = "equeue.control_and"(%done_364, %done_365) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_366 = "equeue.launch"(%869, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %871 = "equeue.control_and"(%870, %done_366) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_367 = "equeue.launch"(%869, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %872 = "equeue.control_and"(%871, %done_367) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_368 = "equeue.launch"(%869, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %873 = "equeue.control_and"(%872, %done_368) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_369 = "equeue.launch"(%869, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %874 = "equeue.control_and"(%873, %done_369) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_370 = "equeue.launch"(%869, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %875 = "equeue.control_and"(%874, %done_370) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_371 = "equeue.launch"(%869, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %876 = "equeue.control_and"(%875, %done_371) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_372 = "equeue.launch"(%869, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %877 = "equeue.control_and"(%876, %done_372) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_373 = "equeue.launch"(%869, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %878 = "equeue.control_and"(%877, %done_373) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_374 = "equeue.launch"(%869, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %879 = "equeue.control_and"(%878, %done_374) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_375 = "equeue.launch"(%869, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %880 = "equeue.control_and"(%879, %done_375) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_376 = "equeue.launch"(%869, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %881 = "equeue.control_and"(%880, %done_376) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_377 = "equeue.launch"(%869, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %882 = "equeue.control_and"(%881, %done_377) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_378 = "equeue.launch"(%869, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %883 = "equeue.control_and"(%882, %done_378) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_379 = "equeue.launch"(%869, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %884 = "equeue.control_and"(%883, %done_379) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_380 = "equeue.launch"(%869, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %885 = "equeue.control_and"(%884, %done_380) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_381 = "equeue.launch"(%869, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %886 = "equeue.control_and"(%885, %done_381) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_382 = "equeue.launch"(%869, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %887 = "equeue.control_and"(%886, %done_382) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_383 = "equeue.launch"(%869, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %888 = "equeue.control_and"(%887, %done_383) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_384 = "equeue.launch"(%869, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %889 = "equeue.control_and"(%888, %done_384) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_385 = "equeue.launch"(%869, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %890 = "equeue.control_and"(%889, %done_385) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_386 = "equeue.launch"(%869, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %891 = "equeue.control_and"(%890, %done_386) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_387 = "equeue.launch"(%869, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %892 = "equeue.control_and"(%891, %done_387) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_388 = "equeue.launch"(%869, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %893 = "equeue.control_and"(%892, %done_388) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%893) : (!equeue.signal) -> ()
      %894 = "equeue.control_start"() : () -> !equeue.signal
      %c0_389 = constant 0 : index
      %895 = "equeue.memcpy"(%894, %122, %127, %111, %c0_389) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %896 = "equeue.memcpy"(%894, %122, %133, %113, %c0_389) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %897 = "equeue.control_and"(%896, %895) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %898 = "equeue.memcpy"(%894, %122, %139, %115, %c0_389) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %899 = "equeue.control_and"(%898, %897) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %900 = "equeue.memcpy"(%894, %122, %145, %117, %c0_389) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %901 = "equeue.control_and"(%900, %899) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %902 = "equeue.memcpy"(%894, %122, %151, %119, %c0_389) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %903 = "equeue.control_and"(%902, %901) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %904 = "equeue.memcpy"(%894, %121, %129, %102, %c0_389) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %905 = "equeue.memcpy"(%894, %121, %159, %104, %c0_389) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %906 = "equeue.control_and"(%905, %904) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %907 = "equeue.memcpy"(%894, %121, %189, %106, %c0_389) {dest_bank = 1 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %908 = "equeue.control_and"(%907, %906) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %909 = "equeue.memcpy"(%894, %121, %219, %108, %c0_389) {dest_bank = 1 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %910 = "equeue.control_and"(%909, %908) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %911 = "equeue.memcpy"(%894, %121, %249, %110, %c0_389) {dest_bank = 1 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %912 = "equeue.control_and"(%911, %910) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%912, %903) : (!equeue.signal, !equeue.signal) -> ()
      %913 = "equeue.control_start"() : () -> !equeue.signal
      %done_390 = "equeue.launch"(%913, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_391 = "equeue.launch"(%913, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %914 = "equeue.control_and"(%done_390, %done_391) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_392 = "equeue.launch"(%913, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %915 = "equeue.control_and"(%914, %done_392) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_393 = "equeue.launch"(%913, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %916 = "equeue.control_and"(%915, %done_393) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_394 = "equeue.launch"(%913, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %917 = "equeue.control_and"(%916, %done_394) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_395 = "equeue.launch"(%913, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %918 = "equeue.control_and"(%917, %done_395) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_396 = "equeue.launch"(%913, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %919 = "equeue.control_and"(%918, %done_396) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_397 = "equeue.launch"(%913, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %920 = "equeue.control_and"(%919, %done_397) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_398 = "equeue.launch"(%913, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %921 = "equeue.control_and"(%920, %done_398) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_399 = "equeue.launch"(%913, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %922 = "equeue.control_and"(%921, %done_399) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_400 = "equeue.launch"(%913, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %923 = "equeue.control_and"(%922, %done_400) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_401 = "equeue.launch"(%913, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %924 = "equeue.control_and"(%923, %done_401) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_402 = "equeue.launch"(%913, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %925 = "equeue.control_and"(%924, %done_402) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_403 = "equeue.launch"(%913, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %926 = "equeue.control_and"(%925, %done_403) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_404 = "equeue.launch"(%913, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %927 = "equeue.control_and"(%926, %done_404) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_405 = "equeue.launch"(%913, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %928 = "equeue.control_and"(%927, %done_405) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_406 = "equeue.launch"(%913, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %929 = "equeue.control_and"(%928, %done_406) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_407 = "equeue.launch"(%913, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %930 = "equeue.control_and"(%929, %done_407) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_408 = "equeue.launch"(%913, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %931 = "equeue.control_and"(%930, %done_408) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_409 = "equeue.launch"(%913, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %932 = "equeue.control_and"(%931, %done_409) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_410 = "equeue.launch"(%913, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %933 = "equeue.control_and"(%932, %done_410) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_411 = "equeue.launch"(%913, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %934 = "equeue.control_and"(%933, %done_411) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_412 = "equeue.launch"(%913, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %935 = "equeue.control_and"(%934, %done_412) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_413 = "equeue.launch"(%913, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %936 = "equeue.control_and"(%935, %done_413) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_414 = "equeue.launch"(%913, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %937 = "equeue.control_and"(%936, %done_414) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%937) : (!equeue.signal) -> ()
      %938 = "equeue.control_start"() : () -> !equeue.signal
      %c0_415 = constant 0 : index
      %939 = "equeue.memcpy"(%938, %122, %127, %111, %c0_415) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %940 = "equeue.memcpy"(%938, %122, %133, %113, %c0_415) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %941 = "equeue.control_and"(%940, %939) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %942 = "equeue.memcpy"(%938, %122, %139, %115, %c0_415) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %943 = "equeue.control_and"(%942, %941) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %944 = "equeue.memcpy"(%938, %122, %145, %117, %c0_415) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %945 = "equeue.control_and"(%944, %943) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %946 = "equeue.memcpy"(%938, %122, %151, %119, %c0_415) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %947 = "equeue.control_and"(%946, %945) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %948 = "equeue.memcpy"(%938, %121, %129, %102, %c0_415) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %949 = "equeue.memcpy"(%938, %121, %159, %104, %c0_415) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %950 = "equeue.control_and"(%949, %948) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %951 = "equeue.memcpy"(%938, %121, %189, %106, %c0_415) {dest_bank = 1 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %952 = "equeue.control_and"(%951, %950) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %953 = "equeue.memcpy"(%938, %121, %219, %108, %c0_415) {dest_bank = 1 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %954 = "equeue.control_and"(%953, %952) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %955 = "equeue.memcpy"(%938, %121, %249, %110, %c0_415) {dest_bank = 1 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %956 = "equeue.control_and"(%955, %954) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%956, %947) : (!equeue.signal, !equeue.signal) -> ()
      %957 = "equeue.control_start"() : () -> !equeue.signal
      %done_416 = "equeue.launch"(%957, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_417 = "equeue.launch"(%957, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %958 = "equeue.control_and"(%done_416, %done_417) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_418 = "equeue.launch"(%957, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %959 = "equeue.control_and"(%958, %done_418) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_419 = "equeue.launch"(%957, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %960 = "equeue.control_and"(%959, %done_419) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_420 = "equeue.launch"(%957, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %961 = "equeue.control_and"(%960, %done_420) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_421 = "equeue.launch"(%957, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %962 = "equeue.control_and"(%961, %done_421) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_422 = "equeue.launch"(%957, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %963 = "equeue.control_and"(%962, %done_422) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_423 = "equeue.launch"(%957, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %964 = "equeue.control_and"(%963, %done_423) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_424 = "equeue.launch"(%957, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %965 = "equeue.control_and"(%964, %done_424) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_425 = "equeue.launch"(%957, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %966 = "equeue.control_and"(%965, %done_425) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_426 = "equeue.launch"(%957, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %967 = "equeue.control_and"(%966, %done_426) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_427 = "equeue.launch"(%957, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %968 = "equeue.control_and"(%967, %done_427) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_428 = "equeue.launch"(%957, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %969 = "equeue.control_and"(%968, %done_428) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_429 = "equeue.launch"(%957, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %970 = "equeue.control_and"(%969, %done_429) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_430 = "equeue.launch"(%957, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %971 = "equeue.control_and"(%970, %done_430) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_431 = "equeue.launch"(%957, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %972 = "equeue.control_and"(%971, %done_431) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_432 = "equeue.launch"(%957, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %973 = "equeue.control_and"(%972, %done_432) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_433 = "equeue.launch"(%957, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %974 = "equeue.control_and"(%973, %done_433) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_434 = "equeue.launch"(%957, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %975 = "equeue.control_and"(%974, %done_434) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_435 = "equeue.launch"(%957, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %976 = "equeue.control_and"(%975, %done_435) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_436 = "equeue.launch"(%957, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %977 = "equeue.control_and"(%976, %done_436) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_437 = "equeue.launch"(%957, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %978 = "equeue.control_and"(%977, %done_437) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_438 = "equeue.launch"(%957, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %979 = "equeue.control_and"(%978, %done_438) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_439 = "equeue.launch"(%957, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %980 = "equeue.control_and"(%979, %done_439) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_440 = "equeue.launch"(%957, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %981 = "equeue.control_and"(%980, %done_440) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%981) : (!equeue.signal) -> ()
      %982 = "equeue.control_start"() : () -> !equeue.signal
      %c0_441 = constant 0 : index
      %983 = "equeue.memcpy"(%982, %122, %127, %111, %c0_441) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %984 = "equeue.memcpy"(%982, %122, %133, %113, %c0_441) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %985 = "equeue.control_and"(%984, %983) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %986 = "equeue.memcpy"(%982, %122, %139, %115, %c0_441) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %987 = "equeue.control_and"(%986, %985) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %988 = "equeue.memcpy"(%982, %122, %145, %117, %c0_441) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %989 = "equeue.control_and"(%988, %987) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %990 = "equeue.memcpy"(%982, %122, %151, %119, %c0_441) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %991 = "equeue.control_and"(%990, %989) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %992 = "equeue.memcpy"(%982, %121, %129, %102, %c0_441) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %993 = "equeue.memcpy"(%982, %121, %159, %104, %c0_441) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %994 = "equeue.control_and"(%993, %992) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %995 = "equeue.memcpy"(%982, %121, %189, %106, %c0_441) {dest_bank = 1 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %996 = "equeue.control_and"(%995, %994) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %997 = "equeue.memcpy"(%982, %121, %219, %108, %c0_441) {dest_bank = 1 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %998 = "equeue.control_and"(%997, %996) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %999 = "equeue.memcpy"(%982, %121, %249, %110, %c0_441) {dest_bank = 1 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1000 = "equeue.control_and"(%999, %998) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1000, %991) : (!equeue.signal, !equeue.signal) -> ()
      %1001 = "equeue.control_start"() : () -> !equeue.signal
      %done_442 = "equeue.launch"(%1001, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_443 = "equeue.launch"(%1001, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1002 = "equeue.control_and"(%done_442, %done_443) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_444 = "equeue.launch"(%1001, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1003 = "equeue.control_and"(%1002, %done_444) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_445 = "equeue.launch"(%1001, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1004 = "equeue.control_and"(%1003, %done_445) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_446 = "equeue.launch"(%1001, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1005 = "equeue.control_and"(%1004, %done_446) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_447 = "equeue.launch"(%1001, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1006 = "equeue.control_and"(%1005, %done_447) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_448 = "equeue.launch"(%1001, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1007 = "equeue.control_and"(%1006, %done_448) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_449 = "equeue.launch"(%1001, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1008 = "equeue.control_and"(%1007, %done_449) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_450 = "equeue.launch"(%1001, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1009 = "equeue.control_and"(%1008, %done_450) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_451 = "equeue.launch"(%1001, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1010 = "equeue.control_and"(%1009, %done_451) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_452 = "equeue.launch"(%1001, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1011 = "equeue.control_and"(%1010, %done_452) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_453 = "equeue.launch"(%1001, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1012 = "equeue.control_and"(%1011, %done_453) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_454 = "equeue.launch"(%1001, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1013 = "equeue.control_and"(%1012, %done_454) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_455 = "equeue.launch"(%1001, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1014 = "equeue.control_and"(%1013, %done_455) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_456 = "equeue.launch"(%1001, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1015 = "equeue.control_and"(%1014, %done_456) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_457 = "equeue.launch"(%1001, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1016 = "equeue.control_and"(%1015, %done_457) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_458 = "equeue.launch"(%1001, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1017 = "equeue.control_and"(%1016, %done_458) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_459 = "equeue.launch"(%1001, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1018 = "equeue.control_and"(%1017, %done_459) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_460 = "equeue.launch"(%1001, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1019 = "equeue.control_and"(%1018, %done_460) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_461 = "equeue.launch"(%1001, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1020 = "equeue.control_and"(%1019, %done_461) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_462 = "equeue.launch"(%1001, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1021 = "equeue.control_and"(%1020, %done_462) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_463 = "equeue.launch"(%1001, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1022 = "equeue.control_and"(%1021, %done_463) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_464 = "equeue.launch"(%1001, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1023 = "equeue.control_and"(%1022, %done_464) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_465 = "equeue.launch"(%1001, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1024 = "equeue.control_and"(%1023, %done_465) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_466 = "equeue.launch"(%1001, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1025 = "equeue.control_and"(%1024, %done_466) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1025) : (!equeue.signal) -> ()
      %1026 = "equeue.control_start"() : () -> !equeue.signal
      %c0_467 = constant 0 : index
      %1027 = "equeue.memcpy"(%1026, %122, %127, %111, %c0_467) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1028 = "equeue.memcpy"(%1026, %122, %133, %113, %c0_467) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1029 = "equeue.control_and"(%1028, %1027) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1030 = "equeue.memcpy"(%1026, %122, %139, %115, %c0_467) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1031 = "equeue.control_and"(%1030, %1029) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1032 = "equeue.memcpy"(%1026, %122, %145, %117, %c0_467) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1033 = "equeue.control_and"(%1032, %1031) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1034 = "equeue.memcpy"(%1026, %122, %151, %119, %c0_467) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1035 = "equeue.control_and"(%1034, %1033) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1036 = "equeue.memcpy"(%1026, %121, %129, %102, %c0_467) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1037 = "equeue.memcpy"(%1026, %121, %159, %104, %c0_467) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1038 = "equeue.control_and"(%1037, %1036) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1039 = "equeue.memcpy"(%1026, %121, %189, %106, %c0_467) {dest_bank = 1 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1040 = "equeue.control_and"(%1039, %1038) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1041 = "equeue.memcpy"(%1026, %121, %219, %108, %c0_467) {dest_bank = 1 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1042 = "equeue.control_and"(%1041, %1040) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1043 = "equeue.memcpy"(%1026, %121, %249, %110, %c0_467) {dest_bank = 1 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1044 = "equeue.control_and"(%1043, %1042) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1044, %1035) : (!equeue.signal, !equeue.signal) -> ()
      %1045 = "equeue.control_start"() : () -> !equeue.signal
      %done_468 = "equeue.launch"(%1045, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_469 = "equeue.launch"(%1045, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1046 = "equeue.control_and"(%done_468, %done_469) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_470 = "equeue.launch"(%1045, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1047 = "equeue.control_and"(%1046, %done_470) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_471 = "equeue.launch"(%1045, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1048 = "equeue.control_and"(%1047, %done_471) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_472 = "equeue.launch"(%1045, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1049 = "equeue.control_and"(%1048, %done_472) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_473 = "equeue.launch"(%1045, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1050 = "equeue.control_and"(%1049, %done_473) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_474 = "equeue.launch"(%1045, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1051 = "equeue.control_and"(%1050, %done_474) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_475 = "equeue.launch"(%1045, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1052 = "equeue.control_and"(%1051, %done_475) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_476 = "equeue.launch"(%1045, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1053 = "equeue.control_and"(%1052, %done_476) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_477 = "equeue.launch"(%1045, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1054 = "equeue.control_and"(%1053, %done_477) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_478 = "equeue.launch"(%1045, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1055 = "equeue.control_and"(%1054, %done_478) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_479 = "equeue.launch"(%1045, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1056 = "equeue.control_and"(%1055, %done_479) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_480 = "equeue.launch"(%1045, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1057 = "equeue.control_and"(%1056, %done_480) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_481 = "equeue.launch"(%1045, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1058 = "equeue.control_and"(%1057, %done_481) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_482 = "equeue.launch"(%1045, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1059 = "equeue.control_and"(%1058, %done_482) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_483 = "equeue.launch"(%1045, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1060 = "equeue.control_and"(%1059, %done_483) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_484 = "equeue.launch"(%1045, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1061 = "equeue.control_and"(%1060, %done_484) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_485 = "equeue.launch"(%1045, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1062 = "equeue.control_and"(%1061, %done_485) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_486 = "equeue.launch"(%1045, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1063 = "equeue.control_and"(%1062, %done_486) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_487 = "equeue.launch"(%1045, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1064 = "equeue.control_and"(%1063, %done_487) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_488 = "equeue.launch"(%1045, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1065 = "equeue.control_and"(%1064, %done_488) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_489 = "equeue.launch"(%1045, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1066 = "equeue.control_and"(%1065, %done_489) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_490 = "equeue.launch"(%1045, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1067 = "equeue.control_and"(%1066, %done_490) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_491 = "equeue.launch"(%1045, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1068 = "equeue.control_and"(%1067, %done_491) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_492 = "equeue.launch"(%1045, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1069 = "equeue.control_and"(%1068, %done_492) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1069) : (!equeue.signal) -> ()
      %1070 = "equeue.control_start"() : () -> !equeue.signal
      %c0_493 = constant 0 : index
      %1071 = "equeue.memcpy"(%1070, %122, %127, %111, %c0_493) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1072 = "equeue.memcpy"(%1070, %122, %133, %113, %c0_493) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1073 = "equeue.control_and"(%1072, %1071) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1074 = "equeue.memcpy"(%1070, %122, %139, %115, %c0_493) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1075 = "equeue.control_and"(%1074, %1073) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1076 = "equeue.memcpy"(%1070, %122, %145, %117, %c0_493) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1077 = "equeue.control_and"(%1076, %1075) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1078 = "equeue.memcpy"(%1070, %122, %151, %119, %c0_493) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1079 = "equeue.control_and"(%1078, %1077) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1080 = "equeue.memcpy"(%1070, %121, %129, %102, %c0_493) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1081 = "equeue.memcpy"(%1070, %121, %159, %104, %c0_493) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1082 = "equeue.control_and"(%1081, %1080) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1083 = "equeue.memcpy"(%1070, %121, %189, %106, %c0_493) {dest_bank = 1 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1084 = "equeue.control_and"(%1083, %1082) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1085 = "equeue.memcpy"(%1070, %121, %219, %108, %c0_493) {dest_bank = 1 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1086 = "equeue.control_and"(%1085, %1084) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1087 = "equeue.memcpy"(%1070, %121, %249, %110, %c0_493) {dest_bank = 1 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1088 = "equeue.control_and"(%1087, %1086) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1088, %1079) : (!equeue.signal, !equeue.signal) -> ()
      %1089 = "equeue.control_start"() : () -> !equeue.signal
      %done_494 = "equeue.launch"(%1089, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_495 = "equeue.launch"(%1089, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1090 = "equeue.control_and"(%done_494, %done_495) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_496 = "equeue.launch"(%1089, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1091 = "equeue.control_and"(%1090, %done_496) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_497 = "equeue.launch"(%1089, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1092 = "equeue.control_and"(%1091, %done_497) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_498 = "equeue.launch"(%1089, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1093 = "equeue.control_and"(%1092, %done_498) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_499 = "equeue.launch"(%1089, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1094 = "equeue.control_and"(%1093, %done_499) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_500 = "equeue.launch"(%1089, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1095 = "equeue.control_and"(%1094, %done_500) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_501 = "equeue.launch"(%1089, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1096 = "equeue.control_and"(%1095, %done_501) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_502 = "equeue.launch"(%1089, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1097 = "equeue.control_and"(%1096, %done_502) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_503 = "equeue.launch"(%1089, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1098 = "equeue.control_and"(%1097, %done_503) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_504 = "equeue.launch"(%1089, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1099 = "equeue.control_and"(%1098, %done_504) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_505 = "equeue.launch"(%1089, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1100 = "equeue.control_and"(%1099, %done_505) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_506 = "equeue.launch"(%1089, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1101 = "equeue.control_and"(%1100, %done_506) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_507 = "equeue.launch"(%1089, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1102 = "equeue.control_and"(%1101, %done_507) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_508 = "equeue.launch"(%1089, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1103 = "equeue.control_and"(%1102, %done_508) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_509 = "equeue.launch"(%1089, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1104 = "equeue.control_and"(%1103, %done_509) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_510 = "equeue.launch"(%1089, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1105 = "equeue.control_and"(%1104, %done_510) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_511 = "equeue.launch"(%1089, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1106 = "equeue.control_and"(%1105, %done_511) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_512 = "equeue.launch"(%1089, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1107 = "equeue.control_and"(%1106, %done_512) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_513 = "equeue.launch"(%1089, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1108 = "equeue.control_and"(%1107, %done_513) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_514 = "equeue.launch"(%1089, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1109 = "equeue.control_and"(%1108, %done_514) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_515 = "equeue.launch"(%1089, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1110 = "equeue.control_and"(%1109, %done_515) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_516 = "equeue.launch"(%1089, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1111 = "equeue.control_and"(%1110, %done_516) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_517 = "equeue.launch"(%1089, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1112 = "equeue.control_and"(%1111, %done_517) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_518 = "equeue.launch"(%1089, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1113 = "equeue.control_and"(%1112, %done_518) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1113) : (!equeue.signal) -> ()
      %1114 = "equeue.control_start"() : () -> !equeue.signal
      %c0_519 = constant 0 : index
      %1115 = "equeue.memcpy"(%1114, %122, %127, %111, %c0_519) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1116 = "equeue.memcpy"(%1114, %122, %133, %113, %c0_519) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1117 = "equeue.control_and"(%1116, %1115) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1118 = "equeue.memcpy"(%1114, %122, %139, %115, %c0_519) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1119 = "equeue.control_and"(%1118, %1117) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1120 = "equeue.memcpy"(%1114, %122, %145, %117, %c0_519) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1121 = "equeue.control_and"(%1120, %1119) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1122 = "equeue.memcpy"(%1114, %122, %151, %119, %c0_519) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1123 = "equeue.control_and"(%1122, %1121) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1124 = "equeue.memcpy"(%1114, %121, %129, %102, %c0_519) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1125 = "equeue.memcpy"(%1114, %121, %159, %104, %c0_519) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1126 = "equeue.control_and"(%1125, %1124) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1127 = "equeue.memcpy"(%1114, %121, %189, %106, %c0_519) {dest_bank = 1 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1128 = "equeue.control_and"(%1127, %1126) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1129 = "equeue.memcpy"(%1114, %121, %219, %108, %c0_519) {dest_bank = 1 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1130 = "equeue.control_and"(%1129, %1128) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1131 = "equeue.memcpy"(%1114, %121, %249, %110, %c0_519) {dest_bank = 1 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1132 = "equeue.control_and"(%1131, %1130) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1132, %1123) : (!equeue.signal, !equeue.signal) -> ()
      %1133 = "equeue.control_start"() : () -> !equeue.signal
      %done_520 = "equeue.launch"(%1133, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_521 = "equeue.launch"(%1133, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1134 = "equeue.control_and"(%done_520, %done_521) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_522 = "equeue.launch"(%1133, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1135 = "equeue.control_and"(%1134, %done_522) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_523 = "equeue.launch"(%1133, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1136 = "equeue.control_and"(%1135, %done_523) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_524 = "equeue.launch"(%1133, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1137 = "equeue.control_and"(%1136, %done_524) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_525 = "equeue.launch"(%1133, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1138 = "equeue.control_and"(%1137, %done_525) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_526 = "equeue.launch"(%1133, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1139 = "equeue.control_and"(%1138, %done_526) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_527 = "equeue.launch"(%1133, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1140 = "equeue.control_and"(%1139, %done_527) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_528 = "equeue.launch"(%1133, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1141 = "equeue.control_and"(%1140, %done_528) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_529 = "equeue.launch"(%1133, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1142 = "equeue.control_and"(%1141, %done_529) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_530 = "equeue.launch"(%1133, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1143 = "equeue.control_and"(%1142, %done_530) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_531 = "equeue.launch"(%1133, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1144 = "equeue.control_and"(%1143, %done_531) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_532 = "equeue.launch"(%1133, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1145 = "equeue.control_and"(%1144, %done_532) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_533 = "equeue.launch"(%1133, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1146 = "equeue.control_and"(%1145, %done_533) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_534 = "equeue.launch"(%1133, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1147 = "equeue.control_and"(%1146, %done_534) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_535 = "equeue.launch"(%1133, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1148 = "equeue.control_and"(%1147, %done_535) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_536 = "equeue.launch"(%1133, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1149 = "equeue.control_and"(%1148, %done_536) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_537 = "equeue.launch"(%1133, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1150 = "equeue.control_and"(%1149, %done_537) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_538 = "equeue.launch"(%1133, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1151 = "equeue.control_and"(%1150, %done_538) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_539 = "equeue.launch"(%1133, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1152 = "equeue.control_and"(%1151, %done_539) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_540 = "equeue.launch"(%1133, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1153 = "equeue.control_and"(%1152, %done_540) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_541 = "equeue.launch"(%1133, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1154 = "equeue.control_and"(%1153, %done_541) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_542 = "equeue.launch"(%1133, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1155 = "equeue.control_and"(%1154, %done_542) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_543 = "equeue.launch"(%1133, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1156 = "equeue.control_and"(%1155, %done_543) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_544 = "equeue.launch"(%1133, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1157 = "equeue.control_and"(%1156, %done_544) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1157) : (!equeue.signal) -> ()
      %1158 = "equeue.control_start"() : () -> !equeue.signal
      %c0_545 = constant 0 : index
      %1159 = "equeue.memcpy"(%1158, %122, %127, %111, %c0_545) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1160 = "equeue.memcpy"(%1158, %122, %133, %113, %c0_545) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1161 = "equeue.control_and"(%1160, %1159) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1162 = "equeue.memcpy"(%1158, %122, %139, %115, %c0_545) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1163 = "equeue.control_and"(%1162, %1161) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1164 = "equeue.memcpy"(%1158, %122, %145, %117, %c0_545) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1165 = "equeue.control_and"(%1164, %1163) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1166 = "equeue.memcpy"(%1158, %122, %151, %119, %c0_545) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1167 = "equeue.control_and"(%1166, %1165) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1168 = "equeue.memcpy"(%1158, %121, %129, %102, %c0_545) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1169 = "equeue.memcpy"(%1158, %121, %159, %104, %c0_545) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1170 = "equeue.control_and"(%1169, %1168) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1171 = "equeue.memcpy"(%1158, %121, %189, %106, %c0_545) {dest_bank = 1 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1172 = "equeue.control_and"(%1171, %1170) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1173 = "equeue.memcpy"(%1158, %121, %219, %108, %c0_545) {dest_bank = 1 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1174 = "equeue.control_and"(%1173, %1172) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1175 = "equeue.memcpy"(%1158, %121, %249, %110, %c0_545) {dest_bank = 1 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1176 = "equeue.control_and"(%1175, %1174) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1176, %1167) : (!equeue.signal, !equeue.signal) -> ()
      %1177 = "equeue.control_start"() : () -> !equeue.signal
      %done_546 = "equeue.launch"(%1177, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_547 = "equeue.launch"(%1177, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1178 = "equeue.control_and"(%done_546, %done_547) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_548 = "equeue.launch"(%1177, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1179 = "equeue.control_and"(%1178, %done_548) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_549 = "equeue.launch"(%1177, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1180 = "equeue.control_and"(%1179, %done_549) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_550 = "equeue.launch"(%1177, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1181 = "equeue.control_and"(%1180, %done_550) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_551 = "equeue.launch"(%1177, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1182 = "equeue.control_and"(%1181, %done_551) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_552 = "equeue.launch"(%1177, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1183 = "equeue.control_and"(%1182, %done_552) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_553 = "equeue.launch"(%1177, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1184 = "equeue.control_and"(%1183, %done_553) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_554 = "equeue.launch"(%1177, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1185 = "equeue.control_and"(%1184, %done_554) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_555 = "equeue.launch"(%1177, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1186 = "equeue.control_and"(%1185, %done_555) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_556 = "equeue.launch"(%1177, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1187 = "equeue.control_and"(%1186, %done_556) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_557 = "equeue.launch"(%1177, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1188 = "equeue.control_and"(%1187, %done_557) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_558 = "equeue.launch"(%1177, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1189 = "equeue.control_and"(%1188, %done_558) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_559 = "equeue.launch"(%1177, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1190 = "equeue.control_and"(%1189, %done_559) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_560 = "equeue.launch"(%1177, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1191 = "equeue.control_and"(%1190, %done_560) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_561 = "equeue.launch"(%1177, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1192 = "equeue.control_and"(%1191, %done_561) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_562 = "equeue.launch"(%1177, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1193 = "equeue.control_and"(%1192, %done_562) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_563 = "equeue.launch"(%1177, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1194 = "equeue.control_and"(%1193, %done_563) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_564 = "equeue.launch"(%1177, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1195 = "equeue.control_and"(%1194, %done_564) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_565 = "equeue.launch"(%1177, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1196 = "equeue.control_and"(%1195, %done_565) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_566 = "equeue.launch"(%1177, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1197 = "equeue.control_and"(%1196, %done_566) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_567 = "equeue.launch"(%1177, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1198 = "equeue.control_and"(%1197, %done_567) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_568 = "equeue.launch"(%1177, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1199 = "equeue.control_and"(%1198, %done_568) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_569 = "equeue.launch"(%1177, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1200 = "equeue.control_and"(%1199, %done_569) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_570 = "equeue.launch"(%1177, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1201 = "equeue.control_and"(%1200, %done_570) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1201) : (!equeue.signal) -> ()
      %1202 = "equeue.control_start"() : () -> !equeue.signal
      %c0_571 = constant 0 : index
      %1203 = "equeue.memcpy"(%1202, %122, %127, %111, %c0_571) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1204 = "equeue.memcpy"(%1202, %122, %133, %113, %c0_571) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1205 = "equeue.control_and"(%1204, %1203) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1206 = "equeue.memcpy"(%1202, %122, %139, %115, %c0_571) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1207 = "equeue.control_and"(%1206, %1205) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1208 = "equeue.memcpy"(%1202, %122, %145, %117, %c0_571) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1209 = "equeue.control_and"(%1208, %1207) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1210 = "equeue.memcpy"(%1202, %122, %151, %119, %c0_571) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1211 = "equeue.control_and"(%1210, %1209) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1212 = "equeue.memcpy"(%1202, %121, %129, %102, %c0_571) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1213 = "equeue.memcpy"(%1202, %121, %159, %104, %c0_571) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1214 = "equeue.control_and"(%1213, %1212) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1215 = "equeue.memcpy"(%1202, %121, %189, %106, %c0_571) {dest_bank = 1 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1216 = "equeue.control_and"(%1215, %1214) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1217 = "equeue.memcpy"(%1202, %121, %219, %108, %c0_571) {dest_bank = 1 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1218 = "equeue.control_and"(%1217, %1216) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1219 = "equeue.memcpy"(%1202, %121, %249, %110, %c0_571) {dest_bank = 1 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1220 = "equeue.control_and"(%1219, %1218) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1220, %1211) : (!equeue.signal, !equeue.signal) -> ()
      %1221 = "equeue.control_start"() : () -> !equeue.signal
      %done_572 = "equeue.launch"(%1221, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_573 = "equeue.launch"(%1221, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1222 = "equeue.control_and"(%done_572, %done_573) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_574 = "equeue.launch"(%1221, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1223 = "equeue.control_and"(%1222, %done_574) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_575 = "equeue.launch"(%1221, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1224 = "equeue.control_and"(%1223, %done_575) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_576 = "equeue.launch"(%1221, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1225 = "equeue.control_and"(%1224, %done_576) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_577 = "equeue.launch"(%1221, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1226 = "equeue.control_and"(%1225, %done_577) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_578 = "equeue.launch"(%1221, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1227 = "equeue.control_and"(%1226, %done_578) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_579 = "equeue.launch"(%1221, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1228 = "equeue.control_and"(%1227, %done_579) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_580 = "equeue.launch"(%1221, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1229 = "equeue.control_and"(%1228, %done_580) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_581 = "equeue.launch"(%1221, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1230 = "equeue.control_and"(%1229, %done_581) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_582 = "equeue.launch"(%1221, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1231 = "equeue.control_and"(%1230, %done_582) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_583 = "equeue.launch"(%1221, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1232 = "equeue.control_and"(%1231, %done_583) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_584 = "equeue.launch"(%1221, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1233 = "equeue.control_and"(%1232, %done_584) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_585 = "equeue.launch"(%1221, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1234 = "equeue.control_and"(%1233, %done_585) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_586 = "equeue.launch"(%1221, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1235 = "equeue.control_and"(%1234, %done_586) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_587 = "equeue.launch"(%1221, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1236 = "equeue.control_and"(%1235, %done_587) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_588 = "equeue.launch"(%1221, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1237 = "equeue.control_and"(%1236, %done_588) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_589 = "equeue.launch"(%1221, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1238 = "equeue.control_and"(%1237, %done_589) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_590 = "equeue.launch"(%1221, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1239 = "equeue.control_and"(%1238, %done_590) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_591 = "equeue.launch"(%1221, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1240 = "equeue.control_and"(%1239, %done_591) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_592 = "equeue.launch"(%1221, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1241 = "equeue.control_and"(%1240, %done_592) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_593 = "equeue.launch"(%1221, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1242 = "equeue.control_and"(%1241, %done_593) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_594 = "equeue.launch"(%1221, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1243 = "equeue.control_and"(%1242, %done_594) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_595 = "equeue.launch"(%1221, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1244 = "equeue.control_and"(%1243, %done_595) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_596 = "equeue.launch"(%1221, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1245 = "equeue.control_and"(%1244, %done_596) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1245) : (!equeue.signal) -> ()
      %1246 = "equeue.control_start"() : () -> !equeue.signal
      %c0_597 = constant 0 : index
      %1247 = "equeue.memcpy"(%1246, %122, %127, %111, %c0_597) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1248 = "equeue.memcpy"(%1246, %122, %133, %113, %c0_597) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1249 = "equeue.control_and"(%1248, %1247) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1250 = "equeue.memcpy"(%1246, %122, %139, %115, %c0_597) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1251 = "equeue.control_and"(%1250, %1249) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1252 = "equeue.memcpy"(%1246, %122, %145, %117, %c0_597) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1253 = "equeue.control_and"(%1252, %1251) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1254 = "equeue.memcpy"(%1246, %122, %151, %119, %c0_597) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1255 = "equeue.control_and"(%1254, %1253) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1256 = "equeue.memcpy"(%1246, %121, %129, %102, %c0_597) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1257 = "equeue.memcpy"(%1246, %121, %159, %104, %c0_597) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1258 = "equeue.control_and"(%1257, %1256) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1259 = "equeue.memcpy"(%1246, %121, %189, %106, %c0_597) {dest_bank = 1 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1260 = "equeue.control_and"(%1259, %1258) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1261 = "equeue.memcpy"(%1246, %121, %219, %108, %c0_597) {dest_bank = 1 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1262 = "equeue.control_and"(%1261, %1260) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1263 = "equeue.memcpy"(%1246, %121, %249, %110, %c0_597) {dest_bank = 1 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1264 = "equeue.control_and"(%1263, %1262) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1264, %1255) : (!equeue.signal, !equeue.signal) -> ()
      %1265 = "equeue.control_start"() : () -> !equeue.signal
      %done_598 = "equeue.launch"(%1265, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_599 = "equeue.launch"(%1265, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1266 = "equeue.control_and"(%done_598, %done_599) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_600 = "equeue.launch"(%1265, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1267 = "equeue.control_and"(%1266, %done_600) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_601 = "equeue.launch"(%1265, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1268 = "equeue.control_and"(%1267, %done_601) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_602 = "equeue.launch"(%1265, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1269 = "equeue.control_and"(%1268, %done_602) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_603 = "equeue.launch"(%1265, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1270 = "equeue.control_and"(%1269, %done_603) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_604 = "equeue.launch"(%1265, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1271 = "equeue.control_and"(%1270, %done_604) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_605 = "equeue.launch"(%1265, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1272 = "equeue.control_and"(%1271, %done_605) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_606 = "equeue.launch"(%1265, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1273 = "equeue.control_and"(%1272, %done_606) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_607 = "equeue.launch"(%1265, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1274 = "equeue.control_and"(%1273, %done_607) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_608 = "equeue.launch"(%1265, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1275 = "equeue.control_and"(%1274, %done_608) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_609 = "equeue.launch"(%1265, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1276 = "equeue.control_and"(%1275, %done_609) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_610 = "equeue.launch"(%1265, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1277 = "equeue.control_and"(%1276, %done_610) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_611 = "equeue.launch"(%1265, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1278 = "equeue.control_and"(%1277, %done_611) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_612 = "equeue.launch"(%1265, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1279 = "equeue.control_and"(%1278, %done_612) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_613 = "equeue.launch"(%1265, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1280 = "equeue.control_and"(%1279, %done_613) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_614 = "equeue.launch"(%1265, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1281 = "equeue.control_and"(%1280, %done_614) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_615 = "equeue.launch"(%1265, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1282 = "equeue.control_and"(%1281, %done_615) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_616 = "equeue.launch"(%1265, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1283 = "equeue.control_and"(%1282, %done_616) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_617 = "equeue.launch"(%1265, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1284 = "equeue.control_and"(%1283, %done_617) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_618 = "equeue.launch"(%1265, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1285 = "equeue.control_and"(%1284, %done_618) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_619 = "equeue.launch"(%1265, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1286 = "equeue.control_and"(%1285, %done_619) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_620 = "equeue.launch"(%1265, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1287 = "equeue.control_and"(%1286, %done_620) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_621 = "equeue.launch"(%1265, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1288 = "equeue.control_and"(%1287, %done_621) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_622 = "equeue.launch"(%1265, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1289 = "equeue.control_and"(%1288, %done_622) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1289) : (!equeue.signal) -> ()
      %1290 = "equeue.control_start"() : () -> !equeue.signal
      %c0_623 = constant 0 : index
      %1291 = "equeue.memcpy"(%1290, %122, %127, %111, %c0_623) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1292 = "equeue.memcpy"(%1290, %122, %133, %113, %c0_623) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1293 = "equeue.control_and"(%1292, %1291) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1294 = "equeue.memcpy"(%1290, %122, %139, %115, %c0_623) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1295 = "equeue.control_and"(%1294, %1293) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1296 = "equeue.memcpy"(%1290, %122, %145, %117, %c0_623) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1297 = "equeue.control_and"(%1296, %1295) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1298 = "equeue.memcpy"(%1290, %122, %151, %119, %c0_623) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1299 = "equeue.control_and"(%1298, %1297) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1300 = "equeue.memcpy"(%1290, %121, %129, %102, %c0_623) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1301 = "equeue.memcpy"(%1290, %121, %159, %104, %c0_623) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1302 = "equeue.control_and"(%1301, %1300) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1303 = "equeue.memcpy"(%1290, %121, %189, %106, %c0_623) {dest_bank = 1 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1304 = "equeue.control_and"(%1303, %1302) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1305 = "equeue.memcpy"(%1290, %121, %219, %108, %c0_623) {dest_bank = 1 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1306 = "equeue.control_and"(%1305, %1304) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1307 = "equeue.memcpy"(%1290, %121, %249, %110, %c0_623) {dest_bank = 1 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1308 = "equeue.control_and"(%1307, %1306) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1308, %1299) : (!equeue.signal, !equeue.signal) -> ()
      %1309 = "equeue.control_start"() : () -> !equeue.signal
      %done_624 = "equeue.launch"(%1309, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_625 = "equeue.launch"(%1309, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1310 = "equeue.control_and"(%done_624, %done_625) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_626 = "equeue.launch"(%1309, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1311 = "equeue.control_and"(%1310, %done_626) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_627 = "equeue.launch"(%1309, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1312 = "equeue.control_and"(%1311, %done_627) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_628 = "equeue.launch"(%1309, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1313 = "equeue.control_and"(%1312, %done_628) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_629 = "equeue.launch"(%1309, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1314 = "equeue.control_and"(%1313, %done_629) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_630 = "equeue.launch"(%1309, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1315 = "equeue.control_and"(%1314, %done_630) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_631 = "equeue.launch"(%1309, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1316 = "equeue.control_and"(%1315, %done_631) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_632 = "equeue.launch"(%1309, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1317 = "equeue.control_and"(%1316, %done_632) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_633 = "equeue.launch"(%1309, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1318 = "equeue.control_and"(%1317, %done_633) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_634 = "equeue.launch"(%1309, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1319 = "equeue.control_and"(%1318, %done_634) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_635 = "equeue.launch"(%1309, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1320 = "equeue.control_and"(%1319, %done_635) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_636 = "equeue.launch"(%1309, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1321 = "equeue.control_and"(%1320, %done_636) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_637 = "equeue.launch"(%1309, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1322 = "equeue.control_and"(%1321, %done_637) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_638 = "equeue.launch"(%1309, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1323 = "equeue.control_and"(%1322, %done_638) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_639 = "equeue.launch"(%1309, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1324 = "equeue.control_and"(%1323, %done_639) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_640 = "equeue.launch"(%1309, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1325 = "equeue.control_and"(%1324, %done_640) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_641 = "equeue.launch"(%1309, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1326 = "equeue.control_and"(%1325, %done_641) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_642 = "equeue.launch"(%1309, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1327 = "equeue.control_and"(%1326, %done_642) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_643 = "equeue.launch"(%1309, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1328 = "equeue.control_and"(%1327, %done_643) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_644 = "equeue.launch"(%1309, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1329 = "equeue.control_and"(%1328, %done_644) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_645 = "equeue.launch"(%1309, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1330 = "equeue.control_and"(%1329, %done_645) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_646 = "equeue.launch"(%1309, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1331 = "equeue.control_and"(%1330, %done_646) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_647 = "equeue.launch"(%1309, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1332 = "equeue.control_and"(%1331, %done_647) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_648 = "equeue.launch"(%1309, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1333 = "equeue.control_and"(%1332, %done_648) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1333) : (!equeue.signal) -> ()
      %1334 = "equeue.control_start"() : () -> !equeue.signal
      %c0_649 = constant 0 : index
      %1335 = "equeue.memcpy"(%1334, %122, %127, %111, %c0_649) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1336 = "equeue.memcpy"(%1334, %122, %133, %113, %c0_649) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1337 = "equeue.control_and"(%1336, %1335) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1338 = "equeue.memcpy"(%1334, %122, %139, %115, %c0_649) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1339 = "equeue.control_and"(%1338, %1337) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1340 = "equeue.memcpy"(%1334, %122, %145, %117, %c0_649) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1341 = "equeue.control_and"(%1340, %1339) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1342 = "equeue.memcpy"(%1334, %122, %151, %119, %c0_649) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1343 = "equeue.control_and"(%1342, %1341) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1344 = "equeue.memcpy"(%1334, %121, %129, %102, %c0_649) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1345 = "equeue.memcpy"(%1334, %121, %159, %104, %c0_649) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1346 = "equeue.control_and"(%1345, %1344) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1347 = "equeue.memcpy"(%1334, %121, %189, %106, %c0_649) {dest_bank = 1 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1348 = "equeue.control_and"(%1347, %1346) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1349 = "equeue.memcpy"(%1334, %121, %219, %108, %c0_649) {dest_bank = 1 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1350 = "equeue.control_and"(%1349, %1348) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1351 = "equeue.memcpy"(%1334, %121, %249, %110, %c0_649) {dest_bank = 1 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1352 = "equeue.control_and"(%1351, %1350) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1352, %1343) : (!equeue.signal, !equeue.signal) -> ()
      %1353 = "equeue.control_start"() : () -> !equeue.signal
      %done_650 = "equeue.launch"(%1353, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_651 = "equeue.launch"(%1353, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1354 = "equeue.control_and"(%done_650, %done_651) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_652 = "equeue.launch"(%1353, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1355 = "equeue.control_and"(%1354, %done_652) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_653 = "equeue.launch"(%1353, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1356 = "equeue.control_and"(%1355, %done_653) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_654 = "equeue.launch"(%1353, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1357 = "equeue.control_and"(%1356, %done_654) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_655 = "equeue.launch"(%1353, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1358 = "equeue.control_and"(%1357, %done_655) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_656 = "equeue.launch"(%1353, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1359 = "equeue.control_and"(%1358, %done_656) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_657 = "equeue.launch"(%1353, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1360 = "equeue.control_and"(%1359, %done_657) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_658 = "equeue.launch"(%1353, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1361 = "equeue.control_and"(%1360, %done_658) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_659 = "equeue.launch"(%1353, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1362 = "equeue.control_and"(%1361, %done_659) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_660 = "equeue.launch"(%1353, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1363 = "equeue.control_and"(%1362, %done_660) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_661 = "equeue.launch"(%1353, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1364 = "equeue.control_and"(%1363, %done_661) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_662 = "equeue.launch"(%1353, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1365 = "equeue.control_and"(%1364, %done_662) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_663 = "equeue.launch"(%1353, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1366 = "equeue.control_and"(%1365, %done_663) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_664 = "equeue.launch"(%1353, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1367 = "equeue.control_and"(%1366, %done_664) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_665 = "equeue.launch"(%1353, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1368 = "equeue.control_and"(%1367, %done_665) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_666 = "equeue.launch"(%1353, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1369 = "equeue.control_and"(%1368, %done_666) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_667 = "equeue.launch"(%1353, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1370 = "equeue.control_and"(%1369, %done_667) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_668 = "equeue.launch"(%1353, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1371 = "equeue.control_and"(%1370, %done_668) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_669 = "equeue.launch"(%1353, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1372 = "equeue.control_and"(%1371, %done_669) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_670 = "equeue.launch"(%1353, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1373 = "equeue.control_and"(%1372, %done_670) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_671 = "equeue.launch"(%1353, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1374 = "equeue.control_and"(%1373, %done_671) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_672 = "equeue.launch"(%1353, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1375 = "equeue.control_and"(%1374, %done_672) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_673 = "equeue.launch"(%1353, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1376 = "equeue.control_and"(%1375, %done_673) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_674 = "equeue.launch"(%1353, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1377 = "equeue.control_and"(%1376, %done_674) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1377) : (!equeue.signal) -> ()
      %1378 = "equeue.control_start"() : () -> !equeue.signal
      %c0_675 = constant 0 : index
      %1379 = "equeue.memcpy"(%1378, %122, %127, %111, %c0_675) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1380 = "equeue.memcpy"(%1378, %122, %133, %113, %c0_675) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1381 = "equeue.control_and"(%1380, %1379) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1382 = "equeue.memcpy"(%1378, %122, %139, %115, %c0_675) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1383 = "equeue.control_and"(%1382, %1381) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1384 = "equeue.memcpy"(%1378, %122, %145, %117, %c0_675) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1385 = "equeue.control_and"(%1384, %1383) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1386 = "equeue.memcpy"(%1378, %122, %151, %119, %c0_675) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1387 = "equeue.control_and"(%1386, %1385) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1388 = "equeue.memcpy"(%1378, %121, %129, %102, %c0_675) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1389 = "equeue.memcpy"(%1378, %121, %159, %104, %c0_675) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1390 = "equeue.control_and"(%1389, %1388) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1391 = "equeue.memcpy"(%1378, %121, %189, %106, %c0_675) {dest_bank = 1 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1392 = "equeue.control_and"(%1391, %1390) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1393 = "equeue.memcpy"(%1378, %121, %219, %108, %c0_675) {dest_bank = 1 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1394 = "equeue.control_and"(%1393, %1392) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1395 = "equeue.memcpy"(%1378, %121, %249, %110, %c0_675) {dest_bank = 1 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1396 = "equeue.control_and"(%1395, %1394) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1396, %1387) : (!equeue.signal, !equeue.signal) -> ()
      %1397 = "equeue.control_start"() : () -> !equeue.signal
      %done_676 = "equeue.launch"(%1397, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_677 = "equeue.launch"(%1397, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1398 = "equeue.control_and"(%done_676, %done_677) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_678 = "equeue.launch"(%1397, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1399 = "equeue.control_and"(%1398, %done_678) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_679 = "equeue.launch"(%1397, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1400 = "equeue.control_and"(%1399, %done_679) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_680 = "equeue.launch"(%1397, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1401 = "equeue.control_and"(%1400, %done_680) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_681 = "equeue.launch"(%1397, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1402 = "equeue.control_and"(%1401, %done_681) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_682 = "equeue.launch"(%1397, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1403 = "equeue.control_and"(%1402, %done_682) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_683 = "equeue.launch"(%1397, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1404 = "equeue.control_and"(%1403, %done_683) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_684 = "equeue.launch"(%1397, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1405 = "equeue.control_and"(%1404, %done_684) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_685 = "equeue.launch"(%1397, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1406 = "equeue.control_and"(%1405, %done_685) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_686 = "equeue.launch"(%1397, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1407 = "equeue.control_and"(%1406, %done_686) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_687 = "equeue.launch"(%1397, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1408 = "equeue.control_and"(%1407, %done_687) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_688 = "equeue.launch"(%1397, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1409 = "equeue.control_and"(%1408, %done_688) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_689 = "equeue.launch"(%1397, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1410 = "equeue.control_and"(%1409, %done_689) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_690 = "equeue.launch"(%1397, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1411 = "equeue.control_and"(%1410, %done_690) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_691 = "equeue.launch"(%1397, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1412 = "equeue.control_and"(%1411, %done_691) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_692 = "equeue.launch"(%1397, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1413 = "equeue.control_and"(%1412, %done_692) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_693 = "equeue.launch"(%1397, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1414 = "equeue.control_and"(%1413, %done_693) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_694 = "equeue.launch"(%1397, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1415 = "equeue.control_and"(%1414, %done_694) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_695 = "equeue.launch"(%1397, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1416 = "equeue.control_and"(%1415, %done_695) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_696 = "equeue.launch"(%1397, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1417 = "equeue.control_and"(%1416, %done_696) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_697 = "equeue.launch"(%1397, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1418 = "equeue.control_and"(%1417, %done_697) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_698 = "equeue.launch"(%1397, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1419 = "equeue.control_and"(%1418, %done_698) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_699 = "equeue.launch"(%1397, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1420 = "equeue.control_and"(%1419, %done_699) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_700 = "equeue.launch"(%1397, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1421 = "equeue.control_and"(%1420, %done_700) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1421) : (!equeue.signal) -> ()
      %1422 = "equeue.control_start"() : () -> !equeue.signal
      %c0_701 = constant 0 : index
      %1423 = "equeue.memcpy"(%1422, %122, %127, %111, %c0_701) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1424 = "equeue.memcpy"(%1422, %122, %133, %113, %c0_701) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1425 = "equeue.control_and"(%1424, %1423) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1426 = "equeue.memcpy"(%1422, %122, %139, %115, %c0_701) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1427 = "equeue.control_and"(%1426, %1425) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1428 = "equeue.memcpy"(%1422, %122, %145, %117, %c0_701) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1429 = "equeue.control_and"(%1428, %1427) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1430 = "equeue.memcpy"(%1422, %122, %151, %119, %c0_701) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1431 = "equeue.control_and"(%1430, %1429) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1432 = "equeue.memcpy"(%1422, %121, %129, %102, %c0_701) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1433 = "equeue.memcpy"(%1422, %121, %159, %104, %c0_701) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1434 = "equeue.control_and"(%1433, %1432) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1435 = "equeue.memcpy"(%1422, %121, %189, %106, %c0_701) {dest_bank = 1 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1436 = "equeue.control_and"(%1435, %1434) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1437 = "equeue.memcpy"(%1422, %121, %219, %108, %c0_701) {dest_bank = 1 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1438 = "equeue.control_and"(%1437, %1436) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1439 = "equeue.memcpy"(%1422, %121, %249, %110, %c0_701) {dest_bank = 1 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1440 = "equeue.control_and"(%1439, %1438) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1440, %1431) : (!equeue.signal, !equeue.signal) -> ()
      %1441 = "equeue.control_start"() : () -> !equeue.signal
      %done_702 = "equeue.launch"(%1441, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        %cst = constant 7.000000e+00 : f32
        "equeue.write"(%cst, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%2714, %arg10) {bank = 0 : i64} : (f32, memref<5x3x3xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_703 = "equeue.launch"(%1441, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1442 = "equeue.control_and"(%done_702, %done_703) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_704 = "equeue.launch"(%1441, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1443 = "equeue.control_and"(%1442, %done_704) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_705 = "equeue.launch"(%1441, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1444 = "equeue.control_and"(%1443, %done_705) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_706 = "equeue.launch"(%1441, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1445 = "equeue.control_and"(%1444, %done_706) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_707 = "equeue.launch"(%1441, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1446 = "equeue.control_and"(%1445, %done_707) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_708 = "equeue.launch"(%1441, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1447 = "equeue.control_and"(%1446, %done_708) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_709 = "equeue.launch"(%1441, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1448 = "equeue.control_and"(%1447, %done_709) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_710 = "equeue.launch"(%1441, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1449 = "equeue.control_and"(%1448, %done_710) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_711 = "equeue.launch"(%1441, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1450 = "equeue.control_and"(%1449, %done_711) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_712 = "equeue.launch"(%1441, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1451 = "equeue.control_and"(%1450, %done_712) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_713 = "equeue.launch"(%1441, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1452 = "equeue.control_and"(%1451, %done_713) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_714 = "equeue.launch"(%1441, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1453 = "equeue.control_and"(%1452, %done_714) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_715 = "equeue.launch"(%1441, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1454 = "equeue.control_and"(%1453, %done_715) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_716 = "equeue.launch"(%1441, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1455 = "equeue.control_and"(%1454, %done_716) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_717 = "equeue.launch"(%1441, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1456 = "equeue.control_and"(%1455, %done_717) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_718 = "equeue.launch"(%1441, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1457 = "equeue.control_and"(%1456, %done_718) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_719 = "equeue.launch"(%1441, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1458 = "equeue.control_and"(%1457, %done_719) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_720 = "equeue.launch"(%1441, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1459 = "equeue.control_and"(%1458, %done_720) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_721 = "equeue.launch"(%1441, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1460 = "equeue.control_and"(%1459, %done_721) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_722 = "equeue.launch"(%1441, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1461 = "equeue.control_and"(%1460, %done_722) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_723 = "equeue.launch"(%1441, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1462 = "equeue.control_and"(%1461, %done_723) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_724 = "equeue.launch"(%1441, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1463 = "equeue.control_and"(%1462, %done_724) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_725 = "equeue.launch"(%1441, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1464 = "equeue.control_and"(%1463, %done_725) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_726 = "equeue.launch"(%1441, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1465 = "equeue.control_and"(%1464, %done_726) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1465) : (!equeue.signal) -> ()
      %1466 = "equeue.control_start"() : () -> !equeue.signal
      %c0_727 = constant 0 : index
      %1467 = "equeue.memcpy"(%1466, %122, %127, %111, %c0_727) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1468 = "equeue.memcpy"(%1466, %122, %133, %113, %c0_727) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1469 = "equeue.control_and"(%1468, %1467) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1470 = "equeue.memcpy"(%1466, %122, %139, %115, %c0_727) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1471 = "equeue.control_and"(%1470, %1469) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1472 = "equeue.memcpy"(%1466, %122, %145, %117, %c0_727) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1473 = "equeue.control_and"(%1472, %1471) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1474 = "equeue.memcpy"(%1466, %122, %151, %119, %c0_727) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1475 = "equeue.control_and"(%1474, %1473) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1476 = "equeue.memcpy"(%1466, %121, %129, %102, %c0_727) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1477 = "equeue.memcpy"(%1466, %121, %159, %104, %c0_727) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1478 = "equeue.control_and"(%1477, %1476) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1479 = "equeue.memcpy"(%1466, %121, %189, %106, %c0_727) {dest_bank = 1 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1480 = "equeue.control_and"(%1479, %1478) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1481 = "equeue.memcpy"(%1466, %121, %219, %108, %c0_727) {dest_bank = 1 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1482 = "equeue.control_and"(%1481, %1480) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1483 = "equeue.memcpy"(%1466, %121, %249, %110, %c0_727) {dest_bank = 1 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1484 = "equeue.control_and"(%1483, %1482) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1484, %1475) : (!equeue.signal, !equeue.signal) -> ()
      %1485 = "equeue.control_start"() : () -> !equeue.signal
      %done_728 = "equeue.launch"(%1485, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_729 = "equeue.launch"(%1485, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        %cst = constant 7.000000e+00 : f32
        "equeue.write"(%cst, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%2714, %arg10) {bank = 0 : i64} : (f32, memref<5x3x3xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1486 = "equeue.control_and"(%done_728, %done_729) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_730 = "equeue.launch"(%1485, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1487 = "equeue.control_and"(%1486, %done_730) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_731 = "equeue.launch"(%1485, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1488 = "equeue.control_and"(%1487, %done_731) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_732 = "equeue.launch"(%1485, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1489 = "equeue.control_and"(%1488, %done_732) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_733 = "equeue.launch"(%1485, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        %cst = constant 7.000000e+00 : f32
        "equeue.write"(%cst, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%2714, %arg10) {bank = 1 : i64} : (f32, memref<5x3x3xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1490 = "equeue.control_and"(%1489, %done_733) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_734 = "equeue.launch"(%1485, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1491 = "equeue.control_and"(%1490, %done_734) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_735 = "equeue.launch"(%1485, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1492 = "equeue.control_and"(%1491, %done_735) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_736 = "equeue.launch"(%1485, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1493 = "equeue.control_and"(%1492, %done_736) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_737 = "equeue.launch"(%1485, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1494 = "equeue.control_and"(%1493, %done_737) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_738 = "equeue.launch"(%1485, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1495 = "equeue.control_and"(%1494, %done_738) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_739 = "equeue.launch"(%1485, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1496 = "equeue.control_and"(%1495, %done_739) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_740 = "equeue.launch"(%1485, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1497 = "equeue.control_and"(%1496, %done_740) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_741 = "equeue.launch"(%1485, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1498 = "equeue.control_and"(%1497, %done_741) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_742 = "equeue.launch"(%1485, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1499 = "equeue.control_and"(%1498, %done_742) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_743 = "equeue.launch"(%1485, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1500 = "equeue.control_and"(%1499, %done_743) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_744 = "equeue.launch"(%1485, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1501 = "equeue.control_and"(%1500, %done_744) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_745 = "equeue.launch"(%1485, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1502 = "equeue.control_and"(%1501, %done_745) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_746 = "equeue.launch"(%1485, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1503 = "equeue.control_and"(%1502, %done_746) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_747 = "equeue.launch"(%1485, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1504 = "equeue.control_and"(%1503, %done_747) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_748 = "equeue.launch"(%1485, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1505 = "equeue.control_and"(%1504, %done_748) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_749 = "equeue.launch"(%1485, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1506 = "equeue.control_and"(%1505, %done_749) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_750 = "equeue.launch"(%1485, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1507 = "equeue.control_and"(%1506, %done_750) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_751 = "equeue.launch"(%1485, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1508 = "equeue.control_and"(%1507, %done_751) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_752 = "equeue.launch"(%1485, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1509 = "equeue.control_and"(%1508, %done_752) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1509) : (!equeue.signal) -> ()
      %1510 = "equeue.control_start"() : () -> !equeue.signal
      %c0_753 = constant 0 : index
      %1511 = "equeue.memcpy"(%1510, %122, %127, %111, %c0_753) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1512 = "equeue.memcpy"(%1510, %122, %133, %113, %c0_753) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1513 = "equeue.control_and"(%1512, %1511) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1514 = "equeue.memcpy"(%1510, %122, %139, %115, %c0_753) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1515 = "equeue.control_and"(%1514, %1513) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1516 = "equeue.memcpy"(%1510, %122, %145, %117, %c0_753) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1517 = "equeue.control_and"(%1516, %1515) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1518 = "equeue.memcpy"(%1510, %122, %151, %119, %c0_753) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1519 = "equeue.control_and"(%1518, %1517) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1520 = "equeue.memcpy"(%1510, %121, %129, %102, %c0_753) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1521 = "equeue.memcpy"(%1510, %121, %159, %104, %c0_753) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1522 = "equeue.control_and"(%1521, %1520) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1523 = "equeue.memcpy"(%1510, %121, %189, %106, %c0_753) {dest_bank = 1 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1524 = "equeue.control_and"(%1523, %1522) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1525 = "equeue.memcpy"(%1510, %121, %219, %108, %c0_753) {dest_bank = 1 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1526 = "equeue.control_and"(%1525, %1524) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1527 = "equeue.memcpy"(%1510, %121, %249, %110, %c0_753) {dest_bank = 1 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1528 = "equeue.control_and"(%1527, %1526) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1528, %1519) : (!equeue.signal, !equeue.signal) -> ()
      %1529 = "equeue.control_start"() : () -> !equeue.signal
      %done_754 = "equeue.launch"(%1529, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_755 = "equeue.launch"(%1529, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1530 = "equeue.control_and"(%done_754, %done_755) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_756 = "equeue.launch"(%1529, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        %cst = constant 7.000000e+00 : f32
        "equeue.write"(%cst, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%2714, %arg10) {bank = 0 : i64} : (f32, memref<5x3x3xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1531 = "equeue.control_and"(%1530, %done_756) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_757 = "equeue.launch"(%1529, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1532 = "equeue.control_and"(%1531, %done_757) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_758 = "equeue.launch"(%1529, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1533 = "equeue.control_and"(%1532, %done_758) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_759 = "equeue.launch"(%1529, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1534 = "equeue.control_and"(%1533, %done_759) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_760 = "equeue.launch"(%1529, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        %cst = constant 7.000000e+00 : f32
        "equeue.write"(%cst, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%2714, %arg10) {bank = 1 : i64} : (f32, memref<5x3x3xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1535 = "equeue.control_and"(%1534, %done_760) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_761 = "equeue.launch"(%1529, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1536 = "equeue.control_and"(%1535, %done_761) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_762 = "equeue.launch"(%1529, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1537 = "equeue.control_and"(%1536, %done_762) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_763 = "equeue.launch"(%1529, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1538 = "equeue.control_and"(%1537, %done_763) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_764 = "equeue.launch"(%1529, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        %cst = constant 7.000000e+00 : f32
        "equeue.write"(%cst, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%2714, %arg10) {bank = 2 : i64} : (f32, memref<5x3x3xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1539 = "equeue.control_and"(%1538, %done_764) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_765 = "equeue.launch"(%1529, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1540 = "equeue.control_and"(%1539, %done_765) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_766 = "equeue.launch"(%1529, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1541 = "equeue.control_and"(%1540, %done_766) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_767 = "equeue.launch"(%1529, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1542 = "equeue.control_and"(%1541, %done_767) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_768 = "equeue.launch"(%1529, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1543 = "equeue.control_and"(%1542, %done_768) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_769 = "equeue.launch"(%1529, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1544 = "equeue.control_and"(%1543, %done_769) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_770 = "equeue.launch"(%1529, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1545 = "equeue.control_and"(%1544, %done_770) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_771 = "equeue.launch"(%1529, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1546 = "equeue.control_and"(%1545, %done_771) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_772 = "equeue.launch"(%1529, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1547 = "equeue.control_and"(%1546, %done_772) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_773 = "equeue.launch"(%1529, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1548 = "equeue.control_and"(%1547, %done_773) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_774 = "equeue.launch"(%1529, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1549 = "equeue.control_and"(%1548, %done_774) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_775 = "equeue.launch"(%1529, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1550 = "equeue.control_and"(%1549, %done_775) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_776 = "equeue.launch"(%1529, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1551 = "equeue.control_and"(%1550, %done_776) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_777 = "equeue.launch"(%1529, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1552 = "equeue.control_and"(%1551, %done_777) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_778 = "equeue.launch"(%1529, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1553 = "equeue.control_and"(%1552, %done_778) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1553) : (!equeue.signal) -> ()
      %1554 = "equeue.control_start"() : () -> !equeue.signal
      %c0_779 = constant 0 : index
      %1555 = "equeue.memcpy"(%1554, %122, %127, %111, %c0_779) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1556 = "equeue.memcpy"(%1554, %122, %133, %113, %c0_779) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1557 = "equeue.control_and"(%1556, %1555) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1558 = "equeue.memcpy"(%1554, %122, %139, %115, %c0_779) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1559 = "equeue.control_and"(%1558, %1557) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1560 = "equeue.memcpy"(%1554, %122, %145, %117, %c0_779) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1561 = "equeue.control_and"(%1560, %1559) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1562 = "equeue.memcpy"(%1554, %122, %151, %119, %c0_779) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1563 = "equeue.control_and"(%1562, %1561) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1564 = "equeue.memcpy"(%1554, %121, %129, %102, %c0_779) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1565 = "equeue.memcpy"(%1554, %121, %159, %104, %c0_779) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1566 = "equeue.control_and"(%1565, %1564) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1567 = "equeue.memcpy"(%1554, %121, %189, %106, %c0_779) {dest_bank = 1 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1568 = "equeue.control_and"(%1567, %1566) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1569 = "equeue.memcpy"(%1554, %121, %219, %108, %c0_779) {dest_bank = 1 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1570 = "equeue.control_and"(%1569, %1568) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1571 = "equeue.memcpy"(%1554, %121, %249, %110, %c0_779) {dest_bank = 1 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1572 = "equeue.control_and"(%1571, %1570) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1572, %1563) : (!equeue.signal, !equeue.signal) -> ()
      %1573 = "equeue.control_start"() : () -> !equeue.signal
      %done_780 = "equeue.launch"(%1573, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_781 = "equeue.launch"(%1573, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1574 = "equeue.control_and"(%done_780, %done_781) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_782 = "equeue.launch"(%1573, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1575 = "equeue.control_and"(%1574, %done_782) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_783 = "equeue.launch"(%1573, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        %cst = constant 7.000000e+00 : f32
        "equeue.write"(%cst, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%2714, %arg10) {bank = 0 : i64} : (f32, memref<5x3x3xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1576 = "equeue.control_and"(%1575, %done_783) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_784 = "equeue.launch"(%1573, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1577 = "equeue.control_and"(%1576, %done_784) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_785 = "equeue.launch"(%1573, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1578 = "equeue.control_and"(%1577, %done_785) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_786 = "equeue.launch"(%1573, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1579 = "equeue.control_and"(%1578, %done_786) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_787 = "equeue.launch"(%1573, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        %cst = constant 7.000000e+00 : f32
        "equeue.write"(%cst, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%2714, %arg10) {bank = 1 : i64} : (f32, memref<5x3x3xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1580 = "equeue.control_and"(%1579, %done_787) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_788 = "equeue.launch"(%1573, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1581 = "equeue.control_and"(%1580, %done_788) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_789 = "equeue.launch"(%1573, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1582 = "equeue.control_and"(%1581, %done_789) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_790 = "equeue.launch"(%1573, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1583 = "equeue.control_and"(%1582, %done_790) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_791 = "equeue.launch"(%1573, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        %cst = constant 7.000000e+00 : f32
        "equeue.write"(%cst, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%2714, %arg10) {bank = 2 : i64} : (f32, memref<5x3x3xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1584 = "equeue.control_and"(%1583, %done_791) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_792 = "equeue.launch"(%1573, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1585 = "equeue.control_and"(%1584, %done_792) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_793 = "equeue.launch"(%1573, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1586 = "equeue.control_and"(%1585, %done_793) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_794 = "equeue.launch"(%1573, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1587 = "equeue.control_and"(%1586, %done_794) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_795 = "equeue.launch"(%1573, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        %cst = constant 7.000000e+00 : f32
        "equeue.write"(%cst, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%2714, %arg10) {bank = 3 : i64} : (f32, memref<5x3x3xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1588 = "equeue.control_and"(%1587, %done_795) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_796 = "equeue.launch"(%1573, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1589 = "equeue.control_and"(%1588, %done_796) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_797 = "equeue.launch"(%1573, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1590 = "equeue.control_and"(%1589, %done_797) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_798 = "equeue.launch"(%1573, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1591 = "equeue.control_and"(%1590, %done_798) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_799 = "equeue.launch"(%1573, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1592 = "equeue.control_and"(%1591, %done_799) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_800 = "equeue.launch"(%1573, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1593 = "equeue.control_and"(%1592, %done_800) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_801 = "equeue.launch"(%1573, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1594 = "equeue.control_and"(%1593, %done_801) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_802 = "equeue.launch"(%1573, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1595 = "equeue.control_and"(%1594, %done_802) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_803 = "equeue.launch"(%1573, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1596 = "equeue.control_and"(%1595, %done_803) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_804 = "equeue.launch"(%1573, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1597 = "equeue.control_and"(%1596, %done_804) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1597) : (!equeue.signal) -> ()
      %1598 = "equeue.control_start"() : () -> !equeue.signal
      %c0_805 = constant 0 : index
      %1599 = "equeue.memcpy"(%1598, %122, %127, %111, %c0_805) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1600 = "equeue.memcpy"(%1598, %122, %133, %113, %c0_805) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1601 = "equeue.control_and"(%1600, %1599) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1602 = "equeue.memcpy"(%1598, %122, %139, %115, %c0_805) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1603 = "equeue.control_and"(%1602, %1601) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1604 = "equeue.memcpy"(%1598, %122, %145, %117, %c0_805) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1605 = "equeue.control_and"(%1604, %1603) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1606 = "equeue.memcpy"(%1598, %122, %151, %119, %c0_805) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1607 = "equeue.control_and"(%1606, %1605) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1608 = "equeue.memcpy"(%1598, %121, %129, %102, %c0_805) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1609 = "equeue.memcpy"(%1598, %121, %159, %104, %c0_805) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1610 = "equeue.control_and"(%1609, %1608) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1611 = "equeue.memcpy"(%1598, %121, %189, %106, %c0_805) {dest_bank = 1 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1612 = "equeue.control_and"(%1611, %1610) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1613 = "equeue.memcpy"(%1598, %121, %219, %108, %c0_805) {dest_bank = 1 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1614 = "equeue.control_and"(%1613, %1612) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1615 = "equeue.memcpy"(%1598, %121, %249, %110, %c0_805) {dest_bank = 1 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1616 = "equeue.control_and"(%1615, %1614) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1616, %1607) : (!equeue.signal, !equeue.signal) -> ()
      %1617 = "equeue.control_start"() : () -> !equeue.signal
      %done_806 = "equeue.launch"(%1617, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_807 = "equeue.launch"(%1617, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1618 = "equeue.control_and"(%done_806, %done_807) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_808 = "equeue.launch"(%1617, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1619 = "equeue.control_and"(%1618, %done_808) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_809 = "equeue.launch"(%1617, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1620 = "equeue.control_and"(%1619, %done_809) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_810 = "equeue.launch"(%1617, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        %cst = constant 7.000000e+00 : f32
        "equeue.write"(%cst, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%2714, %arg9) {bank = 0 : i64} : (f32, memref<5x3x3xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1621 = "equeue.control_and"(%1620, %done_810) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_811 = "equeue.launch"(%1617, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1622 = "equeue.control_and"(%1621, %done_811) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_812 = "equeue.launch"(%1617, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1623 = "equeue.control_and"(%1622, %done_812) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_813 = "equeue.launch"(%1617, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1624 = "equeue.control_and"(%1623, %done_813) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_814 = "equeue.launch"(%1617, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        %cst = constant 7.000000e+00 : f32
        "equeue.write"(%cst, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%2714, %arg10) {bank = 1 : i64} : (f32, memref<5x3x3xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1625 = "equeue.control_and"(%1624, %done_814) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_815 = "equeue.launch"(%1617, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1626 = "equeue.control_and"(%1625, %done_815) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_816 = "equeue.launch"(%1617, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1627 = "equeue.control_and"(%1626, %done_816) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_817 = "equeue.launch"(%1617, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1628 = "equeue.control_and"(%1627, %done_817) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_818 = "equeue.launch"(%1617, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        %cst = constant 7.000000e+00 : f32
        "equeue.write"(%cst, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%2714, %arg10) {bank = 2 : i64} : (f32, memref<5x3x3xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1629 = "equeue.control_and"(%1628, %done_818) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_819 = "equeue.launch"(%1617, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1630 = "equeue.control_and"(%1629, %done_819) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_820 = "equeue.launch"(%1617, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1631 = "equeue.control_and"(%1630, %done_820) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_821 = "equeue.launch"(%1617, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1632 = "equeue.control_and"(%1631, %done_821) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_822 = "equeue.launch"(%1617, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        %cst = constant 7.000000e+00 : f32
        "equeue.write"(%cst, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%2714, %arg10) {bank = 3 : i64} : (f32, memref<5x3x3xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1633 = "equeue.control_and"(%1632, %done_822) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_823 = "equeue.launch"(%1617, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1634 = "equeue.control_and"(%1633, %done_823) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_824 = "equeue.launch"(%1617, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1635 = "equeue.control_and"(%1634, %done_824) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_825 = "equeue.launch"(%1617, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1636 = "equeue.control_and"(%1635, %done_825) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_826 = "equeue.launch"(%1617, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        %cst = constant 7.000000e+00 : f32
        "equeue.write"(%cst, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%2714, %arg9) {bank = 4 : i64} : (f32, memref<5x3x3xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1637 = "equeue.control_and"(%1636, %done_826) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_827 = "equeue.launch"(%1617, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1638 = "equeue.control_and"(%1637, %done_827) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_828 = "equeue.launch"(%1617, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1639 = "equeue.control_and"(%1638, %done_828) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_829 = "equeue.launch"(%1617, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1640 = "equeue.control_and"(%1639, %done_829) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_830 = "equeue.launch"(%1617, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1641 = "equeue.control_and"(%1640, %done_830) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1641) : (!equeue.signal) -> ()
      %1642 = "equeue.control_start"() : () -> !equeue.signal
      %c0_831 = constant 0 : index
      %1643 = "equeue.memcpy"(%1642, %122, %127, %111, %c0_831) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1644 = "equeue.memcpy"(%1642, %122, %133, %113, %c0_831) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1645 = "equeue.control_and"(%1644, %1643) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1646 = "equeue.memcpy"(%1642, %122, %139, %115, %c0_831) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1647 = "equeue.control_and"(%1646, %1645) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1648 = "equeue.memcpy"(%1642, %122, %145, %117, %c0_831) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1649 = "equeue.control_and"(%1648, %1647) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1650 = "equeue.memcpy"(%1642, %122, %151, %119, %c0_831) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1651 = "equeue.control_and"(%1650, %1649) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1652 = "equeue.memcpy"(%1642, %121, %129, %102, %c0_831) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1653 = "equeue.memcpy"(%1642, %121, %159, %104, %c0_831) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1654 = "equeue.control_and"(%1653, %1652) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1655 = "equeue.memcpy"(%1642, %121, %189, %106, %c0_831) {dest_bank = 1 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1656 = "equeue.control_and"(%1655, %1654) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1657 = "equeue.memcpy"(%1642, %121, %219, %108, %c0_831) {dest_bank = 1 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1658 = "equeue.control_and"(%1657, %1656) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1659 = "equeue.memcpy"(%1642, %121, %249, %110, %c0_831) {dest_bank = 1 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1660 = "equeue.control_and"(%1659, %1658) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1660, %1651) : (!equeue.signal, !equeue.signal) -> ()
      %1661 = "equeue.control_start"() : () -> !equeue.signal
      %done_832 = "equeue.launch"(%1661, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_833 = "equeue.launch"(%1661, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1662 = "equeue.control_and"(%done_832, %done_833) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_834 = "equeue.launch"(%1661, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1663 = "equeue.control_and"(%1662, %done_834) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_835 = "equeue.launch"(%1661, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1664 = "equeue.control_and"(%1663, %done_835) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_836 = "equeue.launch"(%1661, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1665 = "equeue.control_and"(%1664, %done_836) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_837 = "equeue.launch"(%1661, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1666 = "equeue.control_and"(%1665, %done_837) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_838 = "equeue.launch"(%1661, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1667 = "equeue.control_and"(%1666, %done_838) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_839 = "equeue.launch"(%1661, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1668 = "equeue.control_and"(%1667, %done_839) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_840 = "equeue.launch"(%1661, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1669 = "equeue.control_and"(%1668, %done_840) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_841 = "equeue.launch"(%1661, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        %cst = constant 7.000000e+00 : f32
        "equeue.write"(%cst, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%2714, %arg9) {bank = 1 : i64} : (f32, memref<5x3x3xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1670 = "equeue.control_and"(%1669, %done_841) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_842 = "equeue.launch"(%1661, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1671 = "equeue.control_and"(%1670, %done_842) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_843 = "equeue.launch"(%1661, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1672 = "equeue.control_and"(%1671, %done_843) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_844 = "equeue.launch"(%1661, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1673 = "equeue.control_and"(%1672, %done_844) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_845 = "equeue.launch"(%1661, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        %cst = constant 7.000000e+00 : f32
        "equeue.write"(%cst, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%2714, %arg10) {bank = 2 : i64} : (f32, memref<5x3x3xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1674 = "equeue.control_and"(%1673, %done_845) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_846 = "equeue.launch"(%1661, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1675 = "equeue.control_and"(%1674, %done_846) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_847 = "equeue.launch"(%1661, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1676 = "equeue.control_and"(%1675, %done_847) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_848 = "equeue.launch"(%1661, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1677 = "equeue.control_and"(%1676, %done_848) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_849 = "equeue.launch"(%1661, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        %cst = constant 7.000000e+00 : f32
        "equeue.write"(%cst, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%2714, %arg10) {bank = 3 : i64} : (f32, memref<5x3x3xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1678 = "equeue.control_and"(%1677, %done_849) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_850 = "equeue.launch"(%1661, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1679 = "equeue.control_and"(%1678, %done_850) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_851 = "equeue.launch"(%1661, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1680 = "equeue.control_and"(%1679, %done_851) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_852 = "equeue.launch"(%1661, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1681 = "equeue.control_and"(%1680, %done_852) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_853 = "equeue.launch"(%1661, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        %cst = constant 7.000000e+00 : f32
        "equeue.write"(%cst, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%2714, %arg9) {bank = 4 : i64} : (f32, memref<5x3x3xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1682 = "equeue.control_and"(%1681, %done_853) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_854 = "equeue.launch"(%1661, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1683 = "equeue.control_and"(%1682, %done_854) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_855 = "equeue.launch"(%1661, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1684 = "equeue.control_and"(%1683, %done_855) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_856 = "equeue.launch"(%1661, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1685 = "equeue.control_and"(%1684, %done_856) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1685) : (!equeue.signal) -> ()
      %1686 = "equeue.control_start"() : () -> !equeue.signal
      %c0_857 = constant 0 : index
      %1687 = "equeue.memcpy"(%1686, %122, %127, %111, %c0_857) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1688 = "equeue.memcpy"(%1686, %122, %133, %113, %c0_857) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1689 = "equeue.control_and"(%1688, %1687) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1690 = "equeue.memcpy"(%1686, %122, %139, %115, %c0_857) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1691 = "equeue.control_and"(%1690, %1689) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1692 = "equeue.memcpy"(%1686, %122, %145, %117, %c0_857) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1693 = "equeue.control_and"(%1692, %1691) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1694 = "equeue.memcpy"(%1686, %122, %151, %119, %c0_857) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1695 = "equeue.control_and"(%1694, %1693) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1696 = "equeue.memcpy"(%1686, %121, %129, %102, %c0_857) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1697 = "equeue.memcpy"(%1686, %121, %159, %104, %c0_857) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1698 = "equeue.control_and"(%1697, %1696) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1699 = "equeue.memcpy"(%1686, %121, %189, %106, %c0_857) {dest_bank = 1 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1700 = "equeue.control_and"(%1699, %1698) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1701 = "equeue.memcpy"(%1686, %121, %219, %108, %c0_857) {dest_bank = 1 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1702 = "equeue.control_and"(%1701, %1700) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1703 = "equeue.memcpy"(%1686, %121, %249, %110, %c0_857) {dest_bank = 1 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1704 = "equeue.control_and"(%1703, %1702) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1704, %1695) : (!equeue.signal, !equeue.signal) -> ()
      %1705 = "equeue.control_start"() : () -> !equeue.signal
      %done_858 = "equeue.launch"(%1705, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_859 = "equeue.launch"(%1705, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1706 = "equeue.control_and"(%done_858, %done_859) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_860 = "equeue.launch"(%1705, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1707 = "equeue.control_and"(%1706, %done_860) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_861 = "equeue.launch"(%1705, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1708 = "equeue.control_and"(%1707, %done_861) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_862 = "equeue.launch"(%1705, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1709 = "equeue.control_and"(%1708, %done_862) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_863 = "equeue.launch"(%1705, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1710 = "equeue.control_and"(%1709, %done_863) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_864 = "equeue.launch"(%1705, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1711 = "equeue.control_and"(%1710, %done_864) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_865 = "equeue.launch"(%1705, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1712 = "equeue.control_and"(%1711, %done_865) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_866 = "equeue.launch"(%1705, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1713 = "equeue.control_and"(%1712, %done_866) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_867 = "equeue.launch"(%1705, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1714 = "equeue.control_and"(%1713, %done_867) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_868 = "equeue.launch"(%1705, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1715 = "equeue.control_and"(%1714, %done_868) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_869 = "equeue.launch"(%1705, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1716 = "equeue.control_and"(%1715, %done_869) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_870 = "equeue.launch"(%1705, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1717 = "equeue.control_and"(%1716, %done_870) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_871 = "equeue.launch"(%1705, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1718 = "equeue.control_and"(%1717, %done_871) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_872 = "equeue.launch"(%1705, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        %cst = constant 7.000000e+00 : f32
        "equeue.write"(%cst, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%2714, %arg9) {bank = 2 : i64} : (f32, memref<5x3x3xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1719 = "equeue.control_and"(%1718, %done_872) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_873 = "equeue.launch"(%1705, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1720 = "equeue.control_and"(%1719, %done_873) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_874 = "equeue.launch"(%1705, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1721 = "equeue.control_and"(%1720, %done_874) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_875 = "equeue.launch"(%1705, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1722 = "equeue.control_and"(%1721, %done_875) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_876 = "equeue.launch"(%1705, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        %cst = constant 7.000000e+00 : f32
        "equeue.write"(%cst, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%2714, %arg10) {bank = 3 : i64} : (f32, memref<5x3x3xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1723 = "equeue.control_and"(%1722, %done_876) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_877 = "equeue.launch"(%1705, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1724 = "equeue.control_and"(%1723, %done_877) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_878 = "equeue.launch"(%1705, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1725 = "equeue.control_and"(%1724, %done_878) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_879 = "equeue.launch"(%1705, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1726 = "equeue.control_and"(%1725, %done_879) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_880 = "equeue.launch"(%1705, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        %cst = constant 7.000000e+00 : f32
        "equeue.write"(%cst, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%2714, %arg9) {bank = 4 : i64} : (f32, memref<5x3x3xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1727 = "equeue.control_and"(%1726, %done_880) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_881 = "equeue.launch"(%1705, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1728 = "equeue.control_and"(%1727, %done_881) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_882 = "equeue.launch"(%1705, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1729 = "equeue.control_and"(%1728, %done_882) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1729) : (!equeue.signal) -> ()
      %1730 = "equeue.control_start"() : () -> !equeue.signal
      %c0_883 = constant 0 : index
      %1731 = "equeue.memcpy"(%1730, %122, %127, %111, %c0_883) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1732 = "equeue.memcpy"(%1730, %122, %133, %113, %c0_883) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1733 = "equeue.control_and"(%1732, %1731) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1734 = "equeue.memcpy"(%1730, %122, %139, %115, %c0_883) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1735 = "equeue.control_and"(%1734, %1733) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1736 = "equeue.memcpy"(%1730, %122, %145, %117, %c0_883) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1737 = "equeue.control_and"(%1736, %1735) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1738 = "equeue.memcpy"(%1730, %122, %151, %119, %c0_883) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1739 = "equeue.control_and"(%1738, %1737) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1740 = "equeue.memcpy"(%1730, %121, %129, %102, %c0_883) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1741 = "equeue.memcpy"(%1730, %121, %159, %104, %c0_883) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1742 = "equeue.control_and"(%1741, %1740) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1743 = "equeue.memcpy"(%1730, %121, %189, %106, %c0_883) {dest_bank = 1 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1744 = "equeue.control_and"(%1743, %1742) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1745 = "equeue.memcpy"(%1730, %121, %219, %108, %c0_883) {dest_bank = 1 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1746 = "equeue.control_and"(%1745, %1744) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1747 = "equeue.memcpy"(%1730, %121, %249, %110, %c0_883) {dest_bank = 1 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1748 = "equeue.control_and"(%1747, %1746) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1748, %1739) : (!equeue.signal, !equeue.signal) -> ()
      %1749 = "equeue.control_start"() : () -> !equeue.signal
      %done_884 = "equeue.launch"(%1749, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_885 = "equeue.launch"(%1749, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1750 = "equeue.control_and"(%done_884, %done_885) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_886 = "equeue.launch"(%1749, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1751 = "equeue.control_and"(%1750, %done_886) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_887 = "equeue.launch"(%1749, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1752 = "equeue.control_and"(%1751, %done_887) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_888 = "equeue.launch"(%1749, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1753 = "equeue.control_and"(%1752, %done_888) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_889 = "equeue.launch"(%1749, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1754 = "equeue.control_and"(%1753, %done_889) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_890 = "equeue.launch"(%1749, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1755 = "equeue.control_and"(%1754, %done_890) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_891 = "equeue.launch"(%1749, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1756 = "equeue.control_and"(%1755, %done_891) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_892 = "equeue.launch"(%1749, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1757 = "equeue.control_and"(%1756, %done_892) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_893 = "equeue.launch"(%1749, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1758 = "equeue.control_and"(%1757, %done_893) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_894 = "equeue.launch"(%1749, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1759 = "equeue.control_and"(%1758, %done_894) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_895 = "equeue.launch"(%1749, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1760 = "equeue.control_and"(%1759, %done_895) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_896 = "equeue.launch"(%1749, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1761 = "equeue.control_and"(%1760, %done_896) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_897 = "equeue.launch"(%1749, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1762 = "equeue.control_and"(%1761, %done_897) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_898 = "equeue.launch"(%1749, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1763 = "equeue.control_and"(%1762, %done_898) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_899 = "equeue.launch"(%1749, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1764 = "equeue.control_and"(%1763, %done_899) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_900 = "equeue.launch"(%1749, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1765 = "equeue.control_and"(%1764, %done_900) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_901 = "equeue.launch"(%1749, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1766 = "equeue.control_and"(%1765, %done_901) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_902 = "equeue.launch"(%1749, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1767 = "equeue.control_and"(%1766, %done_902) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_903 = "equeue.launch"(%1749, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        %cst = constant 7.000000e+00 : f32
        "equeue.write"(%cst, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%2714, %arg9) {bank = 3 : i64} : (f32, memref<5x3x3xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1768 = "equeue.control_and"(%1767, %done_903) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_904 = "equeue.launch"(%1749, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1769 = "equeue.control_and"(%1768, %done_904) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_905 = "equeue.launch"(%1749, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1770 = "equeue.control_and"(%1769, %done_905) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_906 = "equeue.launch"(%1749, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1771 = "equeue.control_and"(%1770, %done_906) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_907 = "equeue.launch"(%1749, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        %cst = constant 7.000000e+00 : f32
        "equeue.write"(%cst, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%2714, %arg9) {bank = 4 : i64} : (f32, memref<5x3x3xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1772 = "equeue.control_and"(%1771, %done_907) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_908 = "equeue.launch"(%1749, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1773 = "equeue.control_and"(%1772, %done_908) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1773) : (!equeue.signal) -> ()
      %1774 = "equeue.control_start"() : () -> !equeue.signal
      %c0_909 = constant 0 : index
      %1775 = "equeue.memcpy"(%1774, %122, %127, %111, %c0_909) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1776 = "equeue.memcpy"(%1774, %122, %133, %113, %c0_909) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1777 = "equeue.control_and"(%1776, %1775) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1778 = "equeue.memcpy"(%1774, %122, %139, %115, %c0_909) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1779 = "equeue.control_and"(%1778, %1777) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1780 = "equeue.memcpy"(%1774, %122, %145, %117, %c0_909) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1781 = "equeue.control_and"(%1780, %1779) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1782 = "equeue.memcpy"(%1774, %122, %151, %119, %c0_909) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1783 = "equeue.control_and"(%1782, %1781) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1784 = "equeue.memcpy"(%1774, %121, %129, %102, %c0_909) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1785 = "equeue.memcpy"(%1774, %121, %159, %104, %c0_909) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1786 = "equeue.control_and"(%1785, %1784) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1787 = "equeue.memcpy"(%1774, %121, %189, %106, %c0_909) {dest_bank = 1 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1788 = "equeue.control_and"(%1787, %1786) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1789 = "equeue.memcpy"(%1774, %121, %219, %108, %c0_909) {dest_bank = 1 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1790 = "equeue.control_and"(%1789, %1788) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1791 = "equeue.memcpy"(%1774, %121, %249, %110, %c0_909) {dest_bank = 1 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1792 = "equeue.control_and"(%1791, %1790) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1792, %1783) : (!equeue.signal, !equeue.signal) -> ()
      %1793 = "equeue.control_start"() : () -> !equeue.signal
      %done_910 = "equeue.launch"(%1793, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_911 = "equeue.launch"(%1793, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1794 = "equeue.control_and"(%done_910, %done_911) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_912 = "equeue.launch"(%1793, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1795 = "equeue.control_and"(%1794, %done_912) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_913 = "equeue.launch"(%1793, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1796 = "equeue.control_and"(%1795, %done_913) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_914 = "equeue.launch"(%1793, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1797 = "equeue.control_and"(%1796, %done_914) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_915 = "equeue.launch"(%1793, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1798 = "equeue.control_and"(%1797, %done_915) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_916 = "equeue.launch"(%1793, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1799 = "equeue.control_and"(%1798, %done_916) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_917 = "equeue.launch"(%1793, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1800 = "equeue.control_and"(%1799, %done_917) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_918 = "equeue.launch"(%1793, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1801 = "equeue.control_and"(%1800, %done_918) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_919 = "equeue.launch"(%1793, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1802 = "equeue.control_and"(%1801, %done_919) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_920 = "equeue.launch"(%1793, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1803 = "equeue.control_and"(%1802, %done_920) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_921 = "equeue.launch"(%1793, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1804 = "equeue.control_and"(%1803, %done_921) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_922 = "equeue.launch"(%1793, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1805 = "equeue.control_and"(%1804, %done_922) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_923 = "equeue.launch"(%1793, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1806 = "equeue.control_and"(%1805, %done_923) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_924 = "equeue.launch"(%1793, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1807 = "equeue.control_and"(%1806, %done_924) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_925 = "equeue.launch"(%1793, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1808 = "equeue.control_and"(%1807, %done_925) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_926 = "equeue.launch"(%1793, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1809 = "equeue.control_and"(%1808, %done_926) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_927 = "equeue.launch"(%1793, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1810 = "equeue.control_and"(%1809, %done_927) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_928 = "equeue.launch"(%1793, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1811 = "equeue.control_and"(%1810, %done_928) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_929 = "equeue.launch"(%1793, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1812 = "equeue.control_and"(%1811, %done_929) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_930 = "equeue.launch"(%1793, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1813 = "equeue.control_and"(%1812, %done_930) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_931 = "equeue.launch"(%1793, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1814 = "equeue.control_and"(%1813, %done_931) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_932 = "equeue.launch"(%1793, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1815 = "equeue.control_and"(%1814, %done_932) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_933 = "equeue.launch"(%1793, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1816 = "equeue.control_and"(%1815, %done_933) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_934 = "equeue.launch"(%1793, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        %cst = constant 7.000000e+00 : f32
        "equeue.write"(%cst, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%2714, %arg8) {bank = 4 : i64} : (f32, memref<5x3x3xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1817 = "equeue.control_and"(%1816, %done_934) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1817) : (!equeue.signal) -> ()
      %1818 = "equeue.control_start"() : () -> !equeue.signal
      %c0_935 = constant 0 : index
      %1819 = "equeue.memcpy"(%1818, %122, %127, %111, %c0_935) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1820 = "equeue.memcpy"(%1818, %122, %133, %113, %c0_935) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1821 = "equeue.control_and"(%1820, %1819) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1822 = "equeue.memcpy"(%1818, %122, %139, %115, %c0_935) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1823 = "equeue.control_and"(%1822, %1821) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1824 = "equeue.memcpy"(%1818, %122, %145, %117, %c0_935) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1825 = "equeue.control_and"(%1824, %1823) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1826 = "equeue.memcpy"(%1818, %122, %151, %119, %c0_935) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1827 = "equeue.control_and"(%1826, %1825) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1828 = "equeue.memcpy"(%1818, %121, %129, %102, %c0_935) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1829 = "equeue.memcpy"(%1818, %121, %159, %104, %c0_935) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1830 = "equeue.control_and"(%1829, %1828) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1831 = "equeue.memcpy"(%1818, %121, %189, %106, %c0_935) {dest_bank = 1 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1832 = "equeue.control_and"(%1831, %1830) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1833 = "equeue.memcpy"(%1818, %121, %219, %108, %c0_935) {dest_bank = 1 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1834 = "equeue.control_and"(%1833, %1832) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1835 = "equeue.memcpy"(%1818, %121, %249, %110, %c0_935) {dest_bank = 1 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1836 = "equeue.control_and"(%1835, %1834) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1836, %1827) : (!equeue.signal, !equeue.signal) -> ()
      %1837 = "equeue.control_start"() : () -> !equeue.signal
      %done_936 = "equeue.launch"(%1837, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_937 = "equeue.launch"(%1837, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1838 = "equeue.control_and"(%done_936, %done_937) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_938 = "equeue.launch"(%1837, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1839 = "equeue.control_and"(%1838, %done_938) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_939 = "equeue.launch"(%1837, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1840 = "equeue.control_and"(%1839, %done_939) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_940 = "equeue.launch"(%1837, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1841 = "equeue.control_and"(%1840, %done_940) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_941 = "equeue.launch"(%1837, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1842 = "equeue.control_and"(%1841, %done_941) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_942 = "equeue.launch"(%1837, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1843 = "equeue.control_and"(%1842, %done_942) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_943 = "equeue.launch"(%1837, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1844 = "equeue.control_and"(%1843, %done_943) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_944 = "equeue.launch"(%1837, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1845 = "equeue.control_and"(%1844, %done_944) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_945 = "equeue.launch"(%1837, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1846 = "equeue.control_and"(%1845, %done_945) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_946 = "equeue.launch"(%1837, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1847 = "equeue.control_and"(%1846, %done_946) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_947 = "equeue.launch"(%1837, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1848 = "equeue.control_and"(%1847, %done_947) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_948 = "equeue.launch"(%1837, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1849 = "equeue.control_and"(%1848, %done_948) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_949 = "equeue.launch"(%1837, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1850 = "equeue.control_and"(%1849, %done_949) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_950 = "equeue.launch"(%1837, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1851 = "equeue.control_and"(%1850, %done_950) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_951 = "equeue.launch"(%1837, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1852 = "equeue.control_and"(%1851, %done_951) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_952 = "equeue.launch"(%1837, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1853 = "equeue.control_and"(%1852, %done_952) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_953 = "equeue.launch"(%1837, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1854 = "equeue.control_and"(%1853, %done_953) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_954 = "equeue.launch"(%1837, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1855 = "equeue.control_and"(%1854, %done_954) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_955 = "equeue.launch"(%1837, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1856 = "equeue.control_and"(%1855, %done_955) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_956 = "equeue.launch"(%1837, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1857 = "equeue.control_and"(%1856, %done_956) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_957 = "equeue.launch"(%1837, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1858 = "equeue.control_and"(%1857, %done_957) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_958 = "equeue.launch"(%1837, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1859 = "equeue.control_and"(%1858, %done_958) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_959 = "equeue.launch"(%1837, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1860 = "equeue.control_and"(%1859, %done_959) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_960 = "equeue.launch"(%1837, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1861 = "equeue.control_and"(%1860, %done_960) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1861) : (!equeue.signal) -> ()
      %1862 = "equeue.control_start"() : () -> !equeue.signal
      %c0_961 = constant 0 : index
      %1863 = "equeue.memcpy"(%1862, %122, %127, %111, %c0_961) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1864 = "equeue.memcpy"(%1862, %122, %133, %113, %c0_961) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1865 = "equeue.control_and"(%1864, %1863) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1866 = "equeue.memcpy"(%1862, %122, %139, %115, %c0_961) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1867 = "equeue.control_and"(%1866, %1865) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1868 = "equeue.memcpy"(%1862, %122, %145, %117, %c0_961) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1869 = "equeue.control_and"(%1868, %1867) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1870 = "equeue.memcpy"(%1862, %122, %151, %119, %c0_961) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1871 = "equeue.control_and"(%1870, %1869) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1872 = "equeue.memcpy"(%1862, %121, %129, %102, %c0_961) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1873 = "equeue.memcpy"(%1862, %121, %159, %104, %c0_961) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1874 = "equeue.control_and"(%1873, %1872) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1875 = "equeue.memcpy"(%1862, %121, %189, %106, %c0_961) {dest_bank = 1 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1876 = "equeue.control_and"(%1875, %1874) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1877 = "equeue.memcpy"(%1862, %121, %219, %108, %c0_961) {dest_bank = 1 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1878 = "equeue.control_and"(%1877, %1876) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1879 = "equeue.memcpy"(%1862, %121, %249, %110, %c0_961) {dest_bank = 1 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1880 = "equeue.control_and"(%1879, %1878) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1880, %1871) : (!equeue.signal, !equeue.signal) -> ()
      %1881 = "equeue.control_start"() : () -> !equeue.signal
      %done_962 = "equeue.launch"(%1881, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_963 = "equeue.launch"(%1881, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1882 = "equeue.control_and"(%done_962, %done_963) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_964 = "equeue.launch"(%1881, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1883 = "equeue.control_and"(%1882, %done_964) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_965 = "equeue.launch"(%1881, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1884 = "equeue.control_and"(%1883, %done_965) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_966 = "equeue.launch"(%1881, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1885 = "equeue.control_and"(%1884, %done_966) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_967 = "equeue.launch"(%1881, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1886 = "equeue.control_and"(%1885, %done_967) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_968 = "equeue.launch"(%1881, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1887 = "equeue.control_and"(%1886, %done_968) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_969 = "equeue.launch"(%1881, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1888 = "equeue.control_and"(%1887, %done_969) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_970 = "equeue.launch"(%1881, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1889 = "equeue.control_and"(%1888, %done_970) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_971 = "equeue.launch"(%1881, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1890 = "equeue.control_and"(%1889, %done_971) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_972 = "equeue.launch"(%1881, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1891 = "equeue.control_and"(%1890, %done_972) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_973 = "equeue.launch"(%1881, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1892 = "equeue.control_and"(%1891, %done_973) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_974 = "equeue.launch"(%1881, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1893 = "equeue.control_and"(%1892, %done_974) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_975 = "equeue.launch"(%1881, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1894 = "equeue.control_and"(%1893, %done_975) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_976 = "equeue.launch"(%1881, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1895 = "equeue.control_and"(%1894, %done_976) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_977 = "equeue.launch"(%1881, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1896 = "equeue.control_and"(%1895, %done_977) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_978 = "equeue.launch"(%1881, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1897 = "equeue.control_and"(%1896, %done_978) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_979 = "equeue.launch"(%1881, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1898 = "equeue.control_and"(%1897, %done_979) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_980 = "equeue.launch"(%1881, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1899 = "equeue.control_and"(%1898, %done_980) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_981 = "equeue.launch"(%1881, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1900 = "equeue.control_and"(%1899, %done_981) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_982 = "equeue.launch"(%1881, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1901 = "equeue.control_and"(%1900, %done_982) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_983 = "equeue.launch"(%1881, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1902 = "equeue.control_and"(%1901, %done_983) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_984 = "equeue.launch"(%1881, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1903 = "equeue.control_and"(%1902, %done_984) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_985 = "equeue.launch"(%1881, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1904 = "equeue.control_and"(%1903, %done_985) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_986 = "equeue.launch"(%1881, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1905 = "equeue.control_and"(%1904, %done_986) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1905) : (!equeue.signal) -> ()
      %1906 = "equeue.control_start"() : () -> !equeue.signal
      %c0_987 = constant 0 : index
      %1907 = "equeue.memcpy"(%1906, %122, %127, %111, %c0_987) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1908 = "equeue.memcpy"(%1906, %122, %133, %113, %c0_987) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1909 = "equeue.control_and"(%1908, %1907) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1910 = "equeue.memcpy"(%1906, %122, %139, %115, %c0_987) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1911 = "equeue.control_and"(%1910, %1909) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1912 = "equeue.memcpy"(%1906, %122, %145, %117, %c0_987) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1913 = "equeue.control_and"(%1912, %1911) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1914 = "equeue.memcpy"(%1906, %122, %151, %119, %c0_987) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1915 = "equeue.control_and"(%1914, %1913) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1916 = "equeue.memcpy"(%1906, %121, %129, %102, %c0_987) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1917 = "equeue.memcpy"(%1906, %121, %159, %104, %c0_987) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1918 = "equeue.control_and"(%1917, %1916) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1919 = "equeue.memcpy"(%1906, %121, %189, %106, %c0_987) {dest_bank = 1 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1920 = "equeue.control_and"(%1919, %1918) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1921 = "equeue.memcpy"(%1906, %121, %219, %108, %c0_987) {dest_bank = 1 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1922 = "equeue.control_and"(%1921, %1920) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1923 = "equeue.memcpy"(%1906, %121, %249, %110, %c0_987) {dest_bank = 1 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1924 = "equeue.control_and"(%1923, %1922) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1924, %1915) : (!equeue.signal, !equeue.signal) -> ()
      %1925 = "equeue.control_start"() : () -> !equeue.signal
      %done_988 = "equeue.launch"(%1925, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_989 = "equeue.launch"(%1925, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1926 = "equeue.control_and"(%done_988, %done_989) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_990 = "equeue.launch"(%1925, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1927 = "equeue.control_and"(%1926, %done_990) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_991 = "equeue.launch"(%1925, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1928 = "equeue.control_and"(%1927, %done_991) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_992 = "equeue.launch"(%1925, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1929 = "equeue.control_and"(%1928, %done_992) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_993 = "equeue.launch"(%1925, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1930 = "equeue.control_and"(%1929, %done_993) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_994 = "equeue.launch"(%1925, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1931 = "equeue.control_and"(%1930, %done_994) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_995 = "equeue.launch"(%1925, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1932 = "equeue.control_and"(%1931, %done_995) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_996 = "equeue.launch"(%1925, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1933 = "equeue.control_and"(%1932, %done_996) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_997 = "equeue.launch"(%1925, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1934 = "equeue.control_and"(%1933, %done_997) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_998 = "equeue.launch"(%1925, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1935 = "equeue.control_and"(%1934, %done_998) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_999 = "equeue.launch"(%1925, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1936 = "equeue.control_and"(%1935, %done_999) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1000 = "equeue.launch"(%1925, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1937 = "equeue.control_and"(%1936, %done_1000) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1001 = "equeue.launch"(%1925, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1938 = "equeue.control_and"(%1937, %done_1001) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1002 = "equeue.launch"(%1925, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1939 = "equeue.control_and"(%1938, %done_1002) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1003 = "equeue.launch"(%1925, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1940 = "equeue.control_and"(%1939, %done_1003) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1004 = "equeue.launch"(%1925, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1941 = "equeue.control_and"(%1940, %done_1004) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1005 = "equeue.launch"(%1925, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1942 = "equeue.control_and"(%1941, %done_1005) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1006 = "equeue.launch"(%1925, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1943 = "equeue.control_and"(%1942, %done_1006) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1007 = "equeue.launch"(%1925, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1944 = "equeue.control_and"(%1943, %done_1007) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1008 = "equeue.launch"(%1925, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1945 = "equeue.control_and"(%1944, %done_1008) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1009 = "equeue.launch"(%1925, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1946 = "equeue.control_and"(%1945, %done_1009) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1010 = "equeue.launch"(%1925, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1947 = "equeue.control_and"(%1946, %done_1010) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1011 = "equeue.launch"(%1925, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1948 = "equeue.control_and"(%1947, %done_1011) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1012 = "equeue.launch"(%1925, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1949 = "equeue.control_and"(%1948, %done_1012) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1949) : (!equeue.signal) -> ()
      %1950 = "equeue.control_start"() : () -> !equeue.signal
      %c0_1013 = constant 0 : index
      %1951 = "equeue.memcpy"(%1950, %122, %127, %111, %c0_1013) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1952 = "equeue.memcpy"(%1950, %122, %133, %113, %c0_1013) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1953 = "equeue.control_and"(%1952, %1951) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1954 = "equeue.memcpy"(%1950, %122, %139, %115, %c0_1013) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1955 = "equeue.control_and"(%1954, %1953) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1956 = "equeue.memcpy"(%1950, %122, %145, %117, %c0_1013) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1957 = "equeue.control_and"(%1956, %1955) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1958 = "equeue.memcpy"(%1950, %122, %151, %119, %c0_1013) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1959 = "equeue.control_and"(%1958, %1957) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1960 = "equeue.memcpy"(%1950, %121, %129, %102, %c0_1013) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1961 = "equeue.memcpy"(%1950, %121, %159, %104, %c0_1013) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1962 = "equeue.control_and"(%1961, %1960) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1963 = "equeue.memcpy"(%1950, %121, %189, %106, %c0_1013) {dest_bank = 1 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1964 = "equeue.control_and"(%1963, %1962) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1965 = "equeue.memcpy"(%1950, %121, %219, %108, %c0_1013) {dest_bank = 1 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1966 = "equeue.control_and"(%1965, %1964) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1967 = "equeue.memcpy"(%1950, %121, %249, %110, %c0_1013) {dest_bank = 1 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1968 = "equeue.control_and"(%1967, %1966) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1968, %1959) : (!equeue.signal, !equeue.signal) -> ()
      %1969 = "equeue.control_start"() : () -> !equeue.signal
      %done_1014 = "equeue.launch"(%1969, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_1015 = "equeue.launch"(%1969, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1970 = "equeue.control_and"(%done_1014, %done_1015) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1016 = "equeue.launch"(%1969, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1971 = "equeue.control_and"(%1970, %done_1016) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1017 = "equeue.launch"(%1969, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1972 = "equeue.control_and"(%1971, %done_1017) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1018 = "equeue.launch"(%1969, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1973 = "equeue.control_and"(%1972, %done_1018) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1019 = "equeue.launch"(%1969, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1974 = "equeue.control_and"(%1973, %done_1019) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1020 = "equeue.launch"(%1969, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1975 = "equeue.control_and"(%1974, %done_1020) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1021 = "equeue.launch"(%1969, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1976 = "equeue.control_and"(%1975, %done_1021) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1022 = "equeue.launch"(%1969, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1977 = "equeue.control_and"(%1976, %done_1022) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1023 = "equeue.launch"(%1969, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1978 = "equeue.control_and"(%1977, %done_1023) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1024 = "equeue.launch"(%1969, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1979 = "equeue.control_and"(%1978, %done_1024) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1025 = "equeue.launch"(%1969, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1980 = "equeue.control_and"(%1979, %done_1025) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1026 = "equeue.launch"(%1969, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1981 = "equeue.control_and"(%1980, %done_1026) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1027 = "equeue.launch"(%1969, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1982 = "equeue.control_and"(%1981, %done_1027) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1028 = "equeue.launch"(%1969, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1983 = "equeue.control_and"(%1982, %done_1028) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1029 = "equeue.launch"(%1969, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1984 = "equeue.control_and"(%1983, %done_1029) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1030 = "equeue.launch"(%1969, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1985 = "equeue.control_and"(%1984, %done_1030) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1031 = "equeue.launch"(%1969, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1986 = "equeue.control_and"(%1985, %done_1031) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1032 = "equeue.launch"(%1969, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1987 = "equeue.control_and"(%1986, %done_1032) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1033 = "equeue.launch"(%1969, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1988 = "equeue.control_and"(%1987, %done_1033) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1034 = "equeue.launch"(%1969, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1989 = "equeue.control_and"(%1988, %done_1034) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1035 = "equeue.launch"(%1969, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1990 = "equeue.control_and"(%1989, %done_1035) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1036 = "equeue.launch"(%1969, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1991 = "equeue.control_and"(%1990, %done_1036) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1037 = "equeue.launch"(%1969, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1992 = "equeue.control_and"(%1991, %done_1037) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1038 = "equeue.launch"(%1969, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1993 = "equeue.control_and"(%1992, %done_1038) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1993) : (!equeue.signal) -> ()
      %1994 = "equeue.control_start"() : () -> !equeue.signal
      %c0_1039 = constant 0 : index
      %1995 = "equeue.memcpy"(%1994, %122, %127, %111, %c0_1039) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1996 = "equeue.memcpy"(%1994, %122, %133, %113, %c0_1039) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1997 = "equeue.control_and"(%1996, %1995) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1998 = "equeue.memcpy"(%1994, %122, %139, %115, %c0_1039) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %1999 = "equeue.control_and"(%1998, %1997) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2000 = "equeue.memcpy"(%1994, %122, %145, %117, %c0_1039) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2001 = "equeue.control_and"(%2000, %1999) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2002 = "equeue.memcpy"(%1994, %122, %151, %119, %c0_1039) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2003 = "equeue.control_and"(%2002, %2001) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2004 = "equeue.memcpy"(%1994, %121, %129, %102, %c0_1039) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2005 = "equeue.memcpy"(%1994, %121, %159, %104, %c0_1039) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2006 = "equeue.control_and"(%2005, %2004) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2007 = "equeue.memcpy"(%1994, %121, %189, %106, %c0_1039) {dest_bank = 1 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2008 = "equeue.control_and"(%2007, %2006) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2009 = "equeue.memcpy"(%1994, %121, %219, %108, %c0_1039) {dest_bank = 1 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2010 = "equeue.control_and"(%2009, %2008) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2011 = "equeue.memcpy"(%1994, %121, %249, %110, %c0_1039) {dest_bank = 1 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2012 = "equeue.control_and"(%2011, %2010) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2012, %2003) : (!equeue.signal, !equeue.signal) -> ()
      %2013 = "equeue.control_start"() : () -> !equeue.signal
      %done_1040 = "equeue.launch"(%2013, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_1041 = "equeue.launch"(%2013, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2014 = "equeue.control_and"(%done_1040, %done_1041) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1042 = "equeue.launch"(%2013, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2015 = "equeue.control_and"(%2014, %done_1042) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1043 = "equeue.launch"(%2013, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2016 = "equeue.control_and"(%2015, %done_1043) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1044 = "equeue.launch"(%2013, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2017 = "equeue.control_and"(%2016, %done_1044) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1045 = "equeue.launch"(%2013, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2018 = "equeue.control_and"(%2017, %done_1045) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1046 = "equeue.launch"(%2013, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2019 = "equeue.control_and"(%2018, %done_1046) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1047 = "equeue.launch"(%2013, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2020 = "equeue.control_and"(%2019, %done_1047) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1048 = "equeue.launch"(%2013, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2021 = "equeue.control_and"(%2020, %done_1048) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1049 = "equeue.launch"(%2013, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2022 = "equeue.control_and"(%2021, %done_1049) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1050 = "equeue.launch"(%2013, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2023 = "equeue.control_and"(%2022, %done_1050) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1051 = "equeue.launch"(%2013, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2024 = "equeue.control_and"(%2023, %done_1051) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1052 = "equeue.launch"(%2013, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2025 = "equeue.control_and"(%2024, %done_1052) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1053 = "equeue.launch"(%2013, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2026 = "equeue.control_and"(%2025, %done_1053) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1054 = "equeue.launch"(%2013, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2027 = "equeue.control_and"(%2026, %done_1054) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1055 = "equeue.launch"(%2013, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2028 = "equeue.control_and"(%2027, %done_1055) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1056 = "equeue.launch"(%2013, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2029 = "equeue.control_and"(%2028, %done_1056) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1057 = "equeue.launch"(%2013, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2030 = "equeue.control_and"(%2029, %done_1057) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1058 = "equeue.launch"(%2013, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2031 = "equeue.control_and"(%2030, %done_1058) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1059 = "equeue.launch"(%2013, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2032 = "equeue.control_and"(%2031, %done_1059) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1060 = "equeue.launch"(%2013, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2033 = "equeue.control_and"(%2032, %done_1060) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1061 = "equeue.launch"(%2013, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2034 = "equeue.control_and"(%2033, %done_1061) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1062 = "equeue.launch"(%2013, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2035 = "equeue.control_and"(%2034, %done_1062) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1063 = "equeue.launch"(%2013, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2036 = "equeue.control_and"(%2035, %done_1063) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1064 = "equeue.launch"(%2013, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2037 = "equeue.control_and"(%2036, %done_1064) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2037) : (!equeue.signal) -> ()
      %2038 = "equeue.control_start"() : () -> !equeue.signal
      %c0_1065 = constant 0 : index
      %2039 = "equeue.memcpy"(%2038, %122, %127, %111, %c0_1065) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2040 = "equeue.memcpy"(%2038, %122, %133, %113, %c0_1065) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2041 = "equeue.control_and"(%2040, %2039) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2042 = "equeue.memcpy"(%2038, %122, %139, %115, %c0_1065) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2043 = "equeue.control_and"(%2042, %2041) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2044 = "equeue.memcpy"(%2038, %122, %145, %117, %c0_1065) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2045 = "equeue.control_and"(%2044, %2043) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2046 = "equeue.memcpy"(%2038, %122, %151, %119, %c0_1065) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2047 = "equeue.control_and"(%2046, %2045) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2048 = "equeue.memcpy"(%2038, %121, %129, %102, %c0_1065) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2049 = "equeue.memcpy"(%2038, %121, %159, %104, %c0_1065) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2050 = "equeue.control_and"(%2049, %2048) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2051 = "equeue.memcpy"(%2038, %121, %189, %106, %c0_1065) {dest_bank = 1 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2052 = "equeue.control_and"(%2051, %2050) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2053 = "equeue.memcpy"(%2038, %121, %219, %108, %c0_1065) {dest_bank = 1 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2054 = "equeue.control_and"(%2053, %2052) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2055 = "equeue.memcpy"(%2038, %121, %249, %110, %c0_1065) {dest_bank = 1 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2056 = "equeue.control_and"(%2055, %2054) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2056, %2047) : (!equeue.signal, !equeue.signal) -> ()
      %2057 = "equeue.control_start"() : () -> !equeue.signal
      %done_1066 = "equeue.launch"(%2057, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_1067 = "equeue.launch"(%2057, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2058 = "equeue.control_and"(%done_1066, %done_1067) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1068 = "equeue.launch"(%2057, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2059 = "equeue.control_and"(%2058, %done_1068) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1069 = "equeue.launch"(%2057, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2060 = "equeue.control_and"(%2059, %done_1069) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1070 = "equeue.launch"(%2057, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2061 = "equeue.control_and"(%2060, %done_1070) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1071 = "equeue.launch"(%2057, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2062 = "equeue.control_and"(%2061, %done_1071) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1072 = "equeue.launch"(%2057, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2063 = "equeue.control_and"(%2062, %done_1072) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1073 = "equeue.launch"(%2057, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2064 = "equeue.control_and"(%2063, %done_1073) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1074 = "equeue.launch"(%2057, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2065 = "equeue.control_and"(%2064, %done_1074) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1075 = "equeue.launch"(%2057, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2066 = "equeue.control_and"(%2065, %done_1075) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1076 = "equeue.launch"(%2057, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2067 = "equeue.control_and"(%2066, %done_1076) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1077 = "equeue.launch"(%2057, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2068 = "equeue.control_and"(%2067, %done_1077) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1078 = "equeue.launch"(%2057, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2069 = "equeue.control_and"(%2068, %done_1078) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1079 = "equeue.launch"(%2057, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2070 = "equeue.control_and"(%2069, %done_1079) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1080 = "equeue.launch"(%2057, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2071 = "equeue.control_and"(%2070, %done_1080) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1081 = "equeue.launch"(%2057, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2072 = "equeue.control_and"(%2071, %done_1081) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1082 = "equeue.launch"(%2057, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2073 = "equeue.control_and"(%2072, %done_1082) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1083 = "equeue.launch"(%2057, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2074 = "equeue.control_and"(%2073, %done_1083) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1084 = "equeue.launch"(%2057, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2075 = "equeue.control_and"(%2074, %done_1084) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1085 = "equeue.launch"(%2057, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2076 = "equeue.control_and"(%2075, %done_1085) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1086 = "equeue.launch"(%2057, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2077 = "equeue.control_and"(%2076, %done_1086) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1087 = "equeue.launch"(%2057, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2078 = "equeue.control_and"(%2077, %done_1087) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1088 = "equeue.launch"(%2057, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2079 = "equeue.control_and"(%2078, %done_1088) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1089 = "equeue.launch"(%2057, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2080 = "equeue.control_and"(%2079, %done_1089) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1090 = "equeue.launch"(%2057, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2081 = "equeue.control_and"(%2080, %done_1090) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2081) : (!equeue.signal) -> ()
      %2082 = "equeue.control_start"() : () -> !equeue.signal
      %c0_1091 = constant 0 : index
      %2083 = "equeue.memcpy"(%2082, %122, %127, %111, %c0_1091) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2084 = "equeue.memcpy"(%2082, %122, %133, %113, %c0_1091) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2085 = "equeue.control_and"(%2084, %2083) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2086 = "equeue.memcpy"(%2082, %122, %139, %115, %c0_1091) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2087 = "equeue.control_and"(%2086, %2085) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2088 = "equeue.memcpy"(%2082, %122, %145, %117, %c0_1091) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2089 = "equeue.control_and"(%2088, %2087) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2090 = "equeue.memcpy"(%2082, %122, %151, %119, %c0_1091) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2091 = "equeue.control_and"(%2090, %2089) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2092 = "equeue.memcpy"(%2082, %121, %129, %102, %c0_1091) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2093 = "equeue.memcpy"(%2082, %121, %159, %104, %c0_1091) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2094 = "equeue.control_and"(%2093, %2092) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2095 = "equeue.memcpy"(%2082, %121, %189, %106, %c0_1091) {dest_bank = 1 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2096 = "equeue.control_and"(%2095, %2094) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2097 = "equeue.memcpy"(%2082, %121, %219, %108, %c0_1091) {dest_bank = 1 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2098 = "equeue.control_and"(%2097, %2096) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2099 = "equeue.memcpy"(%2082, %121, %249, %110, %c0_1091) {dest_bank = 1 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2100 = "equeue.control_and"(%2099, %2098) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2100, %2091) : (!equeue.signal, !equeue.signal) -> ()
      %2101 = "equeue.control_start"() : () -> !equeue.signal
      %done_1092 = "equeue.launch"(%2101, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_1093 = "equeue.launch"(%2101, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2102 = "equeue.control_and"(%done_1092, %done_1093) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1094 = "equeue.launch"(%2101, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2103 = "equeue.control_and"(%2102, %done_1094) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1095 = "equeue.launch"(%2101, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2104 = "equeue.control_and"(%2103, %done_1095) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1096 = "equeue.launch"(%2101, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2105 = "equeue.control_and"(%2104, %done_1096) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1097 = "equeue.launch"(%2101, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2106 = "equeue.control_and"(%2105, %done_1097) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1098 = "equeue.launch"(%2101, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2107 = "equeue.control_and"(%2106, %done_1098) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1099 = "equeue.launch"(%2101, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2108 = "equeue.control_and"(%2107, %done_1099) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1100 = "equeue.launch"(%2101, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2109 = "equeue.control_and"(%2108, %done_1100) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1101 = "equeue.launch"(%2101, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2110 = "equeue.control_and"(%2109, %done_1101) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1102 = "equeue.launch"(%2101, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2111 = "equeue.control_and"(%2110, %done_1102) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1103 = "equeue.launch"(%2101, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2112 = "equeue.control_and"(%2111, %done_1103) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1104 = "equeue.launch"(%2101, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2113 = "equeue.control_and"(%2112, %done_1104) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1105 = "equeue.launch"(%2101, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2114 = "equeue.control_and"(%2113, %done_1105) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1106 = "equeue.launch"(%2101, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2115 = "equeue.control_and"(%2114, %done_1106) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1107 = "equeue.launch"(%2101, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2116 = "equeue.control_and"(%2115, %done_1107) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1108 = "equeue.launch"(%2101, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2117 = "equeue.control_and"(%2116, %done_1108) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1109 = "equeue.launch"(%2101, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2118 = "equeue.control_and"(%2117, %done_1109) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1110 = "equeue.launch"(%2101, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2119 = "equeue.control_and"(%2118, %done_1110) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1111 = "equeue.launch"(%2101, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2120 = "equeue.control_and"(%2119, %done_1111) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1112 = "equeue.launch"(%2101, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2121 = "equeue.control_and"(%2120, %done_1112) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1113 = "equeue.launch"(%2101, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2122 = "equeue.control_and"(%2121, %done_1113) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1114 = "equeue.launch"(%2101, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2123 = "equeue.control_and"(%2122, %done_1114) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1115 = "equeue.launch"(%2101, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2124 = "equeue.control_and"(%2123, %done_1115) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1116 = "equeue.launch"(%2101, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2125 = "equeue.control_and"(%2124, %done_1116) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2125) : (!equeue.signal) -> ()
      %2126 = "equeue.control_start"() : () -> !equeue.signal
      %c0_1117 = constant 0 : index
      %2127 = "equeue.memcpy"(%2126, %122, %127, %111, %c0_1117) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2128 = "equeue.memcpy"(%2126, %122, %133, %113, %c0_1117) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2129 = "equeue.control_and"(%2128, %2127) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2130 = "equeue.memcpy"(%2126, %122, %139, %115, %c0_1117) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2131 = "equeue.control_and"(%2130, %2129) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2132 = "equeue.memcpy"(%2126, %122, %145, %117, %c0_1117) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2133 = "equeue.control_and"(%2132, %2131) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2134 = "equeue.memcpy"(%2126, %122, %151, %119, %c0_1117) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2135 = "equeue.control_and"(%2134, %2133) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2136 = "equeue.memcpy"(%2126, %121, %129, %102, %c0_1117) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2137 = "equeue.memcpy"(%2126, %121, %159, %104, %c0_1117) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2138 = "equeue.control_and"(%2137, %2136) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2139 = "equeue.memcpy"(%2126, %121, %189, %106, %c0_1117) {dest_bank = 1 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2140 = "equeue.control_and"(%2139, %2138) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2141 = "equeue.memcpy"(%2126, %121, %219, %108, %c0_1117) {dest_bank = 1 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2142 = "equeue.control_and"(%2141, %2140) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2143 = "equeue.memcpy"(%2126, %121, %249, %110, %c0_1117) {dest_bank = 1 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2144 = "equeue.control_and"(%2143, %2142) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2144, %2135) : (!equeue.signal, !equeue.signal) -> ()
      %2145 = "equeue.control_start"() : () -> !equeue.signal
      %done_1118 = "equeue.launch"(%2145, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_1119 = "equeue.launch"(%2145, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2146 = "equeue.control_and"(%done_1118, %done_1119) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1120 = "equeue.launch"(%2145, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2147 = "equeue.control_and"(%2146, %done_1120) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1121 = "equeue.launch"(%2145, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2148 = "equeue.control_and"(%2147, %done_1121) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1122 = "equeue.launch"(%2145, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2149 = "equeue.control_and"(%2148, %done_1122) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1123 = "equeue.launch"(%2145, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2150 = "equeue.control_and"(%2149, %done_1123) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1124 = "equeue.launch"(%2145, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2151 = "equeue.control_and"(%2150, %done_1124) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1125 = "equeue.launch"(%2145, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2152 = "equeue.control_and"(%2151, %done_1125) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1126 = "equeue.launch"(%2145, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2153 = "equeue.control_and"(%2152, %done_1126) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1127 = "equeue.launch"(%2145, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2154 = "equeue.control_and"(%2153, %done_1127) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1128 = "equeue.launch"(%2145, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2155 = "equeue.control_and"(%2154, %done_1128) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1129 = "equeue.launch"(%2145, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2156 = "equeue.control_and"(%2155, %done_1129) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1130 = "equeue.launch"(%2145, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2157 = "equeue.control_and"(%2156, %done_1130) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1131 = "equeue.launch"(%2145, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2158 = "equeue.control_and"(%2157, %done_1131) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1132 = "equeue.launch"(%2145, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2159 = "equeue.control_and"(%2158, %done_1132) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1133 = "equeue.launch"(%2145, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2160 = "equeue.control_and"(%2159, %done_1133) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1134 = "equeue.launch"(%2145, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2161 = "equeue.control_and"(%2160, %done_1134) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1135 = "equeue.launch"(%2145, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2162 = "equeue.control_and"(%2161, %done_1135) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1136 = "equeue.launch"(%2145, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2163 = "equeue.control_and"(%2162, %done_1136) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1137 = "equeue.launch"(%2145, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2164 = "equeue.control_and"(%2163, %done_1137) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1138 = "equeue.launch"(%2145, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2165 = "equeue.control_and"(%2164, %done_1138) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1139 = "equeue.launch"(%2145, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2166 = "equeue.control_and"(%2165, %done_1139) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1140 = "equeue.launch"(%2145, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2167 = "equeue.control_and"(%2166, %done_1140) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1141 = "equeue.launch"(%2145, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2168 = "equeue.control_and"(%2167, %done_1141) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1142 = "equeue.launch"(%2145, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2169 = "equeue.control_and"(%2168, %done_1142) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2169) : (!equeue.signal) -> ()
      %2170 = "equeue.control_start"() : () -> !equeue.signal
      %c0_1143 = constant 0 : index
      %2171 = "equeue.memcpy"(%2170, %122, %127, %111, %c0_1143) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2172 = "equeue.memcpy"(%2170, %122, %133, %113, %c0_1143) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2173 = "equeue.control_and"(%2172, %2171) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2174 = "equeue.memcpy"(%2170, %122, %139, %115, %c0_1143) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2175 = "equeue.control_and"(%2174, %2173) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2176 = "equeue.memcpy"(%2170, %122, %145, %117, %c0_1143) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2177 = "equeue.control_and"(%2176, %2175) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2178 = "equeue.memcpy"(%2170, %122, %151, %119, %c0_1143) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2179 = "equeue.control_and"(%2178, %2177) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2180 = "equeue.memcpy"(%2170, %121, %129, %102, %c0_1143) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2181 = "equeue.memcpy"(%2170, %121, %159, %104, %c0_1143) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2182 = "equeue.control_and"(%2181, %2180) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2183 = "equeue.memcpy"(%2170, %121, %189, %106, %c0_1143) {dest_bank = 1 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2184 = "equeue.control_and"(%2183, %2182) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2185 = "equeue.memcpy"(%2170, %121, %219, %108, %c0_1143) {dest_bank = 1 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2186 = "equeue.control_and"(%2185, %2184) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2187 = "equeue.memcpy"(%2170, %121, %249, %110, %c0_1143) {dest_bank = 1 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2188 = "equeue.control_and"(%2187, %2186) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2188, %2179) : (!equeue.signal, !equeue.signal) -> ()
      %2189 = "equeue.control_start"() : () -> !equeue.signal
      %done_1144 = "equeue.launch"(%2189, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_1145 = "equeue.launch"(%2189, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2190 = "equeue.control_and"(%done_1144, %done_1145) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1146 = "equeue.launch"(%2189, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2191 = "equeue.control_and"(%2190, %done_1146) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1147 = "equeue.launch"(%2189, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2192 = "equeue.control_and"(%2191, %done_1147) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1148 = "equeue.launch"(%2189, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2193 = "equeue.control_and"(%2192, %done_1148) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1149 = "equeue.launch"(%2189, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2194 = "equeue.control_and"(%2193, %done_1149) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1150 = "equeue.launch"(%2189, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2195 = "equeue.control_and"(%2194, %done_1150) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1151 = "equeue.launch"(%2189, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2196 = "equeue.control_and"(%2195, %done_1151) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1152 = "equeue.launch"(%2189, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2197 = "equeue.control_and"(%2196, %done_1152) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1153 = "equeue.launch"(%2189, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2198 = "equeue.control_and"(%2197, %done_1153) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1154 = "equeue.launch"(%2189, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2199 = "equeue.control_and"(%2198, %done_1154) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1155 = "equeue.launch"(%2189, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2200 = "equeue.control_and"(%2199, %done_1155) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1156 = "equeue.launch"(%2189, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2201 = "equeue.control_and"(%2200, %done_1156) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1157 = "equeue.launch"(%2189, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2202 = "equeue.control_and"(%2201, %done_1157) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1158 = "equeue.launch"(%2189, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2203 = "equeue.control_and"(%2202, %done_1158) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1159 = "equeue.launch"(%2189, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2204 = "equeue.control_and"(%2203, %done_1159) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1160 = "equeue.launch"(%2189, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2205 = "equeue.control_and"(%2204, %done_1160) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1161 = "equeue.launch"(%2189, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2206 = "equeue.control_and"(%2205, %done_1161) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1162 = "equeue.launch"(%2189, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2207 = "equeue.control_and"(%2206, %done_1162) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1163 = "equeue.launch"(%2189, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2208 = "equeue.control_and"(%2207, %done_1163) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1164 = "equeue.launch"(%2189, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2209 = "equeue.control_and"(%2208, %done_1164) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1165 = "equeue.launch"(%2189, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2210 = "equeue.control_and"(%2209, %done_1165) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1166 = "equeue.launch"(%2189, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2211 = "equeue.control_and"(%2210, %done_1166) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1167 = "equeue.launch"(%2189, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2212 = "equeue.control_and"(%2211, %done_1167) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1168 = "equeue.launch"(%2189, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2213 = "equeue.control_and"(%2212, %done_1168) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2213) : (!equeue.signal) -> ()
      %2214 = "equeue.control_start"() : () -> !equeue.signal
      %c0_1169 = constant 0 : index
      %2215 = "equeue.memcpy"(%2214, %122, %127, %111, %c0_1169) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2216 = "equeue.memcpy"(%2214, %122, %133, %113, %c0_1169) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2217 = "equeue.control_and"(%2216, %2215) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2218 = "equeue.memcpy"(%2214, %122, %139, %115, %c0_1169) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2219 = "equeue.control_and"(%2218, %2217) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2220 = "equeue.memcpy"(%2214, %122, %145, %117, %c0_1169) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2221 = "equeue.control_and"(%2220, %2219) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2222 = "equeue.memcpy"(%2214, %122, %151, %119, %c0_1169) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2223 = "equeue.control_and"(%2222, %2221) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2224 = "equeue.memcpy"(%2214, %121, %129, %102, %c0_1169) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2225 = "equeue.memcpy"(%2214, %121, %159, %104, %c0_1169) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2226 = "equeue.control_and"(%2225, %2224) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2227 = "equeue.memcpy"(%2214, %121, %189, %106, %c0_1169) {dest_bank = 1 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2228 = "equeue.control_and"(%2227, %2226) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2229 = "equeue.memcpy"(%2214, %121, %219, %108, %c0_1169) {dest_bank = 1 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2230 = "equeue.control_and"(%2229, %2228) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2231 = "equeue.memcpy"(%2214, %121, %249, %110, %c0_1169) {dest_bank = 1 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2232 = "equeue.control_and"(%2231, %2230) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2232, %2223) : (!equeue.signal, !equeue.signal) -> ()
      %2233 = "equeue.control_start"() : () -> !equeue.signal
      %done_1170 = "equeue.launch"(%2233, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_1171 = "equeue.launch"(%2233, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2234 = "equeue.control_and"(%done_1170, %done_1171) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1172 = "equeue.launch"(%2233, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2235 = "equeue.control_and"(%2234, %done_1172) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1173 = "equeue.launch"(%2233, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2236 = "equeue.control_and"(%2235, %done_1173) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1174 = "equeue.launch"(%2233, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2237 = "equeue.control_and"(%2236, %done_1174) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1175 = "equeue.launch"(%2233, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2238 = "equeue.control_and"(%2237, %done_1175) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1176 = "equeue.launch"(%2233, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2239 = "equeue.control_and"(%2238, %done_1176) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1177 = "equeue.launch"(%2233, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2240 = "equeue.control_and"(%2239, %done_1177) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1178 = "equeue.launch"(%2233, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2241 = "equeue.control_and"(%2240, %done_1178) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1179 = "equeue.launch"(%2233, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2242 = "equeue.control_and"(%2241, %done_1179) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1180 = "equeue.launch"(%2233, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2243 = "equeue.control_and"(%2242, %done_1180) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1181 = "equeue.launch"(%2233, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2244 = "equeue.control_and"(%2243, %done_1181) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1182 = "equeue.launch"(%2233, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2245 = "equeue.control_and"(%2244, %done_1182) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1183 = "equeue.launch"(%2233, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2246 = "equeue.control_and"(%2245, %done_1183) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1184 = "equeue.launch"(%2233, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2247 = "equeue.control_and"(%2246, %done_1184) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1185 = "equeue.launch"(%2233, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2248 = "equeue.control_and"(%2247, %done_1185) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1186 = "equeue.launch"(%2233, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2249 = "equeue.control_and"(%2248, %done_1186) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1187 = "equeue.launch"(%2233, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2250 = "equeue.control_and"(%2249, %done_1187) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1188 = "equeue.launch"(%2233, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2251 = "equeue.control_and"(%2250, %done_1188) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1189 = "equeue.launch"(%2233, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2252 = "equeue.control_and"(%2251, %done_1189) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1190 = "equeue.launch"(%2233, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2253 = "equeue.control_and"(%2252, %done_1190) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1191 = "equeue.launch"(%2233, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2254 = "equeue.control_and"(%2253, %done_1191) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1192 = "equeue.launch"(%2233, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2255 = "equeue.control_and"(%2254, %done_1192) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1193 = "equeue.launch"(%2233, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2256 = "equeue.control_and"(%2255, %done_1193) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1194 = "equeue.launch"(%2233, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2257 = "equeue.control_and"(%2256, %done_1194) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2257) : (!equeue.signal) -> ()
      %2258 = "equeue.control_start"() : () -> !equeue.signal
      %c0_1195 = constant 0 : index
      %2259 = "equeue.memcpy"(%2258, %122, %127, %111, %c0_1195) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2260 = "equeue.memcpy"(%2258, %122, %133, %113, %c0_1195) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2261 = "equeue.control_and"(%2260, %2259) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2262 = "equeue.memcpy"(%2258, %122, %139, %115, %c0_1195) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2263 = "equeue.control_and"(%2262, %2261) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2264 = "equeue.memcpy"(%2258, %122, %145, %117, %c0_1195) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2265 = "equeue.control_and"(%2264, %2263) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2266 = "equeue.memcpy"(%2258, %122, %151, %119, %c0_1195) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2267 = "equeue.control_and"(%2266, %2265) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2268 = "equeue.memcpy"(%2258, %121, %129, %102, %c0_1195) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2269 = "equeue.memcpy"(%2258, %121, %159, %104, %c0_1195) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2270 = "equeue.control_and"(%2269, %2268) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2271 = "equeue.memcpy"(%2258, %121, %189, %106, %c0_1195) {dest_bank = 1 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2272 = "equeue.control_and"(%2271, %2270) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2273 = "equeue.memcpy"(%2258, %121, %219, %108, %c0_1195) {dest_bank = 1 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2274 = "equeue.control_and"(%2273, %2272) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2275 = "equeue.memcpy"(%2258, %121, %249, %110, %c0_1195) {dest_bank = 1 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2276 = "equeue.control_and"(%2275, %2274) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2276, %2267) : (!equeue.signal, !equeue.signal) -> ()
      %2277 = "equeue.control_start"() : () -> !equeue.signal
      %done_1196 = "equeue.launch"(%2277, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_1197 = "equeue.launch"(%2277, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2278 = "equeue.control_and"(%done_1196, %done_1197) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1198 = "equeue.launch"(%2277, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2279 = "equeue.control_and"(%2278, %done_1198) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1199 = "equeue.launch"(%2277, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2280 = "equeue.control_and"(%2279, %done_1199) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1200 = "equeue.launch"(%2277, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2281 = "equeue.control_and"(%2280, %done_1200) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1201 = "equeue.launch"(%2277, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2282 = "equeue.control_and"(%2281, %done_1201) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1202 = "equeue.launch"(%2277, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2283 = "equeue.control_and"(%2282, %done_1202) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1203 = "equeue.launch"(%2277, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2284 = "equeue.control_and"(%2283, %done_1203) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1204 = "equeue.launch"(%2277, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2285 = "equeue.control_and"(%2284, %done_1204) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1205 = "equeue.launch"(%2277, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2286 = "equeue.control_and"(%2285, %done_1205) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1206 = "equeue.launch"(%2277, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2287 = "equeue.control_and"(%2286, %done_1206) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1207 = "equeue.launch"(%2277, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2288 = "equeue.control_and"(%2287, %done_1207) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1208 = "equeue.launch"(%2277, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2289 = "equeue.control_and"(%2288, %done_1208) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1209 = "equeue.launch"(%2277, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2290 = "equeue.control_and"(%2289, %done_1209) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1210 = "equeue.launch"(%2277, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2291 = "equeue.control_and"(%2290, %done_1210) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1211 = "equeue.launch"(%2277, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2292 = "equeue.control_and"(%2291, %done_1211) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1212 = "equeue.launch"(%2277, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2293 = "equeue.control_and"(%2292, %done_1212) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1213 = "equeue.launch"(%2277, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2294 = "equeue.control_and"(%2293, %done_1213) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1214 = "equeue.launch"(%2277, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2295 = "equeue.control_and"(%2294, %done_1214) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1215 = "equeue.launch"(%2277, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2296 = "equeue.control_and"(%2295, %done_1215) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1216 = "equeue.launch"(%2277, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2297 = "equeue.control_and"(%2296, %done_1216) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1217 = "equeue.launch"(%2277, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2298 = "equeue.control_and"(%2297, %done_1217) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1218 = "equeue.launch"(%2277, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2299 = "equeue.control_and"(%2298, %done_1218) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1219 = "equeue.launch"(%2277, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2300 = "equeue.control_and"(%2299, %done_1219) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1220 = "equeue.launch"(%2277, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2301 = "equeue.control_and"(%2300, %done_1220) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2301) : (!equeue.signal) -> ()
      %2302 = "equeue.control_start"() : () -> !equeue.signal
      %c0_1221 = constant 0 : index
      %2303 = "equeue.memcpy"(%2302, %122, %127, %111, %c0_1221) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2304 = "equeue.memcpy"(%2302, %122, %133, %113, %c0_1221) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2305 = "equeue.control_and"(%2304, %2303) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2306 = "equeue.memcpy"(%2302, %122, %139, %115, %c0_1221) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2307 = "equeue.control_and"(%2306, %2305) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2308 = "equeue.memcpy"(%2302, %122, %145, %117, %c0_1221) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2309 = "equeue.control_and"(%2308, %2307) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2310 = "equeue.memcpy"(%2302, %122, %151, %119, %c0_1221) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2311 = "equeue.control_and"(%2310, %2309) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2312 = "equeue.memcpy"(%2302, %121, %129, %102, %c0_1221) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2313 = "equeue.memcpy"(%2302, %121, %159, %104, %c0_1221) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2314 = "equeue.control_and"(%2313, %2312) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2315 = "equeue.memcpy"(%2302, %121, %189, %106, %c0_1221) {dest_bank = 1 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2316 = "equeue.control_and"(%2315, %2314) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2317 = "equeue.memcpy"(%2302, %121, %219, %108, %c0_1221) {dest_bank = 1 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2318 = "equeue.control_and"(%2317, %2316) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2319 = "equeue.memcpy"(%2302, %121, %249, %110, %c0_1221) {dest_bank = 1 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2320 = "equeue.control_and"(%2319, %2318) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2320, %2311) : (!equeue.signal, !equeue.signal) -> ()
      %2321 = "equeue.control_start"() : () -> !equeue.signal
      %done_1222 = "equeue.launch"(%2321, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_1223 = "equeue.launch"(%2321, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2322 = "equeue.control_and"(%done_1222, %done_1223) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1224 = "equeue.launch"(%2321, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2323 = "equeue.control_and"(%2322, %done_1224) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1225 = "equeue.launch"(%2321, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2324 = "equeue.control_and"(%2323, %done_1225) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1226 = "equeue.launch"(%2321, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2325 = "equeue.control_and"(%2324, %done_1226) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1227 = "equeue.launch"(%2321, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2326 = "equeue.control_and"(%2325, %done_1227) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1228 = "equeue.launch"(%2321, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2327 = "equeue.control_and"(%2326, %done_1228) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1229 = "equeue.launch"(%2321, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2328 = "equeue.control_and"(%2327, %done_1229) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1230 = "equeue.launch"(%2321, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2329 = "equeue.control_and"(%2328, %done_1230) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1231 = "equeue.launch"(%2321, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2330 = "equeue.control_and"(%2329, %done_1231) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1232 = "equeue.launch"(%2321, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2331 = "equeue.control_and"(%2330, %done_1232) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1233 = "equeue.launch"(%2321, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2332 = "equeue.control_and"(%2331, %done_1233) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1234 = "equeue.launch"(%2321, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2333 = "equeue.control_and"(%2332, %done_1234) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1235 = "equeue.launch"(%2321, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2334 = "equeue.control_and"(%2333, %done_1235) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1236 = "equeue.launch"(%2321, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2335 = "equeue.control_and"(%2334, %done_1236) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1237 = "equeue.launch"(%2321, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2336 = "equeue.control_and"(%2335, %done_1237) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1238 = "equeue.launch"(%2321, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2337 = "equeue.control_and"(%2336, %done_1238) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1239 = "equeue.launch"(%2321, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2338 = "equeue.control_and"(%2337, %done_1239) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1240 = "equeue.launch"(%2321, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2339 = "equeue.control_and"(%2338, %done_1240) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1241 = "equeue.launch"(%2321, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2340 = "equeue.control_and"(%2339, %done_1241) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1242 = "equeue.launch"(%2321, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2341 = "equeue.control_and"(%2340, %done_1242) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1243 = "equeue.launch"(%2321, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2342 = "equeue.control_and"(%2341, %done_1243) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1244 = "equeue.launch"(%2321, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2343 = "equeue.control_and"(%2342, %done_1244) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1245 = "equeue.launch"(%2321, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2344 = "equeue.control_and"(%2343, %done_1245) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1246 = "equeue.launch"(%2321, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2345 = "equeue.control_and"(%2344, %done_1246) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2345) : (!equeue.signal) -> ()
      %2346 = "equeue.control_start"() : () -> !equeue.signal
      %c0_1247 = constant 0 : index
      %2347 = "equeue.memcpy"(%2346, %122, %127, %111, %c0_1247) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2348 = "equeue.memcpy"(%2346, %122, %133, %113, %c0_1247) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2349 = "equeue.control_and"(%2348, %2347) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2350 = "equeue.memcpy"(%2346, %122, %139, %115, %c0_1247) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2351 = "equeue.control_and"(%2350, %2349) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2352 = "equeue.memcpy"(%2346, %122, %145, %117, %c0_1247) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2353 = "equeue.control_and"(%2352, %2351) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2354 = "equeue.memcpy"(%2346, %122, %151, %119, %c0_1247) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2355 = "equeue.control_and"(%2354, %2353) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2356 = "equeue.memcpy"(%2346, %121, %129, %102, %c0_1247) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2357 = "equeue.memcpy"(%2346, %121, %159, %104, %c0_1247) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2358 = "equeue.control_and"(%2357, %2356) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2359 = "equeue.memcpy"(%2346, %121, %189, %106, %c0_1247) {dest_bank = 1 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2360 = "equeue.control_and"(%2359, %2358) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2361 = "equeue.memcpy"(%2346, %121, %219, %108, %c0_1247) {dest_bank = 1 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2362 = "equeue.control_and"(%2361, %2360) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2363 = "equeue.memcpy"(%2346, %121, %249, %110, %c0_1247) {dest_bank = 1 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2364 = "equeue.control_and"(%2363, %2362) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2364, %2355) : (!equeue.signal, !equeue.signal) -> ()
      %2365 = "equeue.control_start"() : () -> !equeue.signal
      %done_1248 = "equeue.launch"(%2365, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_1249 = "equeue.launch"(%2365, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2366 = "equeue.control_and"(%done_1248, %done_1249) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1250 = "equeue.launch"(%2365, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2367 = "equeue.control_and"(%2366, %done_1250) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1251 = "equeue.launch"(%2365, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2368 = "equeue.control_and"(%2367, %done_1251) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1252 = "equeue.launch"(%2365, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2369 = "equeue.control_and"(%2368, %done_1252) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1253 = "equeue.launch"(%2365, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2370 = "equeue.control_and"(%2369, %done_1253) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1254 = "equeue.launch"(%2365, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2371 = "equeue.control_and"(%2370, %done_1254) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1255 = "equeue.launch"(%2365, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2372 = "equeue.control_and"(%2371, %done_1255) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1256 = "equeue.launch"(%2365, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2373 = "equeue.control_and"(%2372, %done_1256) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1257 = "equeue.launch"(%2365, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2374 = "equeue.control_and"(%2373, %done_1257) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1258 = "equeue.launch"(%2365, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2375 = "equeue.control_and"(%2374, %done_1258) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1259 = "equeue.launch"(%2365, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2376 = "equeue.control_and"(%2375, %done_1259) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1260 = "equeue.launch"(%2365, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2377 = "equeue.control_and"(%2376, %done_1260) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1261 = "equeue.launch"(%2365, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2378 = "equeue.control_and"(%2377, %done_1261) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1262 = "equeue.launch"(%2365, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2379 = "equeue.control_and"(%2378, %done_1262) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1263 = "equeue.launch"(%2365, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2380 = "equeue.control_and"(%2379, %done_1263) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1264 = "equeue.launch"(%2365, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2381 = "equeue.control_and"(%2380, %done_1264) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1265 = "equeue.launch"(%2365, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2382 = "equeue.control_and"(%2381, %done_1265) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1266 = "equeue.launch"(%2365, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2383 = "equeue.control_and"(%2382, %done_1266) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1267 = "equeue.launch"(%2365, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2384 = "equeue.control_and"(%2383, %done_1267) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1268 = "equeue.launch"(%2365, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2385 = "equeue.control_and"(%2384, %done_1268) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1269 = "equeue.launch"(%2365, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2386 = "equeue.control_and"(%2385, %done_1269) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1270 = "equeue.launch"(%2365, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2387 = "equeue.control_and"(%2386, %done_1270) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1271 = "equeue.launch"(%2365, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2388 = "equeue.control_and"(%2387, %done_1271) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1272 = "equeue.launch"(%2365, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2389 = "equeue.control_and"(%2388, %done_1272) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2389) : (!equeue.signal) -> ()
      %2390 = "equeue.control_start"() : () -> !equeue.signal
      %c0_1273 = constant 0 : index
      %2391 = "equeue.memcpy"(%2390, %122, %127, %111, %c0_1273) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2392 = "equeue.memcpy"(%2390, %122, %133, %113, %c0_1273) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2393 = "equeue.control_and"(%2392, %2391) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2394 = "equeue.memcpy"(%2390, %122, %139, %115, %c0_1273) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2395 = "equeue.control_and"(%2394, %2393) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2396 = "equeue.memcpy"(%2390, %122, %145, %117, %c0_1273) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2397 = "equeue.control_and"(%2396, %2395) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2398 = "equeue.memcpy"(%2390, %122, %151, %119, %c0_1273) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2399 = "equeue.control_and"(%2398, %2397) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2400 = "equeue.memcpy"(%2390, %121, %129, %102, %c0_1273) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2401 = "equeue.memcpy"(%2390, %121, %159, %104, %c0_1273) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2402 = "equeue.control_and"(%2401, %2400) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2403 = "equeue.memcpy"(%2390, %121, %189, %106, %c0_1273) {dest_bank = 1 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2404 = "equeue.control_and"(%2403, %2402) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2405 = "equeue.memcpy"(%2390, %121, %219, %108, %c0_1273) {dest_bank = 1 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2406 = "equeue.control_and"(%2405, %2404) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2407 = "equeue.memcpy"(%2390, %121, %249, %110, %c0_1273) {dest_bank = 1 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2408 = "equeue.control_and"(%2407, %2406) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2408, %2399) : (!equeue.signal, !equeue.signal) -> ()
      %2409 = "equeue.control_start"() : () -> !equeue.signal
      %done_1274 = "equeue.launch"(%2409, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_1275 = "equeue.launch"(%2409, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2410 = "equeue.control_and"(%done_1274, %done_1275) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1276 = "equeue.launch"(%2409, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2411 = "equeue.control_and"(%2410, %done_1276) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1277 = "equeue.launch"(%2409, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2412 = "equeue.control_and"(%2411, %done_1277) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1278 = "equeue.launch"(%2409, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2413 = "equeue.control_and"(%2412, %done_1278) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1279 = "equeue.launch"(%2409, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2414 = "equeue.control_and"(%2413, %done_1279) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1280 = "equeue.launch"(%2409, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2415 = "equeue.control_and"(%2414, %done_1280) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1281 = "equeue.launch"(%2409, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2416 = "equeue.control_and"(%2415, %done_1281) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1282 = "equeue.launch"(%2409, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2417 = "equeue.control_and"(%2416, %done_1282) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1283 = "equeue.launch"(%2409, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2418 = "equeue.control_and"(%2417, %done_1283) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1284 = "equeue.launch"(%2409, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2419 = "equeue.control_and"(%2418, %done_1284) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1285 = "equeue.launch"(%2409, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2420 = "equeue.control_and"(%2419, %done_1285) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1286 = "equeue.launch"(%2409, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2421 = "equeue.control_and"(%2420, %done_1286) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1287 = "equeue.launch"(%2409, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2422 = "equeue.control_and"(%2421, %done_1287) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1288 = "equeue.launch"(%2409, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2423 = "equeue.control_and"(%2422, %done_1288) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1289 = "equeue.launch"(%2409, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2424 = "equeue.control_and"(%2423, %done_1289) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1290 = "equeue.launch"(%2409, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2425 = "equeue.control_and"(%2424, %done_1290) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1291 = "equeue.launch"(%2409, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2426 = "equeue.control_and"(%2425, %done_1291) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1292 = "equeue.launch"(%2409, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2427 = "equeue.control_and"(%2426, %done_1292) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1293 = "equeue.launch"(%2409, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2428 = "equeue.control_and"(%2427, %done_1293) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1294 = "equeue.launch"(%2409, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2429 = "equeue.control_and"(%2428, %done_1294) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1295 = "equeue.launch"(%2409, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2430 = "equeue.control_and"(%2429, %done_1295) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1296 = "equeue.launch"(%2409, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2431 = "equeue.control_and"(%2430, %done_1296) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1297 = "equeue.launch"(%2409, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2432 = "equeue.control_and"(%2431, %done_1297) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1298 = "equeue.launch"(%2409, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2433 = "equeue.control_and"(%2432, %done_1298) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2433) : (!equeue.signal) -> ()
      %2434 = "equeue.control_start"() : () -> !equeue.signal
      %c0_1299 = constant 0 : index
      %2435 = "equeue.memcpy"(%2434, %122, %127, %111, %c0_1299) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2436 = "equeue.memcpy"(%2434, %122, %133, %113, %c0_1299) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2437 = "equeue.control_and"(%2436, %2435) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2438 = "equeue.memcpy"(%2434, %122, %139, %115, %c0_1299) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2439 = "equeue.control_and"(%2438, %2437) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2440 = "equeue.memcpy"(%2434, %122, %145, %117, %c0_1299) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2441 = "equeue.control_and"(%2440, %2439) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2442 = "equeue.memcpy"(%2434, %121, %129, %102, %c0_1299) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2443 = "equeue.memcpy"(%2434, %121, %159, %104, %c0_1299) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2444 = "equeue.control_and"(%2443, %2442) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2445 = "equeue.memcpy"(%2434, %121, %189, %106, %c0_1299) {dest_bank = 1 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2446 = "equeue.control_and"(%2445, %2444) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2447 = "equeue.memcpy"(%2434, %121, %219, %108, %c0_1299) {dest_bank = 1 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2448 = "equeue.control_and"(%2447, %2446) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2449 = "equeue.memcpy"(%2434, %121, %249, %110, %c0_1299) {dest_bank = 1 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2450 = "equeue.control_and"(%2449, %2448) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2450, %2441) : (!equeue.signal, !equeue.signal) -> ()
      %2451 = "equeue.control_start"() : () -> !equeue.signal
      %done_1300 = "equeue.launch"(%2451, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_1301 = "equeue.launch"(%2451, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2452 = "equeue.control_and"(%done_1300, %done_1301) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1302 = "equeue.launch"(%2451, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2453 = "equeue.control_and"(%2452, %done_1302) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1303 = "equeue.launch"(%2451, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2454 = "equeue.control_and"(%2453, %done_1303) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1304 = "equeue.launch"(%2451, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2455 = "equeue.control_and"(%2454, %done_1304) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1305 = "equeue.launch"(%2451, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2456 = "equeue.control_and"(%2455, %done_1305) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1306 = "equeue.launch"(%2451, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2457 = "equeue.control_and"(%2456, %done_1306) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1307 = "equeue.launch"(%2451, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2458 = "equeue.control_and"(%2457, %done_1307) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1308 = "equeue.launch"(%2451, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2459 = "equeue.control_and"(%2458, %done_1308) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1309 = "equeue.launch"(%2451, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2460 = "equeue.control_and"(%2459, %done_1309) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1310 = "equeue.launch"(%2451, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2461 = "equeue.control_and"(%2460, %done_1310) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1311 = "equeue.launch"(%2451, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2462 = "equeue.control_and"(%2461, %done_1311) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1312 = "equeue.launch"(%2451, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2463 = "equeue.control_and"(%2462, %done_1312) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1313 = "equeue.launch"(%2451, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2464 = "equeue.control_and"(%2463, %done_1313) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1314 = "equeue.launch"(%2451, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2465 = "equeue.control_and"(%2464, %done_1314) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1315 = "equeue.launch"(%2451, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2466 = "equeue.control_and"(%2465, %done_1315) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1316 = "equeue.launch"(%2451, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2467 = "equeue.control_and"(%2466, %done_1316) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1317 = "equeue.launch"(%2451, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2468 = "equeue.control_and"(%2467, %done_1317) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1318 = "equeue.launch"(%2451, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2469 = "equeue.control_and"(%2468, %done_1318) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1319 = "equeue.launch"(%2451, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2470 = "equeue.control_and"(%2469, %done_1319) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1320 = "equeue.launch"(%2451, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2471 = "equeue.control_and"(%2470, %done_1320) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1321 = "equeue.launch"(%2451, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2472 = "equeue.control_and"(%2471, %done_1321) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1322 = "equeue.launch"(%2451, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2473 = "equeue.control_and"(%2472, %done_1322) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1323 = "equeue.launch"(%2451, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2474 = "equeue.control_and"(%2473, %done_1323) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1324 = "equeue.launch"(%2451, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2475 = "equeue.control_and"(%2474, %done_1324) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2475) : (!equeue.signal) -> ()
      %2476 = "equeue.control_start"() : () -> !equeue.signal
      %c0_1325 = constant 0 : index
      %2477 = "equeue.memcpy"(%2476, %122, %127, %111, %c0_1325) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2478 = "equeue.memcpy"(%2476, %122, %133, %113, %c0_1325) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2479 = "equeue.control_and"(%2478, %2477) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2480 = "equeue.memcpy"(%2476, %122, %139, %115, %c0_1325) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2481 = "equeue.control_and"(%2480, %2479) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2482 = "equeue.memcpy"(%2476, %121, %129, %102, %c0_1325) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2483 = "equeue.memcpy"(%2476, %121, %159, %104, %c0_1325) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2484 = "equeue.control_and"(%2483, %2482) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2485 = "equeue.memcpy"(%2476, %121, %189, %106, %c0_1325) {dest_bank = 1 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2486 = "equeue.control_and"(%2485, %2484) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2487 = "equeue.memcpy"(%2476, %121, %219, %108, %c0_1325) {dest_bank = 1 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2488 = "equeue.control_and"(%2487, %2486) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2489 = "equeue.memcpy"(%2476, %121, %249, %110, %c0_1325) {dest_bank = 1 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2490 = "equeue.control_and"(%2489, %2488) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2490, %2481) : (!equeue.signal, !equeue.signal) -> ()
      %2491 = "equeue.control_start"() : () -> !equeue.signal
      %done_1326 = "equeue.launch"(%2491, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_1327 = "equeue.launch"(%2491, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2492 = "equeue.control_and"(%done_1326, %done_1327) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1328 = "equeue.launch"(%2491, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2493 = "equeue.control_and"(%2492, %done_1328) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1329 = "equeue.launch"(%2491, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2494 = "equeue.control_and"(%2493, %done_1329) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1330 = "equeue.launch"(%2491, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2495 = "equeue.control_and"(%2494, %done_1330) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1331 = "equeue.launch"(%2491, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2496 = "equeue.control_and"(%2495, %done_1331) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1332 = "equeue.launch"(%2491, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2497 = "equeue.control_and"(%2496, %done_1332) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1333 = "equeue.launch"(%2491, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2498 = "equeue.control_and"(%2497, %done_1333) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1334 = "equeue.launch"(%2491, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2499 = "equeue.control_and"(%2498, %done_1334) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1335 = "equeue.launch"(%2491, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2500 = "equeue.control_and"(%2499, %done_1335) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1336 = "equeue.launch"(%2491, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2501 = "equeue.control_and"(%2500, %done_1336) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1337 = "equeue.launch"(%2491, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2502 = "equeue.control_and"(%2501, %done_1337) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1338 = "equeue.launch"(%2491, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2503 = "equeue.control_and"(%2502, %done_1338) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1339 = "equeue.launch"(%2491, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2504 = "equeue.control_and"(%2503, %done_1339) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1340 = "equeue.launch"(%2491, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2505 = "equeue.control_and"(%2504, %done_1340) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1341 = "equeue.launch"(%2491, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2506 = "equeue.control_and"(%2505, %done_1341) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1342 = "equeue.launch"(%2491, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2507 = "equeue.control_and"(%2506, %done_1342) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1343 = "equeue.launch"(%2491, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2508 = "equeue.control_and"(%2507, %done_1343) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1344 = "equeue.launch"(%2491, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2509 = "equeue.control_and"(%2508, %done_1344) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1345 = "equeue.launch"(%2491, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2510 = "equeue.control_and"(%2509, %done_1345) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1346 = "equeue.launch"(%2491, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2511 = "equeue.control_and"(%2510, %done_1346) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1347 = "equeue.launch"(%2491, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2512 = "equeue.control_and"(%2511, %done_1347) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1348 = "equeue.launch"(%2491, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2513 = "equeue.control_and"(%2512, %done_1348) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1349 = "equeue.launch"(%2491, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2514 = "equeue.control_and"(%2513, %done_1349) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1350 = "equeue.launch"(%2491, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2515 = "equeue.control_and"(%2514, %done_1350) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2515) : (!equeue.signal) -> ()
      %2516 = "equeue.control_start"() : () -> !equeue.signal
      %c0_1351 = constant 0 : index
      %2517 = "equeue.memcpy"(%2516, %122, %127, %111, %c0_1351) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2518 = "equeue.memcpy"(%2516, %122, %133, %113, %c0_1351) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2519 = "equeue.control_and"(%2518, %2517) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2520 = "equeue.memcpy"(%2516, %121, %129, %102, %c0_1351) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2521 = "equeue.memcpy"(%2516, %121, %159, %104, %c0_1351) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2522 = "equeue.control_and"(%2521, %2520) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2523 = "equeue.memcpy"(%2516, %121, %189, %106, %c0_1351) {dest_bank = 1 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2524 = "equeue.control_and"(%2523, %2522) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2525 = "equeue.memcpy"(%2516, %121, %219, %108, %c0_1351) {dest_bank = 1 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2526 = "equeue.control_and"(%2525, %2524) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2527 = "equeue.memcpy"(%2516, %121, %249, %110, %c0_1351) {dest_bank = 1 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2528 = "equeue.control_and"(%2527, %2526) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2528, %2519) : (!equeue.signal, !equeue.signal) -> ()
      %2529 = "equeue.control_start"() : () -> !equeue.signal
      %done_1352 = "equeue.launch"(%2529, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_1353 = "equeue.launch"(%2529, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2530 = "equeue.control_and"(%done_1352, %done_1353) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1354 = "equeue.launch"(%2529, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2531 = "equeue.control_and"(%2530, %done_1354) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1355 = "equeue.launch"(%2529, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2532 = "equeue.control_and"(%2531, %done_1355) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1356 = "equeue.launch"(%2529, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2533 = "equeue.control_and"(%2532, %done_1356) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1357 = "equeue.launch"(%2529, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2534 = "equeue.control_and"(%2533, %done_1357) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1358 = "equeue.launch"(%2529, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2535 = "equeue.control_and"(%2534, %done_1358) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1359 = "equeue.launch"(%2529, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2536 = "equeue.control_and"(%2535, %done_1359) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1360 = "equeue.launch"(%2529, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2537 = "equeue.control_and"(%2536, %done_1360) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1361 = "equeue.launch"(%2529, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2538 = "equeue.control_and"(%2537, %done_1361) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1362 = "equeue.launch"(%2529, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2539 = "equeue.control_and"(%2538, %done_1362) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1363 = "equeue.launch"(%2529, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2540 = "equeue.control_and"(%2539, %done_1363) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1364 = "equeue.launch"(%2529, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2541 = "equeue.control_and"(%2540, %done_1364) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1365 = "equeue.launch"(%2529, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2542 = "equeue.control_and"(%2541, %done_1365) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1366 = "equeue.launch"(%2529, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2543 = "equeue.control_and"(%2542, %done_1366) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1367 = "equeue.launch"(%2529, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2544 = "equeue.control_and"(%2543, %done_1367) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1368 = "equeue.launch"(%2529, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2545 = "equeue.control_and"(%2544, %done_1368) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1369 = "equeue.launch"(%2529, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2546 = "equeue.control_and"(%2545, %done_1369) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1370 = "equeue.launch"(%2529, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2547 = "equeue.control_and"(%2546, %done_1370) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1371 = "equeue.launch"(%2529, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2548 = "equeue.control_and"(%2547, %done_1371) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1372 = "equeue.launch"(%2529, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2549 = "equeue.control_and"(%2548, %done_1372) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1373 = "equeue.launch"(%2529, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2550 = "equeue.control_and"(%2549, %done_1373) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1374 = "equeue.launch"(%2529, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2551 = "equeue.control_and"(%2550, %done_1374) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1375 = "equeue.launch"(%2529, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2552 = "equeue.control_and"(%2551, %done_1375) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1376 = "equeue.launch"(%2529, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2553 = "equeue.control_and"(%2552, %done_1376) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2553) : (!equeue.signal) -> ()
      %2554 = "equeue.control_start"() : () -> !equeue.signal
      %c0_1377 = constant 0 : index
      %2555 = "equeue.memcpy"(%2554, %122, %127, %111, %c0_1377) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2556 = "equeue.memcpy"(%2554, %121, %129, %102, %c0_1377) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2557 = "equeue.memcpy"(%2554, %121, %159, %104, %c0_1377) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2558 = "equeue.control_and"(%2557, %2556) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2559 = "equeue.memcpy"(%2554, %121, %189, %106, %c0_1377) {dest_bank = 1 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2560 = "equeue.control_and"(%2559, %2558) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2561 = "equeue.memcpy"(%2554, %121, %219, %108, %c0_1377) {dest_bank = 1 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2562 = "equeue.control_and"(%2561, %2560) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2563 = "equeue.memcpy"(%2554, %121, %249, %110, %c0_1377) {dest_bank = 1 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2564 = "equeue.control_and"(%2563, %2562) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2564, %2555) : (!equeue.signal, !equeue.signal) -> ()
      %2565 = "equeue.control_start"() : () -> !equeue.signal
      %done_1378 = "equeue.launch"(%2565, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_1379 = "equeue.launch"(%2565, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2566 = "equeue.control_and"(%done_1378, %done_1379) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1380 = "equeue.launch"(%2565, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2567 = "equeue.control_and"(%2566, %done_1380) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1381 = "equeue.launch"(%2565, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2568 = "equeue.control_and"(%2567, %done_1381) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1382 = "equeue.launch"(%2565, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2569 = "equeue.control_and"(%2568, %done_1382) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1383 = "equeue.launch"(%2565, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2570 = "equeue.control_and"(%2569, %done_1383) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1384 = "equeue.launch"(%2565, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2571 = "equeue.control_and"(%2570, %done_1384) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1385 = "equeue.launch"(%2565, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2572 = "equeue.control_and"(%2571, %done_1385) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1386 = "equeue.launch"(%2565, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2573 = "equeue.control_and"(%2572, %done_1386) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1387 = "equeue.launch"(%2565, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2574 = "equeue.control_and"(%2573, %done_1387) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1388 = "equeue.launch"(%2565, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2575 = "equeue.control_and"(%2574, %done_1388) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1389 = "equeue.launch"(%2565, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2576 = "equeue.control_and"(%2575, %done_1389) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1390 = "equeue.launch"(%2565, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2577 = "equeue.control_and"(%2576, %done_1390) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1391 = "equeue.launch"(%2565, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2578 = "equeue.control_and"(%2577, %done_1391) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1392 = "equeue.launch"(%2565, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2579 = "equeue.control_and"(%2578, %done_1392) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1393 = "equeue.launch"(%2565, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2580 = "equeue.control_and"(%2579, %done_1393) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1394 = "equeue.launch"(%2565, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2581 = "equeue.control_and"(%2580, %done_1394) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1395 = "equeue.launch"(%2565, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2582 = "equeue.control_and"(%2581, %done_1395) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1396 = "equeue.launch"(%2565, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2583 = "equeue.control_and"(%2582, %done_1396) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1397 = "equeue.launch"(%2565, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2584 = "equeue.control_and"(%2583, %done_1397) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1398 = "equeue.launch"(%2565, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2585 = "equeue.control_and"(%2584, %done_1398) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1399 = "equeue.launch"(%2565, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2586 = "equeue.control_and"(%2585, %done_1399) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1400 = "equeue.launch"(%2565, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2587 = "equeue.control_and"(%2586, %done_1400) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1401 = "equeue.launch"(%2565, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2588 = "equeue.control_and"(%2587, %done_1401) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1402 = "equeue.launch"(%2565, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2589 = "equeue.control_and"(%2588, %done_1402) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2589) : (!equeue.signal) -> ()
      %2590 = "equeue.control_start"() : () -> !equeue.signal
      %c0_1403 = constant 0 : index
      %2591 = "equeue.memcpy"(%2590, %121, %129, %102, %c0_1403) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2592 = "equeue.memcpy"(%2590, %121, %159, %104, %c0_1403) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2593 = "equeue.control_and"(%2592, %2591) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2594 = "equeue.memcpy"(%2590, %121, %189, %106, %c0_1403) {dest_bank = 1 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2595 = "equeue.control_and"(%2594, %2593) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2596 = "equeue.memcpy"(%2590, %121, %219, %108, %c0_1403) {dest_bank = 1 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2597 = "equeue.control_and"(%2596, %2595) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2597) : (!equeue.signal) -> ()
      %2598 = "equeue.control_start"() : () -> !equeue.signal
      %done_1404 = "equeue.launch"(%2598, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        %cst = constant 7.000000e+00 : f32
        "equeue.write"(%cst, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%2714, %arg10) {bank = 0 : i64} : (f32, memref<5x3x3xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_1405 = "equeue.launch"(%2598, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2599 = "equeue.control_and"(%done_1404, %done_1405) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1406 = "equeue.launch"(%2598, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2600 = "equeue.control_and"(%2599, %done_1406) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1407 = "equeue.launch"(%2598, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2601 = "equeue.control_and"(%2600, %done_1407) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1408 = "equeue.launch"(%2598, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2602 = "equeue.control_and"(%2601, %done_1408) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1409 = "equeue.launch"(%2598, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2603 = "equeue.control_and"(%2602, %done_1409) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1410 = "equeue.launch"(%2598, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2604 = "equeue.control_and"(%2603, %done_1410) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1411 = "equeue.launch"(%2598, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2605 = "equeue.control_and"(%2604, %done_1411) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1412 = "equeue.launch"(%2598, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2606 = "equeue.control_and"(%2605, %done_1412) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1413 = "equeue.launch"(%2598, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2607 = "equeue.control_and"(%2606, %done_1413) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1414 = "equeue.launch"(%2598, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2608 = "equeue.control_and"(%2607, %done_1414) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1415 = "equeue.launch"(%2598, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2609 = "equeue.control_and"(%2608, %done_1415) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1416 = "equeue.launch"(%2598, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2610 = "equeue.control_and"(%2609, %done_1416) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1417 = "equeue.launch"(%2598, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2611 = "equeue.control_and"(%2610, %done_1417) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1418 = "equeue.launch"(%2598, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2612 = "equeue.control_and"(%2611, %done_1418) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1419 = "equeue.launch"(%2598, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2613 = "equeue.control_and"(%2612, %done_1419) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1420 = "equeue.launch"(%2598, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2614 = "equeue.control_and"(%2613, %done_1420) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1421 = "equeue.launch"(%2598, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2615 = "equeue.control_and"(%2614, %done_1421) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1422 = "equeue.launch"(%2598, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2616 = "equeue.control_and"(%2615, %done_1422) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1423 = "equeue.launch"(%2598, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2617 = "equeue.control_and"(%2616, %done_1423) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1424 = "equeue.launch"(%2598, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2618 = "equeue.control_and"(%2617, %done_1424) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1425 = "equeue.launch"(%2598, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2619 = "equeue.control_and"(%2618, %done_1425) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1426 = "equeue.launch"(%2598, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2620 = "equeue.control_and"(%2619, %done_1426) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1427 = "equeue.launch"(%2598, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2621 = "equeue.control_and"(%2620, %done_1427) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1428 = "equeue.launch"(%2598, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2622 = "equeue.control_and"(%2621, %done_1428) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2622) : (!equeue.signal) -> ()
      %2623 = "equeue.control_start"() : () -> !equeue.signal
      %c0_1429 = constant 0 : index
      %2624 = "equeue.memcpy"(%2623, %121, %129, %102, %c0_1429) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2625 = "equeue.memcpy"(%2623, %121, %159, %104, %c0_1429) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2626 = "equeue.control_and"(%2625, %2624) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2627 = "equeue.memcpy"(%2623, %121, %189, %106, %c0_1429) {dest_bank = 1 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2628 = "equeue.control_and"(%2627, %2626) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2628) : (!equeue.signal) -> ()
      %2629 = "equeue.control_start"() : () -> !equeue.signal
      %done_1430 = "equeue.launch"(%2629, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_1431 = "equeue.launch"(%2629, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        %cst = constant 7.000000e+00 : f32
        "equeue.write"(%cst, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%2714, %arg10) {bank = 0 : i64} : (f32, memref<5x3x3xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2630 = "equeue.control_and"(%done_1430, %done_1431) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1432 = "equeue.launch"(%2629, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2631 = "equeue.control_and"(%2630, %done_1432) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1433 = "equeue.launch"(%2629, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2632 = "equeue.control_and"(%2631, %done_1433) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1434 = "equeue.launch"(%2629, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2633 = "equeue.control_and"(%2632, %done_1434) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1435 = "equeue.launch"(%2629, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        %cst = constant 7.000000e+00 : f32
        "equeue.write"(%cst, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%2714, %arg10) {bank = 1 : i64} : (f32, memref<5x3x3xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2634 = "equeue.control_and"(%2633, %done_1435) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1436 = "equeue.launch"(%2629, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2635 = "equeue.control_and"(%2634, %done_1436) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1437 = "equeue.launch"(%2629, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2636 = "equeue.control_and"(%2635, %done_1437) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1438 = "equeue.launch"(%2629, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2637 = "equeue.control_and"(%2636, %done_1438) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1439 = "equeue.launch"(%2629, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2638 = "equeue.control_and"(%2637, %done_1439) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1440 = "equeue.launch"(%2629, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2639 = "equeue.control_and"(%2638, %done_1440) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1441 = "equeue.launch"(%2629, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2640 = "equeue.control_and"(%2639, %done_1441) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1442 = "equeue.launch"(%2629, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2641 = "equeue.control_and"(%2640, %done_1442) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1443 = "equeue.launch"(%2629, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2642 = "equeue.control_and"(%2641, %done_1443) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1444 = "equeue.launch"(%2629, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2643 = "equeue.control_and"(%2642, %done_1444) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1445 = "equeue.launch"(%2629, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2644 = "equeue.control_and"(%2643, %done_1445) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1446 = "equeue.launch"(%2629, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2645 = "equeue.control_and"(%2644, %done_1446) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1447 = "equeue.launch"(%2629, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2646 = "equeue.control_and"(%2645, %done_1447) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1448 = "equeue.launch"(%2629, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2647 = "equeue.control_and"(%2646, %done_1448) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1449 = "equeue.launch"(%2629, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2648 = "equeue.control_and"(%2647, %done_1449) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1450 = "equeue.launch"(%2629, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2649 = "equeue.control_and"(%2648, %done_1450) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1451 = "equeue.launch"(%2629, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2650 = "equeue.control_and"(%2649, %done_1451) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1452 = "equeue.launch"(%2629, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2651 = "equeue.control_and"(%2650, %done_1452) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1453 = "equeue.launch"(%2629, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2652 = "equeue.control_and"(%2651, %done_1453) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1454 = "equeue.launch"(%2629, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2653 = "equeue.control_and"(%2652, %done_1454) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2653) : (!equeue.signal) -> ()
      %2654 = "equeue.control_start"() : () -> !equeue.signal
      %c0_1455 = constant 0 : index
      %2655 = "equeue.memcpy"(%2654, %121, %129, %102, %c0_1455) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2656 = "equeue.memcpy"(%2654, %121, %159, %104, %c0_1455) {dest_bank = 1 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %2657 = "equeue.control_and"(%2656, %2655) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2657) : (!equeue.signal) -> ()
      %2658 = "equeue.control_start"() : () -> !equeue.signal
      %done_1456 = "equeue.launch"(%2658, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_1457 = "equeue.launch"(%2658, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2659 = "equeue.control_and"(%done_1456, %done_1457) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1458 = "equeue.launch"(%2658, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        %cst = constant 7.000000e+00 : f32
        "equeue.write"(%cst, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%2714, %arg10) {bank = 0 : i64} : (f32, memref<5x3x3xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2660 = "equeue.control_and"(%2659, %done_1458) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1459 = "equeue.launch"(%2658, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2661 = "equeue.control_and"(%2660, %done_1459) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1460 = "equeue.launch"(%2658, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2662 = "equeue.control_and"(%2661, %done_1460) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1461 = "equeue.launch"(%2658, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2663 = "equeue.control_and"(%2662, %done_1461) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1462 = "equeue.launch"(%2658, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        %cst = constant 7.000000e+00 : f32
        "equeue.write"(%cst, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%2714, %arg10) {bank = 1 : i64} : (f32, memref<5x3x3xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2664 = "equeue.control_and"(%2663, %done_1462) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1463 = "equeue.launch"(%2658, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2665 = "equeue.control_and"(%2664, %done_1463) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1464 = "equeue.launch"(%2658, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2666 = "equeue.control_and"(%2665, %done_1464) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1465 = "equeue.launch"(%2658, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2667 = "equeue.control_and"(%2666, %done_1465) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1466 = "equeue.launch"(%2658, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        %cst = constant 7.000000e+00 : f32
        "equeue.write"(%cst, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%2714, %arg10) {bank = 2 : i64} : (f32, memref<5x3x3xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2668 = "equeue.control_and"(%2667, %done_1466) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1467 = "equeue.launch"(%2658, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2669 = "equeue.control_and"(%2668, %done_1467) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1468 = "equeue.launch"(%2658, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2670 = "equeue.control_and"(%2669, %done_1468) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1469 = "equeue.launch"(%2658, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2671 = "equeue.control_and"(%2670, %done_1469) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1470 = "equeue.launch"(%2658, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2672 = "equeue.control_and"(%2671, %done_1470) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1471 = "equeue.launch"(%2658, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2673 = "equeue.control_and"(%2672, %done_1471) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1472 = "equeue.launch"(%2658, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2674 = "equeue.control_and"(%2673, %done_1472) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1473 = "equeue.launch"(%2658, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2675 = "equeue.control_and"(%2674, %done_1473) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1474 = "equeue.launch"(%2658, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2676 = "equeue.control_and"(%2675, %done_1474) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1475 = "equeue.launch"(%2658, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2677 = "equeue.control_and"(%2676, %done_1475) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1476 = "equeue.launch"(%2658, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2678 = "equeue.control_and"(%2677, %done_1476) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1477 = "equeue.launch"(%2658, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2679 = "equeue.control_and"(%2678, %done_1477) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1478 = "equeue.launch"(%2658, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2680 = "equeue.control_and"(%2679, %done_1478) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1479 = "equeue.launch"(%2658, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2681 = "equeue.control_and"(%2680, %done_1479) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1480 = "equeue.launch"(%2658, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2682 = "equeue.control_and"(%2681, %done_1480) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2682) : (!equeue.signal) -> ()
      %2683 = "equeue.control_start"() : () -> !equeue.signal
      %c0_1481 = constant 0 : index
      %2684 = "equeue.memcpy"(%2683, %121, %129, %102, %c0_1481) {dest_bank = 1 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      "equeue.await"(%2684) : (!equeue.signal) -> ()
      %2685 = "equeue.control_start"() : () -> !equeue.signal
      %done_1482 = "equeue.launch"(%2685, %126, %129, %127, %128, %135, %157, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %done_1483 = "equeue.launch"(%2685, %156, %159, %157, %158, %165, %187, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2686 = "equeue.control_and"(%done_1482, %done_1483) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1484 = "equeue.launch"(%2685, %186, %189, %187, %188, %195, %217, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2687 = "equeue.control_and"(%2686, %done_1484) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1485 = "equeue.launch"(%2685, %216, %219, %217, %218, %225, %247, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2688 = "equeue.control_and"(%2687, %done_1485) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1486 = "equeue.launch"(%2685, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2689 = "equeue.control_and"(%2688, %done_1486) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1487 = "equeue.launch"(%2685, %132, %135, %133, %134, %141, %163, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2690 = "equeue.control_and"(%2689, %done_1487) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1488 = "equeue.launch"(%2685, %162, %165, %163, %164, %171, %193, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2691 = "equeue.control_and"(%2690, %done_1488) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1489 = "equeue.launch"(%2685, %192, %195, %193, %194, %201, %223, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2692 = "equeue.control_and"(%2691, %done_1489) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1490 = "equeue.launch"(%2685, %222, %225, %223, %224, %231, %253, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2693 = "equeue.control_and"(%2692, %done_1490) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1491 = "equeue.launch"(%2685, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2694 = "equeue.control_and"(%2693, %done_1491) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1492 = "equeue.launch"(%2685, %138, %141, %139, %140, %147, %169, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2695 = "equeue.control_and"(%2694, %done_1492) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1493 = "equeue.launch"(%2685, %168, %171, %169, %170, %177, %199, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2696 = "equeue.control_and"(%2695, %done_1493) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1494 = "equeue.launch"(%2685, %198, %201, %199, %200, %207, %229, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2697 = "equeue.control_and"(%2696, %done_1494) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1495 = "equeue.launch"(%2685, %228, %231, %229, %230, %237, %259, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2698 = "equeue.control_and"(%2697, %done_1495) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1496 = "equeue.launch"(%2685, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2699 = "equeue.control_and"(%2698, %done_1496) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1497 = "equeue.launch"(%2685, %144, %147, %145, %146, %153, %175, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2700 = "equeue.control_and"(%2699, %done_1497) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1498 = "equeue.launch"(%2685, %174, %177, %175, %176, %183, %205, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2701 = "equeue.control_and"(%2700, %done_1498) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1499 = "equeue.launch"(%2685, %204, %207, %205, %206, %213, %235, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2702 = "equeue.control_and"(%2701, %done_1499) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1500 = "equeue.launch"(%2685, %234, %237, %235, %236, %243, %265, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2703 = "equeue.control_and"(%2702, %done_1500) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1501 = "equeue.launch"(%2685, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2711, %arg8) {bank = 1 : i64} : (f32, memref<1xf32>) -> ()
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2704 = "equeue.control_and"(%2703, %done_1501) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1502 = "equeue.launch"(%2685, %150, %153, %151, %152, %181, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2705 = "equeue.control_and"(%2704, %done_1502) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1503 = "equeue.launch"(%2685, %180, %183, %181, %182, %211, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2706 = "equeue.control_and"(%2705, %done_1503) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1504 = "equeue.launch"(%2685, %210, %213, %211, %212, %241, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2707 = "equeue.control_and"(%2706, %done_1504) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1505 = "equeue.launch"(%2685, %240, %243, %241, %242, %271, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%2710, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2708 = "equeue.control_and"(%2707, %done_1505) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1506 = "equeue.launch"(%2685, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %2710 = "equeue.read"(%arg6) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %2711 = "equeue.read"(%arg5) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %2712 = mulf %2711, %2710 : f32
        %2713 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %2714 = addf %2712, %2713 : f32
        "equeue.write"(%2714, %arg7) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2709 = "equeue.control_and"(%2708, %done_1506) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2709) : (!equeue.signal) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, memref<3x7x7xf32>, memref<5x3x7x3xf32>) -> !equeue.signal
    return
  }
}
