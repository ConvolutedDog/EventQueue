

module {
  func @graph(%arg0: memref<3x7x7xf32>, %arg1: memref<5x3x7x3xf32>) {
    %0 = "equeue.create_proc"() {name = "proc0,0", type = "AIEngine"} : () -> i32
    %1 = "equeue.create_mem"() {banks = 3 : i64, data = "f32", name = "mem0,0", shape = dense<3> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %2 = "equeue.create_comp"(%1, %0) {name = "pe_0,0"} : (i32, i32) -> i32
    %3 = "equeue.create_proc"() {name = "proc0,1", type = "AIEngine"} : () -> i32
    %4 = "equeue.create_mem"() {banks = 3 : i64, data = "f32", name = "mem0,1", shape = dense<3> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %5 = "equeue.create_comp"(%4, %3, %2) {name = "pe_0,1"} : (i32, i32, i32) -> i32
    %6 = "equeue.create_proc"() {name = "proc0,2", type = "AIEngine"} : () -> i32
    %7 = "equeue.create_mem"() {banks = 3 : i64, data = "f32", name = "mem0,2", shape = dense<3> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %8 = "equeue.create_comp"(%7, %6, %5) {name = "pe_0,2"} : (i32, i32, i32) -> i32
    %9 = "equeue.create_proc"() {name = "proc0,3", type = "AIEngine"} : () -> i32
    %10 = "equeue.create_mem"() {banks = 3 : i64, data = "f32", name = "mem0,3", shape = dense<3> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %11 = "equeue.create_comp"(%10, %9, %8) {name = "pe_0,3"} : (i32, i32, i32) -> i32
    %12 = "equeue.create_proc"() {name = "proc0,4", type = "AIEngine"} : () -> i32
    %13 = "equeue.create_mem"() {banks = 3 : i64, data = "f32", name = "mem0,4", shape = dense<3> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %14 = "equeue.create_comp"(%13, %12, %11) {name = "pe_0,4"} : (i32, i32, i32) -> i32
    %15 = "equeue.create_proc"() {name = "proc1,0", type = "AIEngine"} : () -> i32
    %16 = "equeue.create_mem"() {banks = 3 : i64, data = "f32", name = "mem1,0", shape = dense<3> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %17 = "equeue.create_comp"(%16, %15, %14) {name = "pe_1,0"} : (i32, i32, i32) -> i32
    %18 = "equeue.create_proc"() {name = "proc1,1", type = "AIEngine"} : () -> i32
    %19 = "equeue.create_mem"() {banks = 3 : i64, data = "f32", name = "mem1,1", shape = dense<3> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %20 = "equeue.create_comp"(%19, %18, %17) {name = "pe_1,1"} : (i32, i32, i32) -> i32
    %21 = "equeue.create_proc"() {name = "proc1,2", type = "AIEngine"} : () -> i32
    %22 = "equeue.create_mem"() {banks = 3 : i64, data = "f32", name = "mem1,2", shape = dense<3> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %23 = "equeue.create_comp"(%22, %21, %20) {name = "pe_1,2"} : (i32, i32, i32) -> i32
    %24 = "equeue.create_proc"() {name = "proc1,3", type = "AIEngine"} : () -> i32
    %25 = "equeue.create_mem"() {banks = 3 : i64, data = "f32", name = "mem1,3", shape = dense<3> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %26 = "equeue.create_comp"(%25, %24, %23) {name = "pe_1,3"} : (i32, i32, i32) -> i32
    %27 = "equeue.create_proc"() {name = "proc1,4", type = "AIEngine"} : () -> i32
    %28 = "equeue.create_mem"() {banks = 3 : i64, data = "f32", name = "mem1,4", shape = dense<3> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %29 = "equeue.create_comp"(%28, %27, %26) {name = "pe_1,4"} : (i32, i32, i32) -> i32
    %30 = "equeue.create_proc"() {name = "proc2,0", type = "AIEngine"} : () -> i32
    %31 = "equeue.create_mem"() {banks = 3 : i64, data = "f32", name = "mem2,0", shape = dense<3> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %32 = "equeue.create_comp"(%31, %30, %29) {name = "pe_2,0"} : (i32, i32, i32) -> i32
    %33 = "equeue.create_proc"() {name = "proc2,1", type = "AIEngine"} : () -> i32
    %34 = "equeue.create_mem"() {banks = 3 : i64, data = "f32", name = "mem2,1", shape = dense<3> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %35 = "equeue.create_comp"(%34, %33, %32) {name = "pe_2,1"} : (i32, i32, i32) -> i32
    %36 = "equeue.create_proc"() {name = "proc2,2", type = "AIEngine"} : () -> i32
    %37 = "equeue.create_mem"() {banks = 3 : i64, data = "f32", name = "mem2,2", shape = dense<3> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %38 = "equeue.create_comp"(%37, %36, %35) {name = "pe_2,2"} : (i32, i32, i32) -> i32
    %39 = "equeue.create_proc"() {name = "proc2,3", type = "AIEngine"} : () -> i32
    %40 = "equeue.create_mem"() {banks = 3 : i64, data = "f32", name = "mem2,3", shape = dense<3> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %41 = "equeue.create_comp"(%40, %39, %38) {name = "pe_2,3"} : (i32, i32, i32) -> i32
    %42 = "equeue.create_proc"() {name = "proc2,4", type = "AIEngine"} : () -> i32
    %43 = "equeue.create_mem"() {banks = 3 : i64, data = "f32", name = "mem2,4", shape = dense<3> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %44 = "equeue.create_comp"(%43, %42, %41) {name = "pe_2,4"} : (i32, i32, i32) -> i32
    %45 = "equeue.create_proc"() {name = "proc3,0", type = "AIEngine"} : () -> i32
    %46 = "equeue.create_mem"() {banks = 3 : i64, data = "f32", name = "mem3,0", shape = dense<3> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %47 = "equeue.create_comp"(%46, %45, %44) {name = "pe_3,0"} : (i32, i32, i32) -> i32
    %48 = "equeue.create_proc"() {name = "proc3,1", type = "AIEngine"} : () -> i32
    %49 = "equeue.create_mem"() {banks = 3 : i64, data = "f32", name = "mem3,1", shape = dense<3> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %50 = "equeue.create_comp"(%49, %48, %47) {name = "pe_3,1"} : (i32, i32, i32) -> i32
    %51 = "equeue.create_proc"() {name = "proc3,2", type = "AIEngine"} : () -> i32
    %52 = "equeue.create_mem"() {banks = 3 : i64, data = "f32", name = "mem3,2", shape = dense<3> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %53 = "equeue.create_comp"(%52, %51, %50) {name = "pe_3,2"} : (i32, i32, i32) -> i32
    %54 = "equeue.create_proc"() {name = "proc3,3", type = "AIEngine"} : () -> i32
    %55 = "equeue.create_mem"() {banks = 3 : i64, data = "f32", name = "mem3,3", shape = dense<3> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %56 = "equeue.create_comp"(%55, %54, %53) {name = "pe_3,3"} : (i32, i32, i32) -> i32
    %57 = "equeue.create_proc"() {name = "proc3,4", type = "AIEngine"} : () -> i32
    %58 = "equeue.create_mem"() {banks = 3 : i64, data = "f32", name = "mem3,4", shape = dense<3> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %59 = "equeue.create_comp"(%58, %57, %56) {name = "pe_3,4"} : (i32, i32, i32) -> i32
    %60 = "equeue.create_proc"() {name = "proc4,0", type = "AIEngine"} : () -> i32
    %61 = "equeue.create_mem"() {banks = 3 : i64, data = "f32", name = "mem4,0", shape = dense<3> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %62 = "equeue.create_comp"(%61, %60, %59) {name = "pe_4,0"} : (i32, i32, i32) -> i32
    %63 = "equeue.create_proc"() {name = "proc4,1", type = "AIEngine"} : () -> i32
    %64 = "equeue.create_mem"() {banks = 3 : i64, data = "f32", name = "mem4,1", shape = dense<3> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %65 = "equeue.create_comp"(%64, %63, %62) {name = "pe_4,1"} : (i32, i32, i32) -> i32
    %66 = "equeue.create_proc"() {name = "proc4,2", type = "AIEngine"} : () -> i32
    %67 = "equeue.create_mem"() {banks = 3 : i64, data = "f32", name = "mem4,2", shape = dense<3> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %68 = "equeue.create_comp"(%67, %66, %65) {name = "pe_4,2"} : (i32, i32, i32) -> i32
    %69 = "equeue.create_proc"() {name = "proc4,3", type = "AIEngine"} : () -> i32
    %70 = "equeue.create_mem"() {banks = 3 : i64, data = "f32", name = "mem4,3", shape = dense<3> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %71 = "equeue.create_comp"(%70, %69, %68) {name = "pe_4,3"} : (i32, i32, i32) -> i32
    %72 = "equeue.create_proc"() {name = "proc4,4", type = "AIEngine"} : () -> i32
    %73 = "equeue.create_mem"() {banks = 3 : i64, data = "f32", name = "mem4,4", shape = dense<3> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %74 = "equeue.create_comp"(%73, %72, %71) {name = "pe_4,4"} : (i32, i32, i32) -> i32
    %75 = "equeue.create_mem"() {banks = 10 : i64, data = "f32", name = "mem", shape = dense<110592> : tensor<1xi64>, type = "SRAM"} : () -> i32
    %76 = "equeue.create_dma"() {name = "dma0"} : () -> i32
    %77 = "equeue.create_comp"(%76) {name = "dma_col"} : (i32) -> i32
    %78 = "equeue.create_dma"() {name = "dma1"} : () -> i32
    %79 = "equeue.create_comp"(%78, %77) {name = "dma_col"} : (i32, i32) -> i32
    %80 = "equeue.create_dma"() {name = "dma2"} : () -> i32
    %81 = "equeue.create_comp"(%80, %79) {name = "dma_col"} : (i32, i32) -> i32
    %82 = "equeue.create_dma"() {name = "dma3"} : () -> i32
    %83 = "equeue.create_comp"(%82, %81) {name = "dma_col"} : (i32, i32) -> i32
    %84 = "equeue.create_dma"() {name = "dma4"} : () -> i32
    %85 = "equeue.create_comp"(%84, %83) {name = "dma_col"} : (i32, i32) -> i32
    %86 = "equeue.create_dma"() {name = "dma0"} : () -> i32
    %87 = "equeue.create_comp"(%86) {name = "dma_row"} : (i32) -> i32
    %88 = "equeue.create_dma"() {name = "dma1"} : () -> i32
    %89 = "equeue.create_comp"(%88, %87) {name = "dma_row"} : (i32, i32) -> i32
    %90 = "equeue.create_dma"() {name = "dma2"} : () -> i32
    %91 = "equeue.create_comp"(%90, %89) {name = "dma_row"} : (i32, i32) -> i32
    %92 = "equeue.create_dma"() {name = "dma3"} : () -> i32
    %93 = "equeue.create_comp"(%92, %91) {name = "dma_row"} : (i32, i32) -> i32
    %94 = "equeue.create_dma"() {name = "dma4"} : () -> i32
    %95 = "equeue.create_comp"(%94, %93) {name = "dma_row"} : (i32, i32) -> i32
    %96 = "equeue.create_proc"() {name = "proc", type = "MicroPlate"} : () -> i32
    %97 = "equeue.create_comp"(%74, %96, %75, %95, %85) {name = "accel"} : (i32, i32, i32, i32, i32) -> i32
    %98 = "equeue.control_start"() : () -> !equeue.signal
    %done = "equeue.launch"(%98, %96, %97, %arg0, %arg1) ( {
    ^bb0(%arg2: i32, %arg3: memref<3x7x7xf32>, %arg4: memref<5x3x7x3xf32>):  // no predecessors
      %99 = "equeue.get_comp"(%arg2) {name = "proc"} : (i32) -> i32
      %100 = "equeue.get_comp"(%arg2) {name = "dma_row"} : (i32) -> i32
      %101 = "equeue.get_comp"(%arg2) {name = "dma_col"} : (i32) -> i32
      %102 = "equeue.get_comp"(%100) {name = "dma4"} : (i32) -> i32
      %103 = "equeue.get_comp"(%100) {name = "dma_row"} : (i32) -> i32
      %104 = "equeue.get_comp"(%103) {name = "dma3"} : (i32) -> i32
      %105 = "equeue.get_comp"(%103) {name = "dma_row"} : (i32) -> i32
      %106 = "equeue.get_comp"(%105) {name = "dma2"} : (i32) -> i32
      %107 = "equeue.get_comp"(%105) {name = "dma_row"} : (i32) -> i32
      %108 = "equeue.get_comp"(%107) {name = "dma1"} : (i32) -> i32
      %109 = "equeue.get_comp"(%107) {name = "dma_row"} : (i32) -> i32
      %110 = "equeue.get_comp"(%109) {name = "dma0"} : (i32) -> i32
      %111 = "equeue.get_comp"(%101) {name = "dma4"} : (i32) -> i32
      %112 = "equeue.get_comp"(%101) {name = "dma_col"} : (i32) -> i32
      %113 = "equeue.get_comp"(%112) {name = "dma3"} : (i32) -> i32
      %114 = "equeue.get_comp"(%112) {name = "dma_col"} : (i32) -> i32
      %115 = "equeue.get_comp"(%114) {name = "dma2"} : (i32) -> i32
      %116 = "equeue.get_comp"(%114) {name = "dma_col"} : (i32) -> i32
      %117 = "equeue.get_comp"(%116) {name = "dma1"} : (i32) -> i32
      %118 = "equeue.get_comp"(%116) {name = "dma_col"} : (i32) -> i32
      %119 = "equeue.get_comp"(%118) {name = "dma0"} : (i32) -> i32
      %120 = "equeue.get_comp"(%arg2) {name = "mem"} : (i32) -> i32
      %121 = "equeue.alloc"(%120) {data = "f32", shape = dense<[3, 7, 7]> : tensor<3xi64>} : (i32) -> memref<3x7x7xf32>
      %122 = "equeue.alloc"(%120) {data = "f32", shape = dense<[5, 3, 7, 3]> : tensor<4xi64>} : (i32) -> memref<5x3x7x3xf32>
      %123 = "equeue.alloc"(%120) {data = "f32", shape = dense<[5, 3, 3]> : tensor<3xi64>} : (i32) -> memref<5x3x3xf32>
      %124 = "equeue.get_comp"(%arg2) {name = "pe_4,4"} : (i32) -> i32
      %125 = "equeue.get_comp"(%124) {name = "mem4,4"} : (i32) -> i32
      %126 = "equeue.get_comp"(%124) {name = "proc4,4"} : (i32) -> i32
      %127 = "equeue.alloc"(%125) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %128 = "equeue.alloc"(%125) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %129 = "equeue.alloc"(%125) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %130 = "equeue.get_comp"(%124) {name = "pe_4,3"} : (i32) -> i32
      %131 = "equeue.get_comp"(%130) {name = "mem4,3"} : (i32) -> i32
      %132 = "equeue.get_comp"(%130) {name = "proc4,3"} : (i32) -> i32
      %133 = "equeue.alloc"(%131) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %134 = "equeue.alloc"(%131) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %135 = "equeue.alloc"(%131) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %136 = "equeue.get_comp"(%130) {name = "pe_4,2"} : (i32) -> i32
      %137 = "equeue.get_comp"(%136) {name = "mem4,2"} : (i32) -> i32
      %138 = "equeue.get_comp"(%136) {name = "proc4,2"} : (i32) -> i32
      %139 = "equeue.alloc"(%137) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %140 = "equeue.alloc"(%137) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %141 = "equeue.alloc"(%137) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %142 = "equeue.get_comp"(%136) {name = "pe_4,1"} : (i32) -> i32
      %143 = "equeue.get_comp"(%142) {name = "mem4,1"} : (i32) -> i32
      %144 = "equeue.get_comp"(%142) {name = "proc4,1"} : (i32) -> i32
      %145 = "equeue.alloc"(%143) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %146 = "equeue.alloc"(%143) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %147 = "equeue.alloc"(%143) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %148 = "equeue.get_comp"(%142) {name = "pe_4,0"} : (i32) -> i32
      %149 = "equeue.get_comp"(%148) {name = "mem4,0"} : (i32) -> i32
      %150 = "equeue.get_comp"(%148) {name = "proc4,0"} : (i32) -> i32
      %151 = "equeue.alloc"(%149) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %152 = "equeue.alloc"(%149) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %153 = "equeue.alloc"(%149) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %154 = "equeue.get_comp"(%148) {name = "pe_3,4"} : (i32) -> i32
      %155 = "equeue.get_comp"(%154) {name = "mem3,4"} : (i32) -> i32
      %156 = "equeue.get_comp"(%154) {name = "proc3,4"} : (i32) -> i32
      %157 = "equeue.alloc"(%155) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %158 = "equeue.alloc"(%155) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %159 = "equeue.alloc"(%155) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %160 = "equeue.get_comp"(%154) {name = "pe_3,3"} : (i32) -> i32
      %161 = "equeue.get_comp"(%160) {name = "mem3,3"} : (i32) -> i32
      %162 = "equeue.get_comp"(%160) {name = "proc3,3"} : (i32) -> i32
      %163 = "equeue.alloc"(%161) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %164 = "equeue.alloc"(%161) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %165 = "equeue.alloc"(%161) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %166 = "equeue.get_comp"(%160) {name = "pe_3,2"} : (i32) -> i32
      %167 = "equeue.get_comp"(%166) {name = "mem3,2"} : (i32) -> i32
      %168 = "equeue.get_comp"(%166) {name = "proc3,2"} : (i32) -> i32
      %169 = "equeue.alloc"(%167) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %170 = "equeue.alloc"(%167) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %171 = "equeue.alloc"(%167) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %172 = "equeue.get_comp"(%166) {name = "pe_3,1"} : (i32) -> i32
      %173 = "equeue.get_comp"(%172) {name = "mem3,1"} : (i32) -> i32
      %174 = "equeue.get_comp"(%172) {name = "proc3,1"} : (i32) -> i32
      %175 = "equeue.alloc"(%173) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %176 = "equeue.alloc"(%173) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %177 = "equeue.alloc"(%173) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %178 = "equeue.get_comp"(%172) {name = "pe_3,0"} : (i32) -> i32
      %179 = "equeue.get_comp"(%178) {name = "mem3,0"} : (i32) -> i32
      %180 = "equeue.get_comp"(%178) {name = "proc3,0"} : (i32) -> i32
      %181 = "equeue.alloc"(%179) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %182 = "equeue.alloc"(%179) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %183 = "equeue.alloc"(%179) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %184 = "equeue.get_comp"(%178) {name = "pe_2,4"} : (i32) -> i32
      %185 = "equeue.get_comp"(%184) {name = "mem2,4"} : (i32) -> i32
      %186 = "equeue.get_comp"(%184) {name = "proc2,4"} : (i32) -> i32
      %187 = "equeue.alloc"(%185) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %188 = "equeue.alloc"(%185) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %189 = "equeue.alloc"(%185) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %190 = "equeue.get_comp"(%184) {name = "pe_2,3"} : (i32) -> i32
      %191 = "equeue.get_comp"(%190) {name = "mem2,3"} : (i32) -> i32
      %192 = "equeue.get_comp"(%190) {name = "proc2,3"} : (i32) -> i32
      %193 = "equeue.alloc"(%191) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %194 = "equeue.alloc"(%191) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %195 = "equeue.alloc"(%191) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %196 = "equeue.get_comp"(%190) {name = "pe_2,2"} : (i32) -> i32
      %197 = "equeue.get_comp"(%196) {name = "mem2,2"} : (i32) -> i32
      %198 = "equeue.get_comp"(%196) {name = "proc2,2"} : (i32) -> i32
      %199 = "equeue.alloc"(%197) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %200 = "equeue.alloc"(%197) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %201 = "equeue.alloc"(%197) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %202 = "equeue.get_comp"(%196) {name = "pe_2,1"} : (i32) -> i32
      %203 = "equeue.get_comp"(%202) {name = "mem2,1"} : (i32) -> i32
      %204 = "equeue.get_comp"(%202) {name = "proc2,1"} : (i32) -> i32
      %205 = "equeue.alloc"(%203) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %206 = "equeue.alloc"(%203) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %207 = "equeue.alloc"(%203) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %208 = "equeue.get_comp"(%202) {name = "pe_2,0"} : (i32) -> i32
      %209 = "equeue.get_comp"(%208) {name = "mem2,0"} : (i32) -> i32
      %210 = "equeue.get_comp"(%208) {name = "proc2,0"} : (i32) -> i32
      %211 = "equeue.alloc"(%209) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %212 = "equeue.alloc"(%209) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %213 = "equeue.alloc"(%209) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %214 = "equeue.get_comp"(%208) {name = "pe_1,4"} : (i32) -> i32
      %215 = "equeue.get_comp"(%214) {name = "mem1,4"} : (i32) -> i32
      %216 = "equeue.get_comp"(%214) {name = "proc1,4"} : (i32) -> i32
      %217 = "equeue.alloc"(%215) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %218 = "equeue.alloc"(%215) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %219 = "equeue.alloc"(%215) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %220 = "equeue.get_comp"(%214) {name = "pe_1,3"} : (i32) -> i32
      %221 = "equeue.get_comp"(%220) {name = "mem1,3"} : (i32) -> i32
      %222 = "equeue.get_comp"(%220) {name = "proc1,3"} : (i32) -> i32
      %223 = "equeue.alloc"(%221) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %224 = "equeue.alloc"(%221) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %225 = "equeue.alloc"(%221) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %226 = "equeue.get_comp"(%220) {name = "pe_1,2"} : (i32) -> i32
      %227 = "equeue.get_comp"(%226) {name = "mem1,2"} : (i32) -> i32
      %228 = "equeue.get_comp"(%226) {name = "proc1,2"} : (i32) -> i32
      %229 = "equeue.alloc"(%227) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %230 = "equeue.alloc"(%227) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %231 = "equeue.alloc"(%227) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %232 = "equeue.get_comp"(%226) {name = "pe_1,1"} : (i32) -> i32
      %233 = "equeue.get_comp"(%232) {name = "mem1,1"} : (i32) -> i32
      %234 = "equeue.get_comp"(%232) {name = "proc1,1"} : (i32) -> i32
      %235 = "equeue.alloc"(%233) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %236 = "equeue.alloc"(%233) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %237 = "equeue.alloc"(%233) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %238 = "equeue.get_comp"(%232) {name = "pe_1,0"} : (i32) -> i32
      %239 = "equeue.get_comp"(%238) {name = "mem1,0"} : (i32) -> i32
      %240 = "equeue.get_comp"(%238) {name = "proc1,0"} : (i32) -> i32
      %241 = "equeue.alloc"(%239) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %242 = "equeue.alloc"(%239) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %243 = "equeue.alloc"(%239) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %244 = "equeue.get_comp"(%238) {name = "pe_0,4"} : (i32) -> i32
      %245 = "equeue.get_comp"(%244) {name = "mem0,4"} : (i32) -> i32
      %246 = "equeue.get_comp"(%244) {name = "proc0,4"} : (i32) -> i32
      %247 = "equeue.alloc"(%245) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %248 = "equeue.alloc"(%245) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %249 = "equeue.alloc"(%245) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %250 = "equeue.get_comp"(%244) {name = "pe_0,3"} : (i32) -> i32
      %251 = "equeue.get_comp"(%250) {name = "mem0,3"} : (i32) -> i32
      %252 = "equeue.get_comp"(%250) {name = "proc0,3"} : (i32) -> i32
      %253 = "equeue.alloc"(%251) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %254 = "equeue.alloc"(%251) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %255 = "equeue.alloc"(%251) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %256 = "equeue.get_comp"(%250) {name = "pe_0,2"} : (i32) -> i32
      %257 = "equeue.get_comp"(%256) {name = "mem0,2"} : (i32) -> i32
      %258 = "equeue.get_comp"(%256) {name = "proc0,2"} : (i32) -> i32
      %259 = "equeue.alloc"(%257) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %260 = "equeue.alloc"(%257) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %261 = "equeue.alloc"(%257) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %262 = "equeue.get_comp"(%256) {name = "pe_0,1"} : (i32) -> i32
      %263 = "equeue.get_comp"(%262) {name = "mem0,1"} : (i32) -> i32
      %264 = "equeue.get_comp"(%262) {name = "proc0,1"} : (i32) -> i32
      %265 = "equeue.alloc"(%263) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %266 = "equeue.alloc"(%263) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %267 = "equeue.alloc"(%263) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %268 = "equeue.get_comp"(%262) {name = "pe_0,0"} : (i32) -> i32
      %269 = "equeue.get_comp"(%268) {name = "mem0,0"} : (i32) -> i32
      %270 = "equeue.get_comp"(%268) {name = "proc0,0"} : (i32) -> i32
      %271 = "equeue.alloc"(%269) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %272 = "equeue.alloc"(%269) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %273 = "equeue.alloc"(%269) {data = "f32", shape = dense<1> : tensor<1xi64>} : (i32) -> memref<1xf32>
      %c0 = constant 0 : index
      %274 = "equeue.control_start"() : () -> !equeue.signal
      %275 = "equeue.memcpy"(%274, %122, %127, %111, %c0) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_0 = "equeue.launch"(%275, %126, %127, %157) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1 = "equeue.launch"(%275, %156, %157, %187) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2 = "equeue.launch"(%275, %186, %187, %217) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_3 = "equeue.launch"(%275, %216, %217, %247) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %276 = "equeue.control_and"(%done_3, %275) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %277 = "equeue.memcpy"(%274, %122, %133, %113, %c0) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_4 = "equeue.launch"(%277, %132, %133, %163) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_5 = "equeue.launch"(%277, %162, %163, %193) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_6 = "equeue.launch"(%277, %192, %193, %223) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_7 = "equeue.launch"(%277, %222, %223, %253) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %278 = "equeue.control_and"(%277, %276, %done_7) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %279 = "equeue.memcpy"(%274, %122, %139, %115, %c0) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_8 = "equeue.launch"(%279, %138, %139, %169) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_9 = "equeue.launch"(%279, %168, %169, %199) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_10 = "equeue.launch"(%279, %198, %199, %229) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_11 = "equeue.launch"(%279, %228, %229, %259) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %280 = "equeue.control_and"(%279, %278, %done_11) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %281 = "equeue.memcpy"(%274, %122, %145, %117, %c0) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_12 = "equeue.launch"(%281, %144, %145, %175) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_13 = "equeue.launch"(%281, %174, %175, %205) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_14 = "equeue.launch"(%281, %204, %205, %235) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_15 = "equeue.launch"(%281, %234, %235, %265) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %282 = "equeue.control_and"(%281, %280, %done_15) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %283 = "equeue.memcpy"(%274, %122, %151, %119, %c0) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_16 = "equeue.launch"(%283, %150, %151, %181) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_17 = "equeue.launch"(%283, %180, %181, %211) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_18 = "equeue.launch"(%283, %210, %211, %241) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_19 = "equeue.launch"(%283, %240, %241, %271) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %284 = "equeue.control_and"(%283, %282, %done_19) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%284) : (!equeue.signal) -> ()
      %285 = "equeue.control_start"() : () -> !equeue.signal
      %286 = "equeue.memcpy"(%285, %122, %127, %111, %c0) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_20 = "equeue.launch"(%286, %126, %127, %157) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_21 = "equeue.launch"(%286, %156, %157, %187) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_22 = "equeue.launch"(%286, %186, %187, %217) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_23 = "equeue.launch"(%286, %216, %217, %247) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %287 = "equeue.control_and"(%done_23, %286) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %288 = "equeue.memcpy"(%285, %122, %133, %113, %c0) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_24 = "equeue.launch"(%288, %132, %133, %163) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_25 = "equeue.launch"(%288, %162, %163, %193) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_26 = "equeue.launch"(%288, %192, %193, %223) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_27 = "equeue.launch"(%288, %222, %223, %253) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %289 = "equeue.control_and"(%288, %287, %done_27) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %290 = "equeue.memcpy"(%285, %122, %139, %115, %c0) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_28 = "equeue.launch"(%290, %138, %139, %169) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_29 = "equeue.launch"(%290, %168, %169, %199) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_30 = "equeue.launch"(%290, %198, %199, %229) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_31 = "equeue.launch"(%290, %228, %229, %259) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %291 = "equeue.control_and"(%290, %289, %done_31) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %292 = "equeue.memcpy"(%285, %122, %145, %117, %c0) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_32 = "equeue.launch"(%292, %144, %145, %175) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_33 = "equeue.launch"(%292, %174, %175, %205) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_34 = "equeue.launch"(%292, %204, %205, %235) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_35 = "equeue.launch"(%292, %234, %235, %265) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %293 = "equeue.control_and"(%292, %291, %done_35) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %294 = "equeue.memcpy"(%285, %122, %151, %119, %c0) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_36 = "equeue.launch"(%294, %150, %151, %181) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_37 = "equeue.launch"(%294, %180, %181, %211) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_38 = "equeue.launch"(%294, %210, %211, %241) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_39 = "equeue.launch"(%294, %240, %241, %271) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %295 = "equeue.control_and"(%294, %293, %done_39) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%295) : (!equeue.signal) -> ()
      %296 = "equeue.control_start"() : () -> !equeue.signal
      %297 = "equeue.memcpy"(%296, %122, %127, %111, %c0) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_40 = "equeue.launch"(%297, %126, %127, %157) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_41 = "equeue.launch"(%297, %156, %157, %187) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_42 = "equeue.launch"(%297, %186, %187, %217) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_43 = "equeue.launch"(%297, %216, %217, %247) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %298 = "equeue.control_and"(%done_43, %297) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %299 = "equeue.memcpy"(%296, %122, %133, %113, %c0) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_44 = "equeue.launch"(%299, %132, %133, %163) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_45 = "equeue.launch"(%299, %162, %163, %193) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_46 = "equeue.launch"(%299, %192, %193, %223) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_47 = "equeue.launch"(%299, %222, %223, %253) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %300 = "equeue.control_and"(%299, %298, %done_47) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %301 = "equeue.memcpy"(%296, %122, %139, %115, %c0) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_48 = "equeue.launch"(%301, %138, %139, %169) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_49 = "equeue.launch"(%301, %168, %169, %199) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_50 = "equeue.launch"(%301, %198, %199, %229) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_51 = "equeue.launch"(%301, %228, %229, %259) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %302 = "equeue.control_and"(%301, %300, %done_51) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %303 = "equeue.memcpy"(%296, %122, %145, %117, %c0) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_52 = "equeue.launch"(%303, %144, %145, %175) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_53 = "equeue.launch"(%303, %174, %175, %205) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_54 = "equeue.launch"(%303, %204, %205, %235) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_55 = "equeue.launch"(%303, %234, %235, %265) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %304 = "equeue.control_and"(%303, %302, %done_55) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %305 = "equeue.memcpy"(%296, %122, %151, %119, %c0) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_56 = "equeue.launch"(%305, %150, %151, %181) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_57 = "equeue.launch"(%305, %180, %181, %211) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_58 = "equeue.launch"(%305, %210, %211, %241) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_59 = "equeue.launch"(%305, %240, %241, %271) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %306 = "equeue.control_and"(%305, %304, %done_59) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%306) : (!equeue.signal) -> ()
      %307 = "equeue.control_start"() : () -> !equeue.signal
      %308 = "equeue.memcpy"(%307, %122, %127, %111, %c0) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_60 = "equeue.launch"(%308, %126, %127, %157) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_61 = "equeue.launch"(%308, %156, %157, %187) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_62 = "equeue.launch"(%308, %186, %187, %217) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_63 = "equeue.launch"(%308, %216, %217, %247) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %309 = "equeue.control_and"(%done_63, %308) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %310 = "equeue.memcpy"(%307, %122, %133, %113, %c0) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_64 = "equeue.launch"(%310, %132, %133, %163) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_65 = "equeue.launch"(%310, %162, %163, %193) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_66 = "equeue.launch"(%310, %192, %193, %223) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_67 = "equeue.launch"(%310, %222, %223, %253) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %311 = "equeue.control_and"(%310, %309, %done_67) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %312 = "equeue.memcpy"(%307, %122, %139, %115, %c0) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_68 = "equeue.launch"(%312, %138, %139, %169) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_69 = "equeue.launch"(%312, %168, %169, %199) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_70 = "equeue.launch"(%312, %198, %199, %229) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_71 = "equeue.launch"(%312, %228, %229, %259) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %313 = "equeue.control_and"(%312, %311, %done_71) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %314 = "equeue.memcpy"(%307, %122, %145, %117, %c0) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_72 = "equeue.launch"(%314, %144, %145, %175) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_73 = "equeue.launch"(%314, %174, %175, %205) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_74 = "equeue.launch"(%314, %204, %205, %235) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_75 = "equeue.launch"(%314, %234, %235, %265) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %315 = "equeue.control_and"(%314, %313, %done_75) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %316 = "equeue.memcpy"(%307, %122, %151, %119, %c0) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_76 = "equeue.launch"(%316, %150, %151, %181) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_77 = "equeue.launch"(%316, %180, %181, %211) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_78 = "equeue.launch"(%316, %210, %211, %241) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_79 = "equeue.launch"(%316, %240, %241, %271) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %317 = "equeue.control_and"(%316, %315, %done_79) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%317) : (!equeue.signal) -> ()
      %318 = "equeue.control_start"() : () -> !equeue.signal
      %319 = "equeue.memcpy"(%318, %121, %129, %102) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32) -> !equeue.signal
      %320 = "equeue.memcpy"(%318, %121, %159, %104) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32) -> !equeue.signal
      %321 = "equeue.control_and"(%319, %320) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %322 = "equeue.memcpy"(%318, %121, %189, %106) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32) -> !equeue.signal
      %323 = "equeue.control_and"(%321, %322) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %324 = "equeue.memcpy"(%318, %121, %219, %108) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32) -> !equeue.signal
      %325 = "equeue.control_and"(%323, %324) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %326 = "equeue.memcpy"(%318, %121, %249, %110) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32) -> !equeue.signal
      %327 = "equeue.control_and"(%325, %326) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%327) : (!equeue.signal) -> ()
      %328 = "equeue.control_start"() : () -> !equeue.signal
      %done_80 = "equeue.launch"(%328, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_81 = "equeue.launch"(%328, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %329 = "equeue.control_and"(%done_80, %done_81) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_82 = "equeue.launch"(%328, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %330 = "equeue.control_and"(%329, %done_82) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_83 = "equeue.launch"(%328, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %331 = "equeue.control_and"(%330, %done_83) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_84 = "equeue.launch"(%328, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %332 = "equeue.control_and"(%331, %done_84) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_85 = "equeue.launch"(%328, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %333 = "equeue.control_and"(%332, %done_85) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_86 = "equeue.launch"(%328, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %334 = "equeue.control_and"(%333, %done_86) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_87 = "equeue.launch"(%328, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %335 = "equeue.control_and"(%334, %done_87) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_88 = "equeue.launch"(%328, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %336 = "equeue.control_and"(%335, %done_88) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_89 = "equeue.launch"(%328, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %337 = "equeue.control_and"(%336, %done_89) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_90 = "equeue.launch"(%328, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %338 = "equeue.control_and"(%337, %done_90) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_91 = "equeue.launch"(%328, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %339 = "equeue.control_and"(%338, %done_91) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_92 = "equeue.launch"(%328, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %340 = "equeue.control_and"(%339, %done_92) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_93 = "equeue.launch"(%328, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %341 = "equeue.control_and"(%340, %done_93) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_94 = "equeue.launch"(%328, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %342 = "equeue.control_and"(%341, %done_94) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_95 = "equeue.launch"(%328, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %343 = "equeue.control_and"(%342, %done_95) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_96 = "equeue.launch"(%328, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %344 = "equeue.control_and"(%343, %done_96) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_97 = "equeue.launch"(%328, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %345 = "equeue.control_and"(%344, %done_97) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_98 = "equeue.launch"(%328, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %346 = "equeue.control_and"(%345, %done_98) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_99 = "equeue.launch"(%328, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %347 = "equeue.control_and"(%346, %done_99) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_100 = "equeue.launch"(%328, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %348 = "equeue.control_and"(%347, %done_100) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_101 = "equeue.launch"(%328, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %349 = "equeue.control_and"(%348, %done_101) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_102 = "equeue.launch"(%328, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %350 = "equeue.control_and"(%349, %done_102) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_103 = "equeue.launch"(%328, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %351 = "equeue.control_and"(%350, %done_103) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_104 = "equeue.launch"(%328, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %352 = "equeue.control_and"(%351, %done_104) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%352) : (!equeue.signal) -> ()
      %353 = "equeue.control_start"() : () -> !equeue.signal
      %354 = "equeue.memcpy"(%353, %121, %129, %102, %c0) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      "equeue.await"(%354) : (!equeue.signal) -> ()
      %355 = "equeue.control_start"() : () -> !equeue.signal
      %done_105 = "equeue.launch"(%355, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_106 = "equeue.launch"(%355, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %356 = "equeue.control_and"(%done_105, %done_106) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_107 = "equeue.launch"(%355, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %357 = "equeue.control_and"(%356, %done_107) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_108 = "equeue.launch"(%355, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %358 = "equeue.control_and"(%357, %done_108) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_109 = "equeue.launch"(%355, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %359 = "equeue.control_and"(%358, %done_109) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_110 = "equeue.launch"(%355, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %360 = "equeue.control_and"(%359, %done_110) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_111 = "equeue.launch"(%355, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %361 = "equeue.control_and"(%360, %done_111) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_112 = "equeue.launch"(%355, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %362 = "equeue.control_and"(%361, %done_112) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_113 = "equeue.launch"(%355, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %363 = "equeue.control_and"(%362, %done_113) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_114 = "equeue.launch"(%355, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %364 = "equeue.control_and"(%363, %done_114) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_115 = "equeue.launch"(%355, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %365 = "equeue.control_and"(%364, %done_115) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_116 = "equeue.launch"(%355, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %366 = "equeue.control_and"(%365, %done_116) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_117 = "equeue.launch"(%355, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %367 = "equeue.control_and"(%366, %done_117) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_118 = "equeue.launch"(%355, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %368 = "equeue.control_and"(%367, %done_118) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_119 = "equeue.launch"(%355, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %369 = "equeue.control_and"(%368, %done_119) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_120 = "equeue.launch"(%355, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %370 = "equeue.control_and"(%369, %done_120) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_121 = "equeue.launch"(%355, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %371 = "equeue.control_and"(%370, %done_121) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_122 = "equeue.launch"(%355, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %372 = "equeue.control_and"(%371, %done_122) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_123 = "equeue.launch"(%355, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %373 = "equeue.control_and"(%372, %done_123) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_124 = "equeue.launch"(%355, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %374 = "equeue.control_and"(%373, %done_124) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_125 = "equeue.launch"(%355, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %375 = "equeue.control_and"(%374, %done_125) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_126 = "equeue.launch"(%355, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %376 = "equeue.control_and"(%375, %done_126) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_127 = "equeue.launch"(%355, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %377 = "equeue.control_and"(%376, %done_127) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_128 = "equeue.launch"(%355, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %378 = "equeue.control_and"(%377, %done_128) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_129 = "equeue.launch"(%355, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %379 = "equeue.control_and"(%378, %done_129) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%379) : (!equeue.signal) -> ()
      %380 = "equeue.control_start"() : () -> !equeue.signal
      %381 = "equeue.memcpy"(%380, %121, %129, %102, %c0) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      "equeue.await"(%381) : (!equeue.signal) -> ()
      %382 = "equeue.control_start"() : () -> !equeue.signal
      %done_130 = "equeue.launch"(%382, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_131 = "equeue.launch"(%382, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %383 = "equeue.control_and"(%done_130, %done_131) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_132 = "equeue.launch"(%382, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %384 = "equeue.control_and"(%383, %done_132) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_133 = "equeue.launch"(%382, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %385 = "equeue.control_and"(%384, %done_133) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_134 = "equeue.launch"(%382, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %386 = "equeue.control_and"(%385, %done_134) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_135 = "equeue.launch"(%382, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %387 = "equeue.control_and"(%386, %done_135) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_136 = "equeue.launch"(%382, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %388 = "equeue.control_and"(%387, %done_136) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_137 = "equeue.launch"(%382, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %389 = "equeue.control_and"(%388, %done_137) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_138 = "equeue.launch"(%382, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %390 = "equeue.control_and"(%389, %done_138) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_139 = "equeue.launch"(%382, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %391 = "equeue.control_and"(%390, %done_139) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_140 = "equeue.launch"(%382, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %392 = "equeue.control_and"(%391, %done_140) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_141 = "equeue.launch"(%382, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %393 = "equeue.control_and"(%392, %done_141) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_142 = "equeue.launch"(%382, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %394 = "equeue.control_and"(%393, %done_142) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_143 = "equeue.launch"(%382, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %395 = "equeue.control_and"(%394, %done_143) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_144 = "equeue.launch"(%382, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %396 = "equeue.control_and"(%395, %done_144) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_145 = "equeue.launch"(%382, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %397 = "equeue.control_and"(%396, %done_145) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_146 = "equeue.launch"(%382, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %398 = "equeue.control_and"(%397, %done_146) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_147 = "equeue.launch"(%382, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %399 = "equeue.control_and"(%398, %done_147) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_148 = "equeue.launch"(%382, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %400 = "equeue.control_and"(%399, %done_148) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_149 = "equeue.launch"(%382, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %401 = "equeue.control_and"(%400, %done_149) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_150 = "equeue.launch"(%382, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %402 = "equeue.control_and"(%401, %done_150) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_151 = "equeue.launch"(%382, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %403 = "equeue.control_and"(%402, %done_151) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_152 = "equeue.launch"(%382, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %404 = "equeue.control_and"(%403, %done_152) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_153 = "equeue.launch"(%382, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %405 = "equeue.control_and"(%404, %done_153) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_154 = "equeue.launch"(%382, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %406 = "equeue.control_and"(%405, %done_154) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%406) : (!equeue.signal) -> ()
      %407 = "equeue.control_start"() : () -> !equeue.signal
      %408 = "equeue.memcpy"(%407, %121, %129, %102, %c0) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      "equeue.await"(%408) : (!equeue.signal) -> ()
      %409 = "equeue.control_start"() : () -> !equeue.signal
      %done_155 = "equeue.launch"(%409, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_156 = "equeue.launch"(%409, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %410 = "equeue.control_and"(%done_155, %done_156) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_157 = "equeue.launch"(%409, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %411 = "equeue.control_and"(%410, %done_157) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_158 = "equeue.launch"(%409, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %412 = "equeue.control_and"(%411, %done_158) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_159 = "equeue.launch"(%409, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %413 = "equeue.control_and"(%412, %done_159) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_160 = "equeue.launch"(%409, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %414 = "equeue.control_and"(%413, %done_160) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_161 = "equeue.launch"(%409, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %415 = "equeue.control_and"(%414, %done_161) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_162 = "equeue.launch"(%409, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %416 = "equeue.control_and"(%415, %done_162) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_163 = "equeue.launch"(%409, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %417 = "equeue.control_and"(%416, %done_163) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_164 = "equeue.launch"(%409, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %418 = "equeue.control_and"(%417, %done_164) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_165 = "equeue.launch"(%409, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %419 = "equeue.control_and"(%418, %done_165) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_166 = "equeue.launch"(%409, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %420 = "equeue.control_and"(%419, %done_166) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_167 = "equeue.launch"(%409, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %421 = "equeue.control_and"(%420, %done_167) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_168 = "equeue.launch"(%409, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %422 = "equeue.control_and"(%421, %done_168) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_169 = "equeue.launch"(%409, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %423 = "equeue.control_and"(%422, %done_169) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_170 = "equeue.launch"(%409, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %424 = "equeue.control_and"(%423, %done_170) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_171 = "equeue.launch"(%409, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %425 = "equeue.control_and"(%424, %done_171) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_172 = "equeue.launch"(%409, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %426 = "equeue.control_and"(%425, %done_172) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_173 = "equeue.launch"(%409, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %427 = "equeue.control_and"(%426, %done_173) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_174 = "equeue.launch"(%409, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %428 = "equeue.control_and"(%427, %done_174) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_175 = "equeue.launch"(%409, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %429 = "equeue.control_and"(%428, %done_175) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_176 = "equeue.launch"(%409, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %430 = "equeue.control_and"(%429, %done_176) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_177 = "equeue.launch"(%409, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %431 = "equeue.control_and"(%430, %done_177) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_178 = "equeue.launch"(%409, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %432 = "equeue.control_and"(%431, %done_178) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_179 = "equeue.launch"(%409, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %433 = "equeue.control_and"(%432, %done_179) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%433) : (!equeue.signal) -> ()
      %434 = "equeue.control_start"() : () -> !equeue.signal
      %435 = "equeue.memcpy"(%434, %121, %129, %102, %c0) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      "equeue.await"(%435) : (!equeue.signal) -> ()
      %436 = "equeue.control_start"() : () -> !equeue.signal
      %done_180 = "equeue.launch"(%436, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_181 = "equeue.launch"(%436, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %437 = "equeue.control_and"(%done_180, %done_181) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_182 = "equeue.launch"(%436, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %438 = "equeue.control_and"(%437, %done_182) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_183 = "equeue.launch"(%436, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %439 = "equeue.control_and"(%438, %done_183) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_184 = "equeue.launch"(%436, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %440 = "equeue.control_and"(%439, %done_184) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_185 = "equeue.launch"(%436, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %441 = "equeue.control_and"(%440, %done_185) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_186 = "equeue.launch"(%436, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %442 = "equeue.control_and"(%441, %done_186) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_187 = "equeue.launch"(%436, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %443 = "equeue.control_and"(%442, %done_187) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_188 = "equeue.launch"(%436, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %444 = "equeue.control_and"(%443, %done_188) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_189 = "equeue.launch"(%436, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %445 = "equeue.control_and"(%444, %done_189) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_190 = "equeue.launch"(%436, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %446 = "equeue.control_and"(%445, %done_190) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_191 = "equeue.launch"(%436, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %447 = "equeue.control_and"(%446, %done_191) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_192 = "equeue.launch"(%436, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %448 = "equeue.control_and"(%447, %done_192) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_193 = "equeue.launch"(%436, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %449 = "equeue.control_and"(%448, %done_193) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_194 = "equeue.launch"(%436, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %450 = "equeue.control_and"(%449, %done_194) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_195 = "equeue.launch"(%436, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %451 = "equeue.control_and"(%450, %done_195) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_196 = "equeue.launch"(%436, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %452 = "equeue.control_and"(%451, %done_196) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_197 = "equeue.launch"(%436, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %453 = "equeue.control_and"(%452, %done_197) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_198 = "equeue.launch"(%436, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %454 = "equeue.control_and"(%453, %done_198) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_199 = "equeue.launch"(%436, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %455 = "equeue.control_and"(%454, %done_199) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_200 = "equeue.launch"(%436, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %456 = "equeue.control_and"(%455, %done_200) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_201 = "equeue.launch"(%436, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %457 = "equeue.control_and"(%456, %done_201) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_202 = "equeue.launch"(%436, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %458 = "equeue.control_and"(%457, %done_202) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_203 = "equeue.launch"(%436, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %459 = "equeue.control_and"(%458, %done_203) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_204 = "equeue.launch"(%436, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %460 = "equeue.control_and"(%459, %done_204) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%460) : (!equeue.signal) -> ()
      %461 = "equeue.control_start"() : () -> !equeue.signal
      %462 = "equeue.memcpy"(%461, %121, %129, %102, %c0) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      "equeue.await"(%462) : (!equeue.signal) -> ()
      %463 = "equeue.control_start"() : () -> !equeue.signal
      %done_205 = "equeue.launch"(%463, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_206 = "equeue.launch"(%463, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %464 = "equeue.control_and"(%done_205, %done_206) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_207 = "equeue.launch"(%463, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %465 = "equeue.control_and"(%464, %done_207) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_208 = "equeue.launch"(%463, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %466 = "equeue.control_and"(%465, %done_208) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_209 = "equeue.launch"(%463, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %467 = "equeue.control_and"(%466, %done_209) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_210 = "equeue.launch"(%463, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %468 = "equeue.control_and"(%467, %done_210) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_211 = "equeue.launch"(%463, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %469 = "equeue.control_and"(%468, %done_211) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_212 = "equeue.launch"(%463, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %470 = "equeue.control_and"(%469, %done_212) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_213 = "equeue.launch"(%463, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %471 = "equeue.control_and"(%470, %done_213) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_214 = "equeue.launch"(%463, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %472 = "equeue.control_and"(%471, %done_214) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_215 = "equeue.launch"(%463, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %473 = "equeue.control_and"(%472, %done_215) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_216 = "equeue.launch"(%463, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %474 = "equeue.control_and"(%473, %done_216) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_217 = "equeue.launch"(%463, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %475 = "equeue.control_and"(%474, %done_217) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_218 = "equeue.launch"(%463, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %476 = "equeue.control_and"(%475, %done_218) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_219 = "equeue.launch"(%463, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %477 = "equeue.control_and"(%476, %done_219) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_220 = "equeue.launch"(%463, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %478 = "equeue.control_and"(%477, %done_220) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_221 = "equeue.launch"(%463, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %479 = "equeue.control_and"(%478, %done_221) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_222 = "equeue.launch"(%463, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %480 = "equeue.control_and"(%479, %done_222) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_223 = "equeue.launch"(%463, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %481 = "equeue.control_and"(%480, %done_223) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_224 = "equeue.launch"(%463, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %482 = "equeue.control_and"(%481, %done_224) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_225 = "equeue.launch"(%463, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %483 = "equeue.control_and"(%482, %done_225) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_226 = "equeue.launch"(%463, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %484 = "equeue.control_and"(%483, %done_226) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_227 = "equeue.launch"(%463, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %485 = "equeue.control_and"(%484, %done_227) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_228 = "equeue.launch"(%463, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %486 = "equeue.control_and"(%485, %done_228) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_229 = "equeue.launch"(%463, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %487 = "equeue.control_and"(%486, %done_229) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%487) : (!equeue.signal) -> ()
      %488 = "equeue.control_start"() : () -> !equeue.signal
      %489 = "equeue.memcpy"(%488, %121, %129, %102, %c0) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      "equeue.await"(%489) : (!equeue.signal) -> ()
      %490 = "equeue.control_start"() : () -> !equeue.signal
      %done_230 = "equeue.launch"(%490, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_231 = "equeue.launch"(%490, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %491 = "equeue.control_and"(%done_230, %done_231) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_232 = "equeue.launch"(%490, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %492 = "equeue.control_and"(%491, %done_232) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_233 = "equeue.launch"(%490, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %493 = "equeue.control_and"(%492, %done_233) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_234 = "equeue.launch"(%490, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %494 = "equeue.control_and"(%493, %done_234) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_235 = "equeue.launch"(%490, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %495 = "equeue.control_and"(%494, %done_235) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_236 = "equeue.launch"(%490, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %496 = "equeue.control_and"(%495, %done_236) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_237 = "equeue.launch"(%490, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %497 = "equeue.control_and"(%496, %done_237) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_238 = "equeue.launch"(%490, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %498 = "equeue.control_and"(%497, %done_238) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_239 = "equeue.launch"(%490, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %499 = "equeue.control_and"(%498, %done_239) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_240 = "equeue.launch"(%490, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %500 = "equeue.control_and"(%499, %done_240) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_241 = "equeue.launch"(%490, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %501 = "equeue.control_and"(%500, %done_241) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_242 = "equeue.launch"(%490, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %502 = "equeue.control_and"(%501, %done_242) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_243 = "equeue.launch"(%490, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %503 = "equeue.control_and"(%502, %done_243) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_244 = "equeue.launch"(%490, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %504 = "equeue.control_and"(%503, %done_244) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_245 = "equeue.launch"(%490, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %505 = "equeue.control_and"(%504, %done_245) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_246 = "equeue.launch"(%490, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %506 = "equeue.control_and"(%505, %done_246) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_247 = "equeue.launch"(%490, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %507 = "equeue.control_and"(%506, %done_247) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_248 = "equeue.launch"(%490, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %508 = "equeue.control_and"(%507, %done_248) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_249 = "equeue.launch"(%490, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %509 = "equeue.control_and"(%508, %done_249) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_250 = "equeue.launch"(%490, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %510 = "equeue.control_and"(%509, %done_250) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_251 = "equeue.launch"(%490, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %511 = "equeue.control_and"(%510, %done_251) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_252 = "equeue.launch"(%490, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %512 = "equeue.control_and"(%511, %done_252) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_253 = "equeue.launch"(%490, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %513 = "equeue.control_and"(%512, %done_253) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_254 = "equeue.launch"(%490, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %514 = "equeue.control_and"(%513, %done_254) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%514) : (!equeue.signal) -> ()
      %515 = "equeue.control_start"() : () -> !equeue.signal
      %516 = "equeue.memcpy"(%515, %121, %129, %102, %c0) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      "equeue.await"(%516) : (!equeue.signal) -> ()
      %517 = "equeue.control_start"() : () -> !equeue.signal
      %done_255 = "equeue.launch"(%517, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_256 = "equeue.launch"(%517, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %518 = "equeue.control_and"(%done_255, %done_256) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_257 = "equeue.launch"(%517, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %519 = "equeue.control_and"(%518, %done_257) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_258 = "equeue.launch"(%517, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %520 = "equeue.control_and"(%519, %done_258) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_259 = "equeue.launch"(%517, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %521 = "equeue.control_and"(%520, %done_259) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_260 = "equeue.launch"(%517, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %522 = "equeue.control_and"(%521, %done_260) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_261 = "equeue.launch"(%517, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %523 = "equeue.control_and"(%522, %done_261) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_262 = "equeue.launch"(%517, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %524 = "equeue.control_and"(%523, %done_262) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_263 = "equeue.launch"(%517, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %525 = "equeue.control_and"(%524, %done_263) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_264 = "equeue.launch"(%517, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %526 = "equeue.control_and"(%525, %done_264) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_265 = "equeue.launch"(%517, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %527 = "equeue.control_and"(%526, %done_265) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_266 = "equeue.launch"(%517, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %528 = "equeue.control_and"(%527, %done_266) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_267 = "equeue.launch"(%517, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %529 = "equeue.control_and"(%528, %done_267) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_268 = "equeue.launch"(%517, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %530 = "equeue.control_and"(%529, %done_268) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_269 = "equeue.launch"(%517, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %531 = "equeue.control_and"(%530, %done_269) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_270 = "equeue.launch"(%517, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %532 = "equeue.control_and"(%531, %done_270) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_271 = "equeue.launch"(%517, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %533 = "equeue.control_and"(%532, %done_271) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_272 = "equeue.launch"(%517, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %534 = "equeue.control_and"(%533, %done_272) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_273 = "equeue.launch"(%517, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %535 = "equeue.control_and"(%534, %done_273) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_274 = "equeue.launch"(%517, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %536 = "equeue.control_and"(%535, %done_274) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_275 = "equeue.launch"(%517, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %537 = "equeue.control_and"(%536, %done_275) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_276 = "equeue.launch"(%517, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %538 = "equeue.control_and"(%537, %done_276) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_277 = "equeue.launch"(%517, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %539 = "equeue.control_and"(%538, %done_277) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_278 = "equeue.launch"(%517, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %540 = "equeue.control_and"(%539, %done_278) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_279 = "equeue.launch"(%517, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %541 = "equeue.control_and"(%540, %done_279) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%541) : (!equeue.signal) -> ()
      %542 = "equeue.control_start"() : () -> !equeue.signal
      %543 = "equeue.memcpy"(%542, %121, %129, %102, %c0) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      "equeue.await"(%543) : (!equeue.signal) -> ()
      %544 = "equeue.control_start"() : () -> !equeue.signal
      %done_280 = "equeue.launch"(%544, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_281 = "equeue.launch"(%544, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %545 = "equeue.control_and"(%done_280, %done_281) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_282 = "equeue.launch"(%544, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %546 = "equeue.control_and"(%545, %done_282) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_283 = "equeue.launch"(%544, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %547 = "equeue.control_and"(%546, %done_283) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_284 = "equeue.launch"(%544, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %548 = "equeue.control_and"(%547, %done_284) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_285 = "equeue.launch"(%544, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %549 = "equeue.control_and"(%548, %done_285) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_286 = "equeue.launch"(%544, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %550 = "equeue.control_and"(%549, %done_286) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_287 = "equeue.launch"(%544, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %551 = "equeue.control_and"(%550, %done_287) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_288 = "equeue.launch"(%544, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %552 = "equeue.control_and"(%551, %done_288) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_289 = "equeue.launch"(%544, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %553 = "equeue.control_and"(%552, %done_289) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_290 = "equeue.launch"(%544, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %554 = "equeue.control_and"(%553, %done_290) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_291 = "equeue.launch"(%544, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %555 = "equeue.control_and"(%554, %done_291) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_292 = "equeue.launch"(%544, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %556 = "equeue.control_and"(%555, %done_292) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_293 = "equeue.launch"(%544, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %557 = "equeue.control_and"(%556, %done_293) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_294 = "equeue.launch"(%544, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %558 = "equeue.control_and"(%557, %done_294) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_295 = "equeue.launch"(%544, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %559 = "equeue.control_and"(%558, %done_295) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_296 = "equeue.launch"(%544, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %560 = "equeue.control_and"(%559, %done_296) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_297 = "equeue.launch"(%544, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %561 = "equeue.control_and"(%560, %done_297) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_298 = "equeue.launch"(%544, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %562 = "equeue.control_and"(%561, %done_298) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_299 = "equeue.launch"(%544, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %563 = "equeue.control_and"(%562, %done_299) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_300 = "equeue.launch"(%544, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %564 = "equeue.control_and"(%563, %done_300) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_301 = "equeue.launch"(%544, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %565 = "equeue.control_and"(%564, %done_301) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_302 = "equeue.launch"(%544, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %566 = "equeue.control_and"(%565, %done_302) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_303 = "equeue.launch"(%544, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %567 = "equeue.control_and"(%566, %done_303) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_304 = "equeue.launch"(%544, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %568 = "equeue.control_and"(%567, %done_304) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%568) : (!equeue.signal) -> ()
      %569 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%569) : (!equeue.signal) -> ()
      %570 = "equeue.control_start"() : () -> !equeue.signal
      %done_305 = "equeue.launch"(%570, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_306 = "equeue.launch"(%570, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %571 = "equeue.control_and"(%done_305, %done_306) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_307 = "equeue.launch"(%570, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %572 = "equeue.control_and"(%571, %done_307) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_308 = "equeue.launch"(%570, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %573 = "equeue.control_and"(%572, %done_308) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_309 = "equeue.launch"(%570, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %574 = "equeue.control_and"(%573, %done_309) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_310 = "equeue.launch"(%570, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %575 = "equeue.control_and"(%574, %done_310) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_311 = "equeue.launch"(%570, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %576 = "equeue.control_and"(%575, %done_311) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_312 = "equeue.launch"(%570, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %577 = "equeue.control_and"(%576, %done_312) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_313 = "equeue.launch"(%570, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %578 = "equeue.control_and"(%577, %done_313) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_314 = "equeue.launch"(%570, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %579 = "equeue.control_and"(%578, %done_314) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_315 = "equeue.launch"(%570, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %580 = "equeue.control_and"(%579, %done_315) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_316 = "equeue.launch"(%570, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %581 = "equeue.control_and"(%580, %done_316) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_317 = "equeue.launch"(%570, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %582 = "equeue.control_and"(%581, %done_317) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_318 = "equeue.launch"(%570, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %583 = "equeue.control_and"(%582, %done_318) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_319 = "equeue.launch"(%570, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %584 = "equeue.control_and"(%583, %done_319) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_320 = "equeue.launch"(%570, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %585 = "equeue.control_and"(%584, %done_320) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_321 = "equeue.launch"(%570, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %586 = "equeue.control_and"(%585, %done_321) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_322 = "equeue.launch"(%570, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %587 = "equeue.control_and"(%586, %done_322) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_323 = "equeue.launch"(%570, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %588 = "equeue.control_and"(%587, %done_323) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_324 = "equeue.launch"(%570, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %589 = "equeue.control_and"(%588, %done_324) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_325 = "equeue.launch"(%570, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %590 = "equeue.control_and"(%589, %done_325) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_326 = "equeue.launch"(%570, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %591 = "equeue.control_and"(%590, %done_326) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_327 = "equeue.launch"(%570, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %592 = "equeue.control_and"(%591, %done_327) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_328 = "equeue.launch"(%570, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %593 = "equeue.control_and"(%592, %done_328) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_329 = "equeue.launch"(%570, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %594 = "equeue.control_and"(%593, %done_329) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%594) : (!equeue.signal) -> ()
      %595 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%595) : (!equeue.signal) -> ()
      %596 = "equeue.control_start"() : () -> !equeue.signal
      %done_330 = "equeue.launch"(%596, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_331 = "equeue.launch"(%596, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %597 = "equeue.control_and"(%done_330, %done_331) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_332 = "equeue.launch"(%596, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %598 = "equeue.control_and"(%597, %done_332) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_333 = "equeue.launch"(%596, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %599 = "equeue.control_and"(%598, %done_333) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_334 = "equeue.launch"(%596, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %600 = "equeue.control_and"(%599, %done_334) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_335 = "equeue.launch"(%596, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %601 = "equeue.control_and"(%600, %done_335) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_336 = "equeue.launch"(%596, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %602 = "equeue.control_and"(%601, %done_336) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_337 = "equeue.launch"(%596, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %603 = "equeue.control_and"(%602, %done_337) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_338 = "equeue.launch"(%596, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %604 = "equeue.control_and"(%603, %done_338) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_339 = "equeue.launch"(%596, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %605 = "equeue.control_and"(%604, %done_339) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_340 = "equeue.launch"(%596, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %606 = "equeue.control_and"(%605, %done_340) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_341 = "equeue.launch"(%596, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %607 = "equeue.control_and"(%606, %done_341) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_342 = "equeue.launch"(%596, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %608 = "equeue.control_and"(%607, %done_342) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_343 = "equeue.launch"(%596, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %609 = "equeue.control_and"(%608, %done_343) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_344 = "equeue.launch"(%596, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %610 = "equeue.control_and"(%609, %done_344) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_345 = "equeue.launch"(%596, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %611 = "equeue.control_and"(%610, %done_345) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_346 = "equeue.launch"(%596, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %612 = "equeue.control_and"(%611, %done_346) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_347 = "equeue.launch"(%596, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %613 = "equeue.control_and"(%612, %done_347) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_348 = "equeue.launch"(%596, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %614 = "equeue.control_and"(%613, %done_348) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_349 = "equeue.launch"(%596, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %615 = "equeue.control_and"(%614, %done_349) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_350 = "equeue.launch"(%596, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %616 = "equeue.control_and"(%615, %done_350) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_351 = "equeue.launch"(%596, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %617 = "equeue.control_and"(%616, %done_351) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_352 = "equeue.launch"(%596, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %618 = "equeue.control_and"(%617, %done_352) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_353 = "equeue.launch"(%596, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %619 = "equeue.control_and"(%618, %done_353) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_354 = "equeue.launch"(%596, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %620 = "equeue.control_and"(%619, %done_354) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%620) : (!equeue.signal) -> ()
      %621 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%621) : (!equeue.signal) -> ()
      %622 = "equeue.control_start"() : () -> !equeue.signal
      %done_355 = "equeue.launch"(%622, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_356 = "equeue.launch"(%622, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %623 = "equeue.control_and"(%done_355, %done_356) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_357 = "equeue.launch"(%622, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %624 = "equeue.control_and"(%623, %done_357) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_358 = "equeue.launch"(%622, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %625 = "equeue.control_and"(%624, %done_358) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_359 = "equeue.launch"(%622, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %626 = "equeue.control_and"(%625, %done_359) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_360 = "equeue.launch"(%622, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %627 = "equeue.control_and"(%626, %done_360) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_361 = "equeue.launch"(%622, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %628 = "equeue.control_and"(%627, %done_361) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_362 = "equeue.launch"(%622, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %629 = "equeue.control_and"(%628, %done_362) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_363 = "equeue.launch"(%622, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %630 = "equeue.control_and"(%629, %done_363) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_364 = "equeue.launch"(%622, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %631 = "equeue.control_and"(%630, %done_364) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_365 = "equeue.launch"(%622, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %632 = "equeue.control_and"(%631, %done_365) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_366 = "equeue.launch"(%622, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %633 = "equeue.control_and"(%632, %done_366) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_367 = "equeue.launch"(%622, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %634 = "equeue.control_and"(%633, %done_367) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_368 = "equeue.launch"(%622, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %635 = "equeue.control_and"(%634, %done_368) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_369 = "equeue.launch"(%622, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %636 = "equeue.control_and"(%635, %done_369) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_370 = "equeue.launch"(%622, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %637 = "equeue.control_and"(%636, %done_370) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_371 = "equeue.launch"(%622, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %638 = "equeue.control_and"(%637, %done_371) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_372 = "equeue.launch"(%622, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %639 = "equeue.control_and"(%638, %done_372) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_373 = "equeue.launch"(%622, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %640 = "equeue.control_and"(%639, %done_373) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_374 = "equeue.launch"(%622, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %641 = "equeue.control_and"(%640, %done_374) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_375 = "equeue.launch"(%622, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %642 = "equeue.control_and"(%641, %done_375) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_376 = "equeue.launch"(%622, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %643 = "equeue.control_and"(%642, %done_376) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_377 = "equeue.launch"(%622, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %644 = "equeue.control_and"(%643, %done_377) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_378 = "equeue.launch"(%622, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %645 = "equeue.control_and"(%644, %done_378) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_379 = "equeue.launch"(%622, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %646 = "equeue.control_and"(%645, %done_379) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%646) : (!equeue.signal) -> ()
      %647 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%647) : (!equeue.signal) -> ()
      %648 = "equeue.control_start"() : () -> !equeue.signal
      %done_380 = "equeue.launch"(%648, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_381 = "equeue.launch"(%648, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %649 = "equeue.control_and"(%done_380, %done_381) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_382 = "equeue.launch"(%648, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %650 = "equeue.control_and"(%649, %done_382) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_383 = "equeue.launch"(%648, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %651 = "equeue.control_and"(%650, %done_383) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_384 = "equeue.launch"(%648, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %652 = "equeue.control_and"(%651, %done_384) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_385 = "equeue.launch"(%648, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %653 = "equeue.control_and"(%652, %done_385) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_386 = "equeue.launch"(%648, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %654 = "equeue.control_and"(%653, %done_386) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_387 = "equeue.launch"(%648, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %655 = "equeue.control_and"(%654, %done_387) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_388 = "equeue.launch"(%648, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %656 = "equeue.control_and"(%655, %done_388) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_389 = "equeue.launch"(%648, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %657 = "equeue.control_and"(%656, %done_389) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_390 = "equeue.launch"(%648, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %658 = "equeue.control_and"(%657, %done_390) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_391 = "equeue.launch"(%648, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %659 = "equeue.control_and"(%658, %done_391) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_392 = "equeue.launch"(%648, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %660 = "equeue.control_and"(%659, %done_392) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_393 = "equeue.launch"(%648, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %661 = "equeue.control_and"(%660, %done_393) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_394 = "equeue.launch"(%648, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %662 = "equeue.control_and"(%661, %done_394) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_395 = "equeue.launch"(%648, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %663 = "equeue.control_and"(%662, %done_395) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_396 = "equeue.launch"(%648, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %664 = "equeue.control_and"(%663, %done_396) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_397 = "equeue.launch"(%648, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %665 = "equeue.control_and"(%664, %done_397) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_398 = "equeue.launch"(%648, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %666 = "equeue.control_and"(%665, %done_398) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_399 = "equeue.launch"(%648, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %667 = "equeue.control_and"(%666, %done_399) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_400 = "equeue.launch"(%648, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %668 = "equeue.control_and"(%667, %done_400) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_401 = "equeue.launch"(%648, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %669 = "equeue.control_and"(%668, %done_401) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_402 = "equeue.launch"(%648, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %670 = "equeue.control_and"(%669, %done_402) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_403 = "equeue.launch"(%648, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %671 = "equeue.control_and"(%670, %done_403) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_404 = "equeue.launch"(%648, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %672 = "equeue.control_and"(%671, %done_404) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%672) : (!equeue.signal) -> ()
      %673 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%673) : (!equeue.signal) -> ()
      %674 = "equeue.control_start"() : () -> !equeue.signal
      %done_405 = "equeue.launch"(%674, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_406 = "equeue.launch"(%674, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %675 = "equeue.control_and"(%done_405, %done_406) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_407 = "equeue.launch"(%674, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %676 = "equeue.control_and"(%675, %done_407) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_408 = "equeue.launch"(%674, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %677 = "equeue.control_and"(%676, %done_408) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_409 = "equeue.launch"(%674, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %678 = "equeue.control_and"(%677, %done_409) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_410 = "equeue.launch"(%674, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %679 = "equeue.control_and"(%678, %done_410) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_411 = "equeue.launch"(%674, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %680 = "equeue.control_and"(%679, %done_411) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_412 = "equeue.launch"(%674, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %681 = "equeue.control_and"(%680, %done_412) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_413 = "equeue.launch"(%674, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %682 = "equeue.control_and"(%681, %done_413) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_414 = "equeue.launch"(%674, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %683 = "equeue.control_and"(%682, %done_414) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_415 = "equeue.launch"(%674, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %684 = "equeue.control_and"(%683, %done_415) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_416 = "equeue.launch"(%674, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %685 = "equeue.control_and"(%684, %done_416) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_417 = "equeue.launch"(%674, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %686 = "equeue.control_and"(%685, %done_417) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_418 = "equeue.launch"(%674, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %687 = "equeue.control_and"(%686, %done_418) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_419 = "equeue.launch"(%674, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %688 = "equeue.control_and"(%687, %done_419) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_420 = "equeue.launch"(%674, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %689 = "equeue.control_and"(%688, %done_420) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_421 = "equeue.launch"(%674, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %690 = "equeue.control_and"(%689, %done_421) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_422 = "equeue.launch"(%674, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %691 = "equeue.control_and"(%690, %done_422) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_423 = "equeue.launch"(%674, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %692 = "equeue.control_and"(%691, %done_423) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_424 = "equeue.launch"(%674, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %693 = "equeue.control_and"(%692, %done_424) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_425 = "equeue.launch"(%674, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %694 = "equeue.control_and"(%693, %done_425) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_426 = "equeue.launch"(%674, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %695 = "equeue.control_and"(%694, %done_426) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_427 = "equeue.launch"(%674, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %696 = "equeue.control_and"(%695, %done_427) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_428 = "equeue.launch"(%674, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %697 = "equeue.control_and"(%696, %done_428) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_429 = "equeue.launch"(%674, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %698 = "equeue.control_and"(%697, %done_429) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%698) : (!equeue.signal) -> ()
      %699 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%699) : (!equeue.signal) -> ()
      %700 = "equeue.control_start"() : () -> !equeue.signal
      %done_430 = "equeue.launch"(%700, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_431 = "equeue.launch"(%700, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %701 = "equeue.control_and"(%done_430, %done_431) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_432 = "equeue.launch"(%700, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %702 = "equeue.control_and"(%701, %done_432) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_433 = "equeue.launch"(%700, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %703 = "equeue.control_and"(%702, %done_433) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_434 = "equeue.launch"(%700, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %704 = "equeue.control_and"(%703, %done_434) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_435 = "equeue.launch"(%700, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %705 = "equeue.control_and"(%704, %done_435) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_436 = "equeue.launch"(%700, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %706 = "equeue.control_and"(%705, %done_436) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_437 = "equeue.launch"(%700, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %707 = "equeue.control_and"(%706, %done_437) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_438 = "equeue.launch"(%700, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %708 = "equeue.control_and"(%707, %done_438) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_439 = "equeue.launch"(%700, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %709 = "equeue.control_and"(%708, %done_439) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_440 = "equeue.launch"(%700, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %710 = "equeue.control_and"(%709, %done_440) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_441 = "equeue.launch"(%700, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %711 = "equeue.control_and"(%710, %done_441) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_442 = "equeue.launch"(%700, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %712 = "equeue.control_and"(%711, %done_442) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_443 = "equeue.launch"(%700, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %713 = "equeue.control_and"(%712, %done_443) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_444 = "equeue.launch"(%700, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %714 = "equeue.control_and"(%713, %done_444) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_445 = "equeue.launch"(%700, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %715 = "equeue.control_and"(%714, %done_445) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_446 = "equeue.launch"(%700, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %716 = "equeue.control_and"(%715, %done_446) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_447 = "equeue.launch"(%700, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %717 = "equeue.control_and"(%716, %done_447) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_448 = "equeue.launch"(%700, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %718 = "equeue.control_and"(%717, %done_448) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_449 = "equeue.launch"(%700, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %719 = "equeue.control_and"(%718, %done_449) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_450 = "equeue.launch"(%700, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %720 = "equeue.control_and"(%719, %done_450) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_451 = "equeue.launch"(%700, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %721 = "equeue.control_and"(%720, %done_451) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_452 = "equeue.launch"(%700, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %722 = "equeue.control_and"(%721, %done_452) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_453 = "equeue.launch"(%700, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %723 = "equeue.control_and"(%722, %done_453) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_454 = "equeue.launch"(%700, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %724 = "equeue.control_and"(%723, %done_454) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%724) : (!equeue.signal) -> ()
      %725 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%725) : (!equeue.signal) -> ()
      %726 = "equeue.control_start"() : () -> !equeue.signal
      %done_455 = "equeue.launch"(%726, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_456 = "equeue.launch"(%726, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %727 = "equeue.control_and"(%done_455, %done_456) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_457 = "equeue.launch"(%726, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %728 = "equeue.control_and"(%727, %done_457) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_458 = "equeue.launch"(%726, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %729 = "equeue.control_and"(%728, %done_458) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_459 = "equeue.launch"(%726, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %730 = "equeue.control_and"(%729, %done_459) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_460 = "equeue.launch"(%726, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %731 = "equeue.control_and"(%730, %done_460) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_461 = "equeue.launch"(%726, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %732 = "equeue.control_and"(%731, %done_461) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_462 = "equeue.launch"(%726, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %733 = "equeue.control_and"(%732, %done_462) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_463 = "equeue.launch"(%726, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %734 = "equeue.control_and"(%733, %done_463) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_464 = "equeue.launch"(%726, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %735 = "equeue.control_and"(%734, %done_464) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_465 = "equeue.launch"(%726, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %736 = "equeue.control_and"(%735, %done_465) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_466 = "equeue.launch"(%726, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %737 = "equeue.control_and"(%736, %done_466) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_467 = "equeue.launch"(%726, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %738 = "equeue.control_and"(%737, %done_467) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_468 = "equeue.launch"(%726, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %739 = "equeue.control_and"(%738, %done_468) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_469 = "equeue.launch"(%726, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        %3252 = addf %3251, %3250 : f32
        "equeue.write"(%3252, %arg9) {bank = 2 : i64} : (f32, memref<5x3x3xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %740 = "equeue.control_and"(%739, %done_469) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_470 = "equeue.launch"(%726, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %741 = "equeue.control_and"(%740, %done_470) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_471 = "equeue.launch"(%726, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %742 = "equeue.control_and"(%741, %done_471) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_472 = "equeue.launch"(%726, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %743 = "equeue.control_and"(%742, %done_472) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_473 = "equeue.launch"(%726, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %744 = "equeue.control_and"(%743, %done_473) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_474 = "equeue.launch"(%726, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        %3252 = addf %3251, %3250 : f32
        "equeue.write"(%3252, %arg9) {bank = 3 : i64} : (f32, memref<5x3x3xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %745 = "equeue.control_and"(%744, %done_474) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_475 = "equeue.launch"(%726, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %746 = "equeue.control_and"(%745, %done_475) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_476 = "equeue.launch"(%726, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %747 = "equeue.control_and"(%746, %done_476) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_477 = "equeue.launch"(%726, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %748 = "equeue.control_and"(%747, %done_477) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_478 = "equeue.launch"(%726, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %749 = "equeue.control_and"(%748, %done_478) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_479 = "equeue.launch"(%726, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        %3252 = addf %3251, %3250 : f32
        "equeue.write"(%3252, %arg8) {bank = 4 : i64} : (f32, memref<5x3x3xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %750 = "equeue.control_and"(%749, %done_479) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%750) : (!equeue.signal) -> ()
      %751 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%751) : (!equeue.signal) -> ()
      %752 = "equeue.control_start"() : () -> !equeue.signal
      %done_480 = "equeue.launch"(%752, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_481 = "equeue.launch"(%752, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %753 = "equeue.control_and"(%done_480, %done_481) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_482 = "equeue.launch"(%752, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %754 = "equeue.control_and"(%753, %done_482) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_483 = "equeue.launch"(%752, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %755 = "equeue.control_and"(%754, %done_483) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_484 = "equeue.launch"(%752, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %756 = "equeue.control_and"(%755, %done_484) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_485 = "equeue.launch"(%752, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %757 = "equeue.control_and"(%756, %done_485) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_486 = "equeue.launch"(%752, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %758 = "equeue.control_and"(%757, %done_486) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_487 = "equeue.launch"(%752, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %759 = "equeue.control_and"(%758, %done_487) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_488 = "equeue.launch"(%752, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %760 = "equeue.control_and"(%759, %done_488) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_489 = "equeue.launch"(%752, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %761 = "equeue.control_and"(%760, %done_489) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_490 = "equeue.launch"(%752, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %762 = "equeue.control_and"(%761, %done_490) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_491 = "equeue.launch"(%752, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %763 = "equeue.control_and"(%762, %done_491) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_492 = "equeue.launch"(%752, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %764 = "equeue.control_and"(%763, %done_492) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_493 = "equeue.launch"(%752, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %765 = "equeue.control_and"(%764, %done_493) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_494 = "equeue.launch"(%752, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %766 = "equeue.control_and"(%765, %done_494) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_495 = "equeue.launch"(%752, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %767 = "equeue.control_and"(%766, %done_495) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_496 = "equeue.launch"(%752, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %768 = "equeue.control_and"(%767, %done_496) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_497 = "equeue.launch"(%752, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %769 = "equeue.control_and"(%768, %done_497) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_498 = "equeue.launch"(%752, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %770 = "equeue.control_and"(%769, %done_498) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_499 = "equeue.launch"(%752, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %771 = "equeue.control_and"(%770, %done_499) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_500 = "equeue.launch"(%752, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %772 = "equeue.control_and"(%771, %done_500) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_501 = "equeue.launch"(%752, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %773 = "equeue.control_and"(%772, %done_501) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_502 = "equeue.launch"(%752, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %774 = "equeue.control_and"(%773, %done_502) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_503 = "equeue.launch"(%752, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %775 = "equeue.control_and"(%774, %done_503) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_504 = "equeue.launch"(%752, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %776 = "equeue.control_and"(%775, %done_504) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%776) : (!equeue.signal) -> ()
      %777 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%777) : (!equeue.signal) -> ()
      %778 = "equeue.control_start"() : () -> !equeue.signal
      %done_505 = "equeue.launch"(%778, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_506 = "equeue.launch"(%778, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %779 = "equeue.control_and"(%done_505, %done_506) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_507 = "equeue.launch"(%778, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %780 = "equeue.control_and"(%779, %done_507) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_508 = "equeue.launch"(%778, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %781 = "equeue.control_and"(%780, %done_508) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_509 = "equeue.launch"(%778, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %782 = "equeue.control_and"(%781, %done_509) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_510 = "equeue.launch"(%778, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %783 = "equeue.control_and"(%782, %done_510) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_511 = "equeue.launch"(%778, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %784 = "equeue.control_and"(%783, %done_511) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_512 = "equeue.launch"(%778, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %785 = "equeue.control_and"(%784, %done_512) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_513 = "equeue.launch"(%778, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %786 = "equeue.control_and"(%785, %done_513) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_514 = "equeue.launch"(%778, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %787 = "equeue.control_and"(%786, %done_514) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_515 = "equeue.launch"(%778, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %788 = "equeue.control_and"(%787, %done_515) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_516 = "equeue.launch"(%778, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %789 = "equeue.control_and"(%788, %done_516) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_517 = "equeue.launch"(%778, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %790 = "equeue.control_and"(%789, %done_517) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_518 = "equeue.launch"(%778, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %791 = "equeue.control_and"(%790, %done_518) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_519 = "equeue.launch"(%778, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %792 = "equeue.control_and"(%791, %done_519) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_520 = "equeue.launch"(%778, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %793 = "equeue.control_and"(%792, %done_520) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_521 = "equeue.launch"(%778, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %794 = "equeue.control_and"(%793, %done_521) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_522 = "equeue.launch"(%778, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %795 = "equeue.control_and"(%794, %done_522) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_523 = "equeue.launch"(%778, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %796 = "equeue.control_and"(%795, %done_523) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_524 = "equeue.launch"(%778, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %797 = "equeue.control_and"(%796, %done_524) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_525 = "equeue.launch"(%778, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %798 = "equeue.control_and"(%797, %done_525) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_526 = "equeue.launch"(%778, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %799 = "equeue.control_and"(%798, %done_526) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_527 = "equeue.launch"(%778, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %800 = "equeue.control_and"(%799, %done_527) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_528 = "equeue.launch"(%778, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %801 = "equeue.control_and"(%800, %done_528) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_529 = "equeue.launch"(%778, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %802 = "equeue.control_and"(%801, %done_529) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%802) : (!equeue.signal) -> ()
      %803 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%803) : (!equeue.signal) -> ()
      %804 = "equeue.control_start"() : () -> !equeue.signal
      %done_530 = "equeue.launch"(%804, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_531 = "equeue.launch"(%804, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %805 = "equeue.control_and"(%done_530, %done_531) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_532 = "equeue.launch"(%804, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %806 = "equeue.control_and"(%805, %done_532) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_533 = "equeue.launch"(%804, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %807 = "equeue.control_and"(%806, %done_533) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_534 = "equeue.launch"(%804, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %808 = "equeue.control_and"(%807, %done_534) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_535 = "equeue.launch"(%804, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %809 = "equeue.control_and"(%808, %done_535) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_536 = "equeue.launch"(%804, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %810 = "equeue.control_and"(%809, %done_536) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_537 = "equeue.launch"(%804, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %811 = "equeue.control_and"(%810, %done_537) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_538 = "equeue.launch"(%804, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %812 = "equeue.control_and"(%811, %done_538) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_539 = "equeue.launch"(%804, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %813 = "equeue.control_and"(%812, %done_539) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_540 = "equeue.launch"(%804, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %814 = "equeue.control_and"(%813, %done_540) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_541 = "equeue.launch"(%804, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %815 = "equeue.control_and"(%814, %done_541) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_542 = "equeue.launch"(%804, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %816 = "equeue.control_and"(%815, %done_542) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_543 = "equeue.launch"(%804, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %817 = "equeue.control_and"(%816, %done_543) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_544 = "equeue.launch"(%804, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %818 = "equeue.control_and"(%817, %done_544) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_545 = "equeue.launch"(%804, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %819 = "equeue.control_and"(%818, %done_545) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_546 = "equeue.launch"(%804, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %820 = "equeue.control_and"(%819, %done_546) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_547 = "equeue.launch"(%804, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %821 = "equeue.control_and"(%820, %done_547) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_548 = "equeue.launch"(%804, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %822 = "equeue.control_and"(%821, %done_548) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_549 = "equeue.launch"(%804, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %823 = "equeue.control_and"(%822, %done_549) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_550 = "equeue.launch"(%804, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %824 = "equeue.control_and"(%823, %done_550) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_551 = "equeue.launch"(%804, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %825 = "equeue.control_and"(%824, %done_551) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_552 = "equeue.launch"(%804, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %826 = "equeue.control_and"(%825, %done_552) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_553 = "equeue.launch"(%804, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %827 = "equeue.control_and"(%826, %done_553) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_554 = "equeue.launch"(%804, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %828 = "equeue.control_and"(%827, %done_554) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%828) : (!equeue.signal) -> ()
      %c0_555 = constant 0 : index
      %829 = "equeue.control_start"() : () -> !equeue.signal
      %830 = "equeue.memcpy"(%829, %122, %127, %111, %c0_555) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_556 = "equeue.launch"(%830, %126, %127, %157) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_557 = "equeue.launch"(%830, %156, %157, %187) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_558 = "equeue.launch"(%830, %186, %187, %217) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_559 = "equeue.launch"(%830, %216, %217, %247) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %831 = "equeue.control_and"(%done_559, %830) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %832 = "equeue.memcpy"(%829, %122, %133, %113, %c0_555) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_560 = "equeue.launch"(%832, %132, %133, %163) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_561 = "equeue.launch"(%832, %162, %163, %193) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_562 = "equeue.launch"(%832, %192, %193, %223) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_563 = "equeue.launch"(%832, %222, %223, %253) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %833 = "equeue.control_and"(%832, %831, %done_563) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %834 = "equeue.memcpy"(%829, %122, %139, %115, %c0_555) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_564 = "equeue.launch"(%834, %138, %139, %169) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_565 = "equeue.launch"(%834, %168, %169, %199) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_566 = "equeue.launch"(%834, %198, %199, %229) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_567 = "equeue.launch"(%834, %228, %229, %259) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %835 = "equeue.control_and"(%834, %833, %done_567) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %836 = "equeue.memcpy"(%829, %122, %145, %117, %c0_555) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_568 = "equeue.launch"(%836, %144, %145, %175) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_569 = "equeue.launch"(%836, %174, %175, %205) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_570 = "equeue.launch"(%836, %204, %205, %235) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_571 = "equeue.launch"(%836, %234, %235, %265) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %837 = "equeue.control_and"(%836, %835, %done_571) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %838 = "equeue.memcpy"(%829, %122, %151, %119, %c0_555) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_572 = "equeue.launch"(%838, %150, %151, %181) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_573 = "equeue.launch"(%838, %180, %181, %211) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_574 = "equeue.launch"(%838, %210, %211, %241) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_575 = "equeue.launch"(%838, %240, %241, %271) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %839 = "equeue.control_and"(%838, %837, %done_575) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%839) : (!equeue.signal) -> ()
      %840 = "equeue.control_start"() : () -> !equeue.signal
      %841 = "equeue.memcpy"(%840, %122, %127, %111, %c0_555) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_576 = "equeue.launch"(%841, %126, %127, %157) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_577 = "equeue.launch"(%841, %156, %157, %187) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_578 = "equeue.launch"(%841, %186, %187, %217) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_579 = "equeue.launch"(%841, %216, %217, %247) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %842 = "equeue.control_and"(%done_579, %841) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %843 = "equeue.memcpy"(%840, %122, %133, %113, %c0_555) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_580 = "equeue.launch"(%843, %132, %133, %163) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_581 = "equeue.launch"(%843, %162, %163, %193) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_582 = "equeue.launch"(%843, %192, %193, %223) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_583 = "equeue.launch"(%843, %222, %223, %253) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %844 = "equeue.control_and"(%843, %842, %done_583) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %845 = "equeue.memcpy"(%840, %122, %139, %115, %c0_555) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_584 = "equeue.launch"(%845, %138, %139, %169) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_585 = "equeue.launch"(%845, %168, %169, %199) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_586 = "equeue.launch"(%845, %198, %199, %229) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_587 = "equeue.launch"(%845, %228, %229, %259) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %846 = "equeue.control_and"(%845, %844, %done_587) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %847 = "equeue.memcpy"(%840, %122, %145, %117, %c0_555) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_588 = "equeue.launch"(%847, %144, %145, %175) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_589 = "equeue.launch"(%847, %174, %175, %205) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_590 = "equeue.launch"(%847, %204, %205, %235) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_591 = "equeue.launch"(%847, %234, %235, %265) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %848 = "equeue.control_and"(%847, %846, %done_591) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %849 = "equeue.memcpy"(%840, %122, %151, %119, %c0_555) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_592 = "equeue.launch"(%849, %150, %151, %181) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_593 = "equeue.launch"(%849, %180, %181, %211) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_594 = "equeue.launch"(%849, %210, %211, %241) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_595 = "equeue.launch"(%849, %240, %241, %271) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %850 = "equeue.control_and"(%849, %848, %done_595) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%850) : (!equeue.signal) -> ()
      %851 = "equeue.control_start"() : () -> !equeue.signal
      %852 = "equeue.memcpy"(%851, %122, %127, %111, %c0_555) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_596 = "equeue.launch"(%852, %126, %127, %157) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_597 = "equeue.launch"(%852, %156, %157, %187) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_598 = "equeue.launch"(%852, %186, %187, %217) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_599 = "equeue.launch"(%852, %216, %217, %247) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %853 = "equeue.control_and"(%done_599, %852) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %854 = "equeue.memcpy"(%851, %122, %133, %113, %c0_555) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_600 = "equeue.launch"(%854, %132, %133, %163) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_601 = "equeue.launch"(%854, %162, %163, %193) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_602 = "equeue.launch"(%854, %192, %193, %223) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_603 = "equeue.launch"(%854, %222, %223, %253) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %855 = "equeue.control_and"(%854, %853, %done_603) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %856 = "equeue.memcpy"(%851, %122, %139, %115, %c0_555) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_604 = "equeue.launch"(%856, %138, %139, %169) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_605 = "equeue.launch"(%856, %168, %169, %199) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_606 = "equeue.launch"(%856, %198, %199, %229) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_607 = "equeue.launch"(%856, %228, %229, %259) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %857 = "equeue.control_and"(%856, %855, %done_607) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %858 = "equeue.memcpy"(%851, %122, %145, %117, %c0_555) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_608 = "equeue.launch"(%858, %144, %145, %175) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_609 = "equeue.launch"(%858, %174, %175, %205) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_610 = "equeue.launch"(%858, %204, %205, %235) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_611 = "equeue.launch"(%858, %234, %235, %265) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %859 = "equeue.control_and"(%858, %857, %done_611) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %860 = "equeue.memcpy"(%851, %122, %151, %119, %c0_555) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_612 = "equeue.launch"(%860, %150, %151, %181) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_613 = "equeue.launch"(%860, %180, %181, %211) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_614 = "equeue.launch"(%860, %210, %211, %241) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_615 = "equeue.launch"(%860, %240, %241, %271) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %861 = "equeue.control_and"(%860, %859, %done_615) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%861) : (!equeue.signal) -> ()
      %862 = "equeue.control_start"() : () -> !equeue.signal
      %863 = "equeue.memcpy"(%862, %122, %127, %111, %c0_555) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_616 = "equeue.launch"(%863, %126, %127, %157) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_617 = "equeue.launch"(%863, %156, %157, %187) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_618 = "equeue.launch"(%863, %186, %187, %217) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_619 = "equeue.launch"(%863, %216, %217, %247) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %864 = "equeue.control_and"(%done_619, %863) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %865 = "equeue.memcpy"(%862, %122, %133, %113, %c0_555) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_620 = "equeue.launch"(%865, %132, %133, %163) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_621 = "equeue.launch"(%865, %162, %163, %193) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_622 = "equeue.launch"(%865, %192, %193, %223) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_623 = "equeue.launch"(%865, %222, %223, %253) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %866 = "equeue.control_and"(%865, %864, %done_623) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %867 = "equeue.memcpy"(%862, %122, %139, %115, %c0_555) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_624 = "equeue.launch"(%867, %138, %139, %169) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_625 = "equeue.launch"(%867, %168, %169, %199) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_626 = "equeue.launch"(%867, %198, %199, %229) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_627 = "equeue.launch"(%867, %228, %229, %259) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %868 = "equeue.control_and"(%867, %866, %done_627) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %869 = "equeue.memcpy"(%862, %122, %145, %117, %c0_555) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_628 = "equeue.launch"(%869, %144, %145, %175) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_629 = "equeue.launch"(%869, %174, %175, %205) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_630 = "equeue.launch"(%869, %204, %205, %235) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_631 = "equeue.launch"(%869, %234, %235, %265) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %870 = "equeue.control_and"(%869, %868, %done_631) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %871 = "equeue.memcpy"(%862, %122, %151, %119, %c0_555) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_632 = "equeue.launch"(%871, %150, %151, %181) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_633 = "equeue.launch"(%871, %180, %181, %211) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_634 = "equeue.launch"(%871, %210, %211, %241) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_635 = "equeue.launch"(%871, %240, %241, %271) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %872 = "equeue.control_and"(%871, %870, %done_635) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%872) : (!equeue.signal) -> ()
      %873 = "equeue.control_start"() : () -> !equeue.signal
      %874 = "equeue.memcpy"(%873, %121, %129, %102) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32) -> !equeue.signal
      %875 = "equeue.memcpy"(%873, %121, %159, %104) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32) -> !equeue.signal
      %876 = "equeue.control_and"(%874, %875) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %877 = "equeue.memcpy"(%873, %121, %189, %106) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32) -> !equeue.signal
      %878 = "equeue.control_and"(%876, %877) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %879 = "equeue.memcpy"(%873, %121, %219, %108) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32) -> !equeue.signal
      %880 = "equeue.control_and"(%878, %879) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %881 = "equeue.memcpy"(%873, %121, %249, %110) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32) -> !equeue.signal
      %882 = "equeue.control_and"(%880, %881) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%882) : (!equeue.signal) -> ()
      %883 = "equeue.control_start"() : () -> !equeue.signal
      %done_636 = "equeue.launch"(%883, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_637 = "equeue.launch"(%883, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %884 = "equeue.control_and"(%done_636, %done_637) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_638 = "equeue.launch"(%883, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %885 = "equeue.control_and"(%884, %done_638) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_639 = "equeue.launch"(%883, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %886 = "equeue.control_and"(%885, %done_639) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_640 = "equeue.launch"(%883, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %887 = "equeue.control_and"(%886, %done_640) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_641 = "equeue.launch"(%883, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %888 = "equeue.control_and"(%887, %done_641) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_642 = "equeue.launch"(%883, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %889 = "equeue.control_and"(%888, %done_642) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_643 = "equeue.launch"(%883, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %890 = "equeue.control_and"(%889, %done_643) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_644 = "equeue.launch"(%883, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %891 = "equeue.control_and"(%890, %done_644) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_645 = "equeue.launch"(%883, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %892 = "equeue.control_and"(%891, %done_645) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_646 = "equeue.launch"(%883, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %893 = "equeue.control_and"(%892, %done_646) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_647 = "equeue.launch"(%883, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %894 = "equeue.control_and"(%893, %done_647) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_648 = "equeue.launch"(%883, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %895 = "equeue.control_and"(%894, %done_648) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_649 = "equeue.launch"(%883, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %896 = "equeue.control_and"(%895, %done_649) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_650 = "equeue.launch"(%883, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %897 = "equeue.control_and"(%896, %done_650) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_651 = "equeue.launch"(%883, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %898 = "equeue.control_and"(%897, %done_651) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_652 = "equeue.launch"(%883, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %899 = "equeue.control_and"(%898, %done_652) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_653 = "equeue.launch"(%883, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %900 = "equeue.control_and"(%899, %done_653) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_654 = "equeue.launch"(%883, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %901 = "equeue.control_and"(%900, %done_654) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_655 = "equeue.launch"(%883, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %902 = "equeue.control_and"(%901, %done_655) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_656 = "equeue.launch"(%883, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %903 = "equeue.control_and"(%902, %done_656) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_657 = "equeue.launch"(%883, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %904 = "equeue.control_and"(%903, %done_657) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_658 = "equeue.launch"(%883, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %905 = "equeue.control_and"(%904, %done_658) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_659 = "equeue.launch"(%883, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %906 = "equeue.control_and"(%905, %done_659) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_660 = "equeue.launch"(%883, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %907 = "equeue.control_and"(%906, %done_660) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%907) : (!equeue.signal) -> ()
      %908 = "equeue.control_start"() : () -> !equeue.signal
      %909 = "equeue.memcpy"(%908, %121, %129, %102, %c0_555) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      "equeue.await"(%909) : (!equeue.signal) -> ()
      %910 = "equeue.control_start"() : () -> !equeue.signal
      %done_661 = "equeue.launch"(%910, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_662 = "equeue.launch"(%910, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %911 = "equeue.control_and"(%done_661, %done_662) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_663 = "equeue.launch"(%910, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %912 = "equeue.control_and"(%911, %done_663) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_664 = "equeue.launch"(%910, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %913 = "equeue.control_and"(%912, %done_664) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_665 = "equeue.launch"(%910, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %914 = "equeue.control_and"(%913, %done_665) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_666 = "equeue.launch"(%910, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %915 = "equeue.control_and"(%914, %done_666) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_667 = "equeue.launch"(%910, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %916 = "equeue.control_and"(%915, %done_667) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_668 = "equeue.launch"(%910, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %917 = "equeue.control_and"(%916, %done_668) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_669 = "equeue.launch"(%910, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %918 = "equeue.control_and"(%917, %done_669) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_670 = "equeue.launch"(%910, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %919 = "equeue.control_and"(%918, %done_670) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_671 = "equeue.launch"(%910, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %920 = "equeue.control_and"(%919, %done_671) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_672 = "equeue.launch"(%910, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %921 = "equeue.control_and"(%920, %done_672) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_673 = "equeue.launch"(%910, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %922 = "equeue.control_and"(%921, %done_673) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_674 = "equeue.launch"(%910, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %923 = "equeue.control_and"(%922, %done_674) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_675 = "equeue.launch"(%910, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %924 = "equeue.control_and"(%923, %done_675) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_676 = "equeue.launch"(%910, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %925 = "equeue.control_and"(%924, %done_676) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_677 = "equeue.launch"(%910, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %926 = "equeue.control_and"(%925, %done_677) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_678 = "equeue.launch"(%910, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %927 = "equeue.control_and"(%926, %done_678) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_679 = "equeue.launch"(%910, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %928 = "equeue.control_and"(%927, %done_679) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_680 = "equeue.launch"(%910, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %929 = "equeue.control_and"(%928, %done_680) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_681 = "equeue.launch"(%910, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %930 = "equeue.control_and"(%929, %done_681) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_682 = "equeue.launch"(%910, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %931 = "equeue.control_and"(%930, %done_682) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_683 = "equeue.launch"(%910, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %932 = "equeue.control_and"(%931, %done_683) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_684 = "equeue.launch"(%910, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %933 = "equeue.control_and"(%932, %done_684) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_685 = "equeue.launch"(%910, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %934 = "equeue.control_and"(%933, %done_685) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%934) : (!equeue.signal) -> ()
      %935 = "equeue.control_start"() : () -> !equeue.signal
      %936 = "equeue.memcpy"(%935, %121, %129, %102, %c0_555) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      "equeue.await"(%936) : (!equeue.signal) -> ()
      %937 = "equeue.control_start"() : () -> !equeue.signal
      %done_686 = "equeue.launch"(%937, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_687 = "equeue.launch"(%937, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %938 = "equeue.control_and"(%done_686, %done_687) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_688 = "equeue.launch"(%937, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %939 = "equeue.control_and"(%938, %done_688) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_689 = "equeue.launch"(%937, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %940 = "equeue.control_and"(%939, %done_689) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_690 = "equeue.launch"(%937, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %941 = "equeue.control_and"(%940, %done_690) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_691 = "equeue.launch"(%937, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %942 = "equeue.control_and"(%941, %done_691) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_692 = "equeue.launch"(%937, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %943 = "equeue.control_and"(%942, %done_692) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_693 = "equeue.launch"(%937, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %944 = "equeue.control_and"(%943, %done_693) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_694 = "equeue.launch"(%937, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %945 = "equeue.control_and"(%944, %done_694) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_695 = "equeue.launch"(%937, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %946 = "equeue.control_and"(%945, %done_695) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_696 = "equeue.launch"(%937, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %947 = "equeue.control_and"(%946, %done_696) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_697 = "equeue.launch"(%937, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %948 = "equeue.control_and"(%947, %done_697) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_698 = "equeue.launch"(%937, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %949 = "equeue.control_and"(%948, %done_698) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_699 = "equeue.launch"(%937, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %950 = "equeue.control_and"(%949, %done_699) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_700 = "equeue.launch"(%937, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %951 = "equeue.control_and"(%950, %done_700) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_701 = "equeue.launch"(%937, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %952 = "equeue.control_and"(%951, %done_701) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_702 = "equeue.launch"(%937, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %953 = "equeue.control_and"(%952, %done_702) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_703 = "equeue.launch"(%937, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %954 = "equeue.control_and"(%953, %done_703) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_704 = "equeue.launch"(%937, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %955 = "equeue.control_and"(%954, %done_704) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_705 = "equeue.launch"(%937, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %956 = "equeue.control_and"(%955, %done_705) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_706 = "equeue.launch"(%937, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %957 = "equeue.control_and"(%956, %done_706) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_707 = "equeue.launch"(%937, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %958 = "equeue.control_and"(%957, %done_707) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_708 = "equeue.launch"(%937, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %959 = "equeue.control_and"(%958, %done_708) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_709 = "equeue.launch"(%937, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %960 = "equeue.control_and"(%959, %done_709) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_710 = "equeue.launch"(%937, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %961 = "equeue.control_and"(%960, %done_710) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%961) : (!equeue.signal) -> ()
      %962 = "equeue.control_start"() : () -> !equeue.signal
      %963 = "equeue.memcpy"(%962, %121, %129, %102, %c0_555) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      "equeue.await"(%963) : (!equeue.signal) -> ()
      %964 = "equeue.control_start"() : () -> !equeue.signal
      %done_711 = "equeue.launch"(%964, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_712 = "equeue.launch"(%964, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %965 = "equeue.control_and"(%done_711, %done_712) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_713 = "equeue.launch"(%964, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %966 = "equeue.control_and"(%965, %done_713) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_714 = "equeue.launch"(%964, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %967 = "equeue.control_and"(%966, %done_714) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_715 = "equeue.launch"(%964, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %968 = "equeue.control_and"(%967, %done_715) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_716 = "equeue.launch"(%964, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %969 = "equeue.control_and"(%968, %done_716) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_717 = "equeue.launch"(%964, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %970 = "equeue.control_and"(%969, %done_717) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_718 = "equeue.launch"(%964, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %971 = "equeue.control_and"(%970, %done_718) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_719 = "equeue.launch"(%964, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %972 = "equeue.control_and"(%971, %done_719) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_720 = "equeue.launch"(%964, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %973 = "equeue.control_and"(%972, %done_720) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_721 = "equeue.launch"(%964, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %974 = "equeue.control_and"(%973, %done_721) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_722 = "equeue.launch"(%964, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %975 = "equeue.control_and"(%974, %done_722) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_723 = "equeue.launch"(%964, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %976 = "equeue.control_and"(%975, %done_723) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_724 = "equeue.launch"(%964, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %977 = "equeue.control_and"(%976, %done_724) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_725 = "equeue.launch"(%964, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %978 = "equeue.control_and"(%977, %done_725) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_726 = "equeue.launch"(%964, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %979 = "equeue.control_and"(%978, %done_726) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_727 = "equeue.launch"(%964, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %980 = "equeue.control_and"(%979, %done_727) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_728 = "equeue.launch"(%964, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %981 = "equeue.control_and"(%980, %done_728) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_729 = "equeue.launch"(%964, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %982 = "equeue.control_and"(%981, %done_729) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_730 = "equeue.launch"(%964, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %983 = "equeue.control_and"(%982, %done_730) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_731 = "equeue.launch"(%964, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %984 = "equeue.control_and"(%983, %done_731) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_732 = "equeue.launch"(%964, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %985 = "equeue.control_and"(%984, %done_732) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_733 = "equeue.launch"(%964, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %986 = "equeue.control_and"(%985, %done_733) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_734 = "equeue.launch"(%964, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %987 = "equeue.control_and"(%986, %done_734) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_735 = "equeue.launch"(%964, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %988 = "equeue.control_and"(%987, %done_735) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%988) : (!equeue.signal) -> ()
      %989 = "equeue.control_start"() : () -> !equeue.signal
      %990 = "equeue.memcpy"(%989, %121, %129, %102, %c0_555) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      "equeue.await"(%990) : (!equeue.signal) -> ()
      %991 = "equeue.control_start"() : () -> !equeue.signal
      %done_736 = "equeue.launch"(%991, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_737 = "equeue.launch"(%991, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %992 = "equeue.control_and"(%done_736, %done_737) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_738 = "equeue.launch"(%991, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %993 = "equeue.control_and"(%992, %done_738) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_739 = "equeue.launch"(%991, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %994 = "equeue.control_and"(%993, %done_739) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_740 = "equeue.launch"(%991, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %995 = "equeue.control_and"(%994, %done_740) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_741 = "equeue.launch"(%991, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %996 = "equeue.control_and"(%995, %done_741) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_742 = "equeue.launch"(%991, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %997 = "equeue.control_and"(%996, %done_742) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_743 = "equeue.launch"(%991, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %998 = "equeue.control_and"(%997, %done_743) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_744 = "equeue.launch"(%991, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %999 = "equeue.control_and"(%998, %done_744) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_745 = "equeue.launch"(%991, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1000 = "equeue.control_and"(%999, %done_745) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_746 = "equeue.launch"(%991, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1001 = "equeue.control_and"(%1000, %done_746) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_747 = "equeue.launch"(%991, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1002 = "equeue.control_and"(%1001, %done_747) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_748 = "equeue.launch"(%991, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1003 = "equeue.control_and"(%1002, %done_748) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_749 = "equeue.launch"(%991, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1004 = "equeue.control_and"(%1003, %done_749) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_750 = "equeue.launch"(%991, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1005 = "equeue.control_and"(%1004, %done_750) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_751 = "equeue.launch"(%991, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1006 = "equeue.control_and"(%1005, %done_751) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_752 = "equeue.launch"(%991, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1007 = "equeue.control_and"(%1006, %done_752) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_753 = "equeue.launch"(%991, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1008 = "equeue.control_and"(%1007, %done_753) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_754 = "equeue.launch"(%991, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1009 = "equeue.control_and"(%1008, %done_754) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_755 = "equeue.launch"(%991, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1010 = "equeue.control_and"(%1009, %done_755) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_756 = "equeue.launch"(%991, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1011 = "equeue.control_and"(%1010, %done_756) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_757 = "equeue.launch"(%991, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1012 = "equeue.control_and"(%1011, %done_757) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_758 = "equeue.launch"(%991, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1013 = "equeue.control_and"(%1012, %done_758) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_759 = "equeue.launch"(%991, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1014 = "equeue.control_and"(%1013, %done_759) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_760 = "equeue.launch"(%991, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1015 = "equeue.control_and"(%1014, %done_760) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1015) : (!equeue.signal) -> ()
      %1016 = "equeue.control_start"() : () -> !equeue.signal
      %1017 = "equeue.memcpy"(%1016, %121, %129, %102, %c0_555) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      "equeue.await"(%1017) : (!equeue.signal) -> ()
      %1018 = "equeue.control_start"() : () -> !equeue.signal
      %done_761 = "equeue.launch"(%1018, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_762 = "equeue.launch"(%1018, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1019 = "equeue.control_and"(%done_761, %done_762) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_763 = "equeue.launch"(%1018, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1020 = "equeue.control_and"(%1019, %done_763) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_764 = "equeue.launch"(%1018, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1021 = "equeue.control_and"(%1020, %done_764) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_765 = "equeue.launch"(%1018, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1022 = "equeue.control_and"(%1021, %done_765) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_766 = "equeue.launch"(%1018, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1023 = "equeue.control_and"(%1022, %done_766) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_767 = "equeue.launch"(%1018, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1024 = "equeue.control_and"(%1023, %done_767) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_768 = "equeue.launch"(%1018, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1025 = "equeue.control_and"(%1024, %done_768) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_769 = "equeue.launch"(%1018, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1026 = "equeue.control_and"(%1025, %done_769) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_770 = "equeue.launch"(%1018, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1027 = "equeue.control_and"(%1026, %done_770) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_771 = "equeue.launch"(%1018, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1028 = "equeue.control_and"(%1027, %done_771) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_772 = "equeue.launch"(%1018, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1029 = "equeue.control_and"(%1028, %done_772) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_773 = "equeue.launch"(%1018, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1030 = "equeue.control_and"(%1029, %done_773) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_774 = "equeue.launch"(%1018, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1031 = "equeue.control_and"(%1030, %done_774) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_775 = "equeue.launch"(%1018, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1032 = "equeue.control_and"(%1031, %done_775) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_776 = "equeue.launch"(%1018, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1033 = "equeue.control_and"(%1032, %done_776) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_777 = "equeue.launch"(%1018, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1034 = "equeue.control_and"(%1033, %done_777) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_778 = "equeue.launch"(%1018, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1035 = "equeue.control_and"(%1034, %done_778) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_779 = "equeue.launch"(%1018, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1036 = "equeue.control_and"(%1035, %done_779) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_780 = "equeue.launch"(%1018, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1037 = "equeue.control_and"(%1036, %done_780) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_781 = "equeue.launch"(%1018, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1038 = "equeue.control_and"(%1037, %done_781) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_782 = "equeue.launch"(%1018, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1039 = "equeue.control_and"(%1038, %done_782) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_783 = "equeue.launch"(%1018, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1040 = "equeue.control_and"(%1039, %done_783) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_784 = "equeue.launch"(%1018, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1041 = "equeue.control_and"(%1040, %done_784) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_785 = "equeue.launch"(%1018, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1042 = "equeue.control_and"(%1041, %done_785) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1042) : (!equeue.signal) -> ()
      %1043 = "equeue.control_start"() : () -> !equeue.signal
      %1044 = "equeue.memcpy"(%1043, %121, %129, %102, %c0_555) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      "equeue.await"(%1044) : (!equeue.signal) -> ()
      %1045 = "equeue.control_start"() : () -> !equeue.signal
      %done_786 = "equeue.launch"(%1045, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_787 = "equeue.launch"(%1045, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1046 = "equeue.control_and"(%done_786, %done_787) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_788 = "equeue.launch"(%1045, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1047 = "equeue.control_and"(%1046, %done_788) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_789 = "equeue.launch"(%1045, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1048 = "equeue.control_and"(%1047, %done_789) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_790 = "equeue.launch"(%1045, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1049 = "equeue.control_and"(%1048, %done_790) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_791 = "equeue.launch"(%1045, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1050 = "equeue.control_and"(%1049, %done_791) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_792 = "equeue.launch"(%1045, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1051 = "equeue.control_and"(%1050, %done_792) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_793 = "equeue.launch"(%1045, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1052 = "equeue.control_and"(%1051, %done_793) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_794 = "equeue.launch"(%1045, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1053 = "equeue.control_and"(%1052, %done_794) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_795 = "equeue.launch"(%1045, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1054 = "equeue.control_and"(%1053, %done_795) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_796 = "equeue.launch"(%1045, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1055 = "equeue.control_and"(%1054, %done_796) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_797 = "equeue.launch"(%1045, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1056 = "equeue.control_and"(%1055, %done_797) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_798 = "equeue.launch"(%1045, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1057 = "equeue.control_and"(%1056, %done_798) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_799 = "equeue.launch"(%1045, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1058 = "equeue.control_and"(%1057, %done_799) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_800 = "equeue.launch"(%1045, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1059 = "equeue.control_and"(%1058, %done_800) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_801 = "equeue.launch"(%1045, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1060 = "equeue.control_and"(%1059, %done_801) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_802 = "equeue.launch"(%1045, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1061 = "equeue.control_and"(%1060, %done_802) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_803 = "equeue.launch"(%1045, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1062 = "equeue.control_and"(%1061, %done_803) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_804 = "equeue.launch"(%1045, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1063 = "equeue.control_and"(%1062, %done_804) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_805 = "equeue.launch"(%1045, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1064 = "equeue.control_and"(%1063, %done_805) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_806 = "equeue.launch"(%1045, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1065 = "equeue.control_and"(%1064, %done_806) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_807 = "equeue.launch"(%1045, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1066 = "equeue.control_and"(%1065, %done_807) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_808 = "equeue.launch"(%1045, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1067 = "equeue.control_and"(%1066, %done_808) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_809 = "equeue.launch"(%1045, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1068 = "equeue.control_and"(%1067, %done_809) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_810 = "equeue.launch"(%1045, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1069 = "equeue.control_and"(%1068, %done_810) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1069) : (!equeue.signal) -> ()
      %1070 = "equeue.control_start"() : () -> !equeue.signal
      %1071 = "equeue.memcpy"(%1070, %121, %129, %102, %c0_555) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      "equeue.await"(%1071) : (!equeue.signal) -> ()
      %1072 = "equeue.control_start"() : () -> !equeue.signal
      %done_811 = "equeue.launch"(%1072, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_812 = "equeue.launch"(%1072, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1073 = "equeue.control_and"(%done_811, %done_812) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_813 = "equeue.launch"(%1072, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1074 = "equeue.control_and"(%1073, %done_813) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_814 = "equeue.launch"(%1072, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1075 = "equeue.control_and"(%1074, %done_814) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_815 = "equeue.launch"(%1072, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1076 = "equeue.control_and"(%1075, %done_815) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_816 = "equeue.launch"(%1072, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1077 = "equeue.control_and"(%1076, %done_816) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_817 = "equeue.launch"(%1072, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1078 = "equeue.control_and"(%1077, %done_817) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_818 = "equeue.launch"(%1072, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1079 = "equeue.control_and"(%1078, %done_818) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_819 = "equeue.launch"(%1072, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1080 = "equeue.control_and"(%1079, %done_819) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_820 = "equeue.launch"(%1072, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1081 = "equeue.control_and"(%1080, %done_820) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_821 = "equeue.launch"(%1072, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1082 = "equeue.control_and"(%1081, %done_821) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_822 = "equeue.launch"(%1072, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1083 = "equeue.control_and"(%1082, %done_822) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_823 = "equeue.launch"(%1072, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1084 = "equeue.control_and"(%1083, %done_823) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_824 = "equeue.launch"(%1072, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1085 = "equeue.control_and"(%1084, %done_824) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_825 = "equeue.launch"(%1072, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1086 = "equeue.control_and"(%1085, %done_825) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_826 = "equeue.launch"(%1072, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1087 = "equeue.control_and"(%1086, %done_826) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_827 = "equeue.launch"(%1072, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1088 = "equeue.control_and"(%1087, %done_827) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_828 = "equeue.launch"(%1072, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1089 = "equeue.control_and"(%1088, %done_828) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_829 = "equeue.launch"(%1072, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1090 = "equeue.control_and"(%1089, %done_829) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_830 = "equeue.launch"(%1072, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1091 = "equeue.control_and"(%1090, %done_830) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_831 = "equeue.launch"(%1072, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1092 = "equeue.control_and"(%1091, %done_831) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_832 = "equeue.launch"(%1072, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1093 = "equeue.control_and"(%1092, %done_832) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_833 = "equeue.launch"(%1072, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1094 = "equeue.control_and"(%1093, %done_833) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_834 = "equeue.launch"(%1072, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1095 = "equeue.control_and"(%1094, %done_834) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_835 = "equeue.launch"(%1072, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1096 = "equeue.control_and"(%1095, %done_835) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1096) : (!equeue.signal) -> ()
      %1097 = "equeue.control_start"() : () -> !equeue.signal
      %1098 = "equeue.memcpy"(%1097, %121, %129, %102, %c0_555) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      "equeue.await"(%1098) : (!equeue.signal) -> ()
      %1099 = "equeue.control_start"() : () -> !equeue.signal
      %done_836 = "equeue.launch"(%1099, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_837 = "equeue.launch"(%1099, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1100 = "equeue.control_and"(%done_836, %done_837) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_838 = "equeue.launch"(%1099, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1101 = "equeue.control_and"(%1100, %done_838) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_839 = "equeue.launch"(%1099, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1102 = "equeue.control_and"(%1101, %done_839) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_840 = "equeue.launch"(%1099, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1103 = "equeue.control_and"(%1102, %done_840) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_841 = "equeue.launch"(%1099, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1104 = "equeue.control_and"(%1103, %done_841) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_842 = "equeue.launch"(%1099, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1105 = "equeue.control_and"(%1104, %done_842) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_843 = "equeue.launch"(%1099, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1106 = "equeue.control_and"(%1105, %done_843) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_844 = "equeue.launch"(%1099, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1107 = "equeue.control_and"(%1106, %done_844) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_845 = "equeue.launch"(%1099, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1108 = "equeue.control_and"(%1107, %done_845) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_846 = "equeue.launch"(%1099, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1109 = "equeue.control_and"(%1108, %done_846) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_847 = "equeue.launch"(%1099, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1110 = "equeue.control_and"(%1109, %done_847) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_848 = "equeue.launch"(%1099, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1111 = "equeue.control_and"(%1110, %done_848) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_849 = "equeue.launch"(%1099, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1112 = "equeue.control_and"(%1111, %done_849) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_850 = "equeue.launch"(%1099, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1113 = "equeue.control_and"(%1112, %done_850) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_851 = "equeue.launch"(%1099, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1114 = "equeue.control_and"(%1113, %done_851) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_852 = "equeue.launch"(%1099, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1115 = "equeue.control_and"(%1114, %done_852) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_853 = "equeue.launch"(%1099, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1116 = "equeue.control_and"(%1115, %done_853) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_854 = "equeue.launch"(%1099, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1117 = "equeue.control_and"(%1116, %done_854) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_855 = "equeue.launch"(%1099, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1118 = "equeue.control_and"(%1117, %done_855) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_856 = "equeue.launch"(%1099, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1119 = "equeue.control_and"(%1118, %done_856) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_857 = "equeue.launch"(%1099, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1120 = "equeue.control_and"(%1119, %done_857) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_858 = "equeue.launch"(%1099, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1121 = "equeue.control_and"(%1120, %done_858) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_859 = "equeue.launch"(%1099, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1122 = "equeue.control_and"(%1121, %done_859) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_860 = "equeue.launch"(%1099, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1123 = "equeue.control_and"(%1122, %done_860) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1123) : (!equeue.signal) -> ()
      %1124 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%1124) : (!equeue.signal) -> ()
      %1125 = "equeue.control_start"() : () -> !equeue.signal
      %done_861 = "equeue.launch"(%1125, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_862 = "equeue.launch"(%1125, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1126 = "equeue.control_and"(%done_861, %done_862) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_863 = "equeue.launch"(%1125, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1127 = "equeue.control_and"(%1126, %done_863) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_864 = "equeue.launch"(%1125, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1128 = "equeue.control_and"(%1127, %done_864) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_865 = "equeue.launch"(%1125, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1129 = "equeue.control_and"(%1128, %done_865) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_866 = "equeue.launch"(%1125, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1130 = "equeue.control_and"(%1129, %done_866) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_867 = "equeue.launch"(%1125, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1131 = "equeue.control_and"(%1130, %done_867) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_868 = "equeue.launch"(%1125, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1132 = "equeue.control_and"(%1131, %done_868) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_869 = "equeue.launch"(%1125, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1133 = "equeue.control_and"(%1132, %done_869) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_870 = "equeue.launch"(%1125, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1134 = "equeue.control_and"(%1133, %done_870) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_871 = "equeue.launch"(%1125, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1135 = "equeue.control_and"(%1134, %done_871) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_872 = "equeue.launch"(%1125, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1136 = "equeue.control_and"(%1135, %done_872) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_873 = "equeue.launch"(%1125, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1137 = "equeue.control_and"(%1136, %done_873) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_874 = "equeue.launch"(%1125, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1138 = "equeue.control_and"(%1137, %done_874) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_875 = "equeue.launch"(%1125, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1139 = "equeue.control_and"(%1138, %done_875) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_876 = "equeue.launch"(%1125, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1140 = "equeue.control_and"(%1139, %done_876) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_877 = "equeue.launch"(%1125, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1141 = "equeue.control_and"(%1140, %done_877) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_878 = "equeue.launch"(%1125, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1142 = "equeue.control_and"(%1141, %done_878) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_879 = "equeue.launch"(%1125, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1143 = "equeue.control_and"(%1142, %done_879) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_880 = "equeue.launch"(%1125, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1144 = "equeue.control_and"(%1143, %done_880) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_881 = "equeue.launch"(%1125, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1145 = "equeue.control_and"(%1144, %done_881) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_882 = "equeue.launch"(%1125, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1146 = "equeue.control_and"(%1145, %done_882) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_883 = "equeue.launch"(%1125, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1147 = "equeue.control_and"(%1146, %done_883) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_884 = "equeue.launch"(%1125, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1148 = "equeue.control_and"(%1147, %done_884) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_885 = "equeue.launch"(%1125, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1149 = "equeue.control_and"(%1148, %done_885) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1149) : (!equeue.signal) -> ()
      %1150 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%1150) : (!equeue.signal) -> ()
      %1151 = "equeue.control_start"() : () -> !equeue.signal
      %done_886 = "equeue.launch"(%1151, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_887 = "equeue.launch"(%1151, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1152 = "equeue.control_and"(%done_886, %done_887) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_888 = "equeue.launch"(%1151, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1153 = "equeue.control_and"(%1152, %done_888) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_889 = "equeue.launch"(%1151, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1154 = "equeue.control_and"(%1153, %done_889) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_890 = "equeue.launch"(%1151, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1155 = "equeue.control_and"(%1154, %done_890) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_891 = "equeue.launch"(%1151, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1156 = "equeue.control_and"(%1155, %done_891) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_892 = "equeue.launch"(%1151, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1157 = "equeue.control_and"(%1156, %done_892) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_893 = "equeue.launch"(%1151, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1158 = "equeue.control_and"(%1157, %done_893) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_894 = "equeue.launch"(%1151, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1159 = "equeue.control_and"(%1158, %done_894) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_895 = "equeue.launch"(%1151, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1160 = "equeue.control_and"(%1159, %done_895) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_896 = "equeue.launch"(%1151, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1161 = "equeue.control_and"(%1160, %done_896) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_897 = "equeue.launch"(%1151, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1162 = "equeue.control_and"(%1161, %done_897) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_898 = "equeue.launch"(%1151, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1163 = "equeue.control_and"(%1162, %done_898) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_899 = "equeue.launch"(%1151, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1164 = "equeue.control_and"(%1163, %done_899) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_900 = "equeue.launch"(%1151, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1165 = "equeue.control_and"(%1164, %done_900) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_901 = "equeue.launch"(%1151, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1166 = "equeue.control_and"(%1165, %done_901) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_902 = "equeue.launch"(%1151, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1167 = "equeue.control_and"(%1166, %done_902) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_903 = "equeue.launch"(%1151, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1168 = "equeue.control_and"(%1167, %done_903) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_904 = "equeue.launch"(%1151, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1169 = "equeue.control_and"(%1168, %done_904) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_905 = "equeue.launch"(%1151, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1170 = "equeue.control_and"(%1169, %done_905) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_906 = "equeue.launch"(%1151, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1171 = "equeue.control_and"(%1170, %done_906) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_907 = "equeue.launch"(%1151, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1172 = "equeue.control_and"(%1171, %done_907) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_908 = "equeue.launch"(%1151, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1173 = "equeue.control_and"(%1172, %done_908) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_909 = "equeue.launch"(%1151, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1174 = "equeue.control_and"(%1173, %done_909) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_910 = "equeue.launch"(%1151, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1175 = "equeue.control_and"(%1174, %done_910) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1175) : (!equeue.signal) -> ()
      %1176 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%1176) : (!equeue.signal) -> ()
      %1177 = "equeue.control_start"() : () -> !equeue.signal
      %done_911 = "equeue.launch"(%1177, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_912 = "equeue.launch"(%1177, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1178 = "equeue.control_and"(%done_911, %done_912) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_913 = "equeue.launch"(%1177, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1179 = "equeue.control_and"(%1178, %done_913) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_914 = "equeue.launch"(%1177, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1180 = "equeue.control_and"(%1179, %done_914) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_915 = "equeue.launch"(%1177, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1181 = "equeue.control_and"(%1180, %done_915) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_916 = "equeue.launch"(%1177, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1182 = "equeue.control_and"(%1181, %done_916) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_917 = "equeue.launch"(%1177, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1183 = "equeue.control_and"(%1182, %done_917) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_918 = "equeue.launch"(%1177, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1184 = "equeue.control_and"(%1183, %done_918) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_919 = "equeue.launch"(%1177, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1185 = "equeue.control_and"(%1184, %done_919) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_920 = "equeue.launch"(%1177, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1186 = "equeue.control_and"(%1185, %done_920) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_921 = "equeue.launch"(%1177, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1187 = "equeue.control_and"(%1186, %done_921) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_922 = "equeue.launch"(%1177, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1188 = "equeue.control_and"(%1187, %done_922) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_923 = "equeue.launch"(%1177, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1189 = "equeue.control_and"(%1188, %done_923) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_924 = "equeue.launch"(%1177, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1190 = "equeue.control_and"(%1189, %done_924) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_925 = "equeue.launch"(%1177, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1191 = "equeue.control_and"(%1190, %done_925) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_926 = "equeue.launch"(%1177, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1192 = "equeue.control_and"(%1191, %done_926) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_927 = "equeue.launch"(%1177, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1193 = "equeue.control_and"(%1192, %done_927) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_928 = "equeue.launch"(%1177, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1194 = "equeue.control_and"(%1193, %done_928) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_929 = "equeue.launch"(%1177, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1195 = "equeue.control_and"(%1194, %done_929) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_930 = "equeue.launch"(%1177, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1196 = "equeue.control_and"(%1195, %done_930) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_931 = "equeue.launch"(%1177, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1197 = "equeue.control_and"(%1196, %done_931) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_932 = "equeue.launch"(%1177, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1198 = "equeue.control_and"(%1197, %done_932) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_933 = "equeue.launch"(%1177, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1199 = "equeue.control_and"(%1198, %done_933) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_934 = "equeue.launch"(%1177, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1200 = "equeue.control_and"(%1199, %done_934) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_935 = "equeue.launch"(%1177, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1201 = "equeue.control_and"(%1200, %done_935) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1201) : (!equeue.signal) -> ()
      %1202 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%1202) : (!equeue.signal) -> ()
      %1203 = "equeue.control_start"() : () -> !equeue.signal
      %done_936 = "equeue.launch"(%1203, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_937 = "equeue.launch"(%1203, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1204 = "equeue.control_and"(%done_936, %done_937) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_938 = "equeue.launch"(%1203, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1205 = "equeue.control_and"(%1204, %done_938) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_939 = "equeue.launch"(%1203, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1206 = "equeue.control_and"(%1205, %done_939) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_940 = "equeue.launch"(%1203, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1207 = "equeue.control_and"(%1206, %done_940) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_941 = "equeue.launch"(%1203, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1208 = "equeue.control_and"(%1207, %done_941) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_942 = "equeue.launch"(%1203, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1209 = "equeue.control_and"(%1208, %done_942) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_943 = "equeue.launch"(%1203, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1210 = "equeue.control_and"(%1209, %done_943) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_944 = "equeue.launch"(%1203, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1211 = "equeue.control_and"(%1210, %done_944) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_945 = "equeue.launch"(%1203, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1212 = "equeue.control_and"(%1211, %done_945) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_946 = "equeue.launch"(%1203, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1213 = "equeue.control_and"(%1212, %done_946) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_947 = "equeue.launch"(%1203, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1214 = "equeue.control_and"(%1213, %done_947) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_948 = "equeue.launch"(%1203, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1215 = "equeue.control_and"(%1214, %done_948) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_949 = "equeue.launch"(%1203, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1216 = "equeue.control_and"(%1215, %done_949) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_950 = "equeue.launch"(%1203, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1217 = "equeue.control_and"(%1216, %done_950) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_951 = "equeue.launch"(%1203, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1218 = "equeue.control_and"(%1217, %done_951) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_952 = "equeue.launch"(%1203, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1219 = "equeue.control_and"(%1218, %done_952) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_953 = "equeue.launch"(%1203, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1220 = "equeue.control_and"(%1219, %done_953) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_954 = "equeue.launch"(%1203, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1221 = "equeue.control_and"(%1220, %done_954) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_955 = "equeue.launch"(%1203, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1222 = "equeue.control_and"(%1221, %done_955) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_956 = "equeue.launch"(%1203, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1223 = "equeue.control_and"(%1222, %done_956) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_957 = "equeue.launch"(%1203, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1224 = "equeue.control_and"(%1223, %done_957) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_958 = "equeue.launch"(%1203, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1225 = "equeue.control_and"(%1224, %done_958) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_959 = "equeue.launch"(%1203, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1226 = "equeue.control_and"(%1225, %done_959) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_960 = "equeue.launch"(%1203, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1227 = "equeue.control_and"(%1226, %done_960) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1227) : (!equeue.signal) -> ()
      %1228 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%1228) : (!equeue.signal) -> ()
      %1229 = "equeue.control_start"() : () -> !equeue.signal
      %done_961 = "equeue.launch"(%1229, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_962 = "equeue.launch"(%1229, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1230 = "equeue.control_and"(%done_961, %done_962) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_963 = "equeue.launch"(%1229, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1231 = "equeue.control_and"(%1230, %done_963) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_964 = "equeue.launch"(%1229, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1232 = "equeue.control_and"(%1231, %done_964) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_965 = "equeue.launch"(%1229, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1233 = "equeue.control_and"(%1232, %done_965) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_966 = "equeue.launch"(%1229, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1234 = "equeue.control_and"(%1233, %done_966) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_967 = "equeue.launch"(%1229, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1235 = "equeue.control_and"(%1234, %done_967) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_968 = "equeue.launch"(%1229, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1236 = "equeue.control_and"(%1235, %done_968) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_969 = "equeue.launch"(%1229, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1237 = "equeue.control_and"(%1236, %done_969) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_970 = "equeue.launch"(%1229, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1238 = "equeue.control_and"(%1237, %done_970) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_971 = "equeue.launch"(%1229, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1239 = "equeue.control_and"(%1238, %done_971) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_972 = "equeue.launch"(%1229, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1240 = "equeue.control_and"(%1239, %done_972) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_973 = "equeue.launch"(%1229, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1241 = "equeue.control_and"(%1240, %done_973) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_974 = "equeue.launch"(%1229, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1242 = "equeue.control_and"(%1241, %done_974) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_975 = "equeue.launch"(%1229, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1243 = "equeue.control_and"(%1242, %done_975) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_976 = "equeue.launch"(%1229, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1244 = "equeue.control_and"(%1243, %done_976) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_977 = "equeue.launch"(%1229, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1245 = "equeue.control_and"(%1244, %done_977) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_978 = "equeue.launch"(%1229, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1246 = "equeue.control_and"(%1245, %done_978) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_979 = "equeue.launch"(%1229, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1247 = "equeue.control_and"(%1246, %done_979) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_980 = "equeue.launch"(%1229, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1248 = "equeue.control_and"(%1247, %done_980) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_981 = "equeue.launch"(%1229, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1249 = "equeue.control_and"(%1248, %done_981) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_982 = "equeue.launch"(%1229, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1250 = "equeue.control_and"(%1249, %done_982) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_983 = "equeue.launch"(%1229, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1251 = "equeue.control_and"(%1250, %done_983) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_984 = "equeue.launch"(%1229, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1252 = "equeue.control_and"(%1251, %done_984) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_985 = "equeue.launch"(%1229, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1253 = "equeue.control_and"(%1252, %done_985) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1253) : (!equeue.signal) -> ()
      %1254 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%1254) : (!equeue.signal) -> ()
      %1255 = "equeue.control_start"() : () -> !equeue.signal
      %done_986 = "equeue.launch"(%1255, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_987 = "equeue.launch"(%1255, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1256 = "equeue.control_and"(%done_986, %done_987) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_988 = "equeue.launch"(%1255, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1257 = "equeue.control_and"(%1256, %done_988) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_989 = "equeue.launch"(%1255, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1258 = "equeue.control_and"(%1257, %done_989) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_990 = "equeue.launch"(%1255, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1259 = "equeue.control_and"(%1258, %done_990) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_991 = "equeue.launch"(%1255, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1260 = "equeue.control_and"(%1259, %done_991) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_992 = "equeue.launch"(%1255, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1261 = "equeue.control_and"(%1260, %done_992) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_993 = "equeue.launch"(%1255, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1262 = "equeue.control_and"(%1261, %done_993) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_994 = "equeue.launch"(%1255, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1263 = "equeue.control_and"(%1262, %done_994) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_995 = "equeue.launch"(%1255, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1264 = "equeue.control_and"(%1263, %done_995) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_996 = "equeue.launch"(%1255, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1265 = "equeue.control_and"(%1264, %done_996) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_997 = "equeue.launch"(%1255, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1266 = "equeue.control_and"(%1265, %done_997) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_998 = "equeue.launch"(%1255, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1267 = "equeue.control_and"(%1266, %done_998) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_999 = "equeue.launch"(%1255, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1268 = "equeue.control_and"(%1267, %done_999) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1000 = "equeue.launch"(%1255, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1269 = "equeue.control_and"(%1268, %done_1000) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1001 = "equeue.launch"(%1255, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1270 = "equeue.control_and"(%1269, %done_1001) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1002 = "equeue.launch"(%1255, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1271 = "equeue.control_and"(%1270, %done_1002) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1003 = "equeue.launch"(%1255, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1272 = "equeue.control_and"(%1271, %done_1003) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1004 = "equeue.launch"(%1255, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1273 = "equeue.control_and"(%1272, %done_1004) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1005 = "equeue.launch"(%1255, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1274 = "equeue.control_and"(%1273, %done_1005) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1006 = "equeue.launch"(%1255, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1275 = "equeue.control_and"(%1274, %done_1006) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1007 = "equeue.launch"(%1255, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1276 = "equeue.control_and"(%1275, %done_1007) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1008 = "equeue.launch"(%1255, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1277 = "equeue.control_and"(%1276, %done_1008) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1009 = "equeue.launch"(%1255, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1278 = "equeue.control_and"(%1277, %done_1009) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1010 = "equeue.launch"(%1255, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1279 = "equeue.control_and"(%1278, %done_1010) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1279) : (!equeue.signal) -> ()
      %1280 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%1280) : (!equeue.signal) -> ()
      %1281 = "equeue.control_start"() : () -> !equeue.signal
      %done_1011 = "equeue.launch"(%1281, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1012 = "equeue.launch"(%1281, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1282 = "equeue.control_and"(%done_1011, %done_1012) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1013 = "equeue.launch"(%1281, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1283 = "equeue.control_and"(%1282, %done_1013) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1014 = "equeue.launch"(%1281, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1284 = "equeue.control_and"(%1283, %done_1014) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1015 = "equeue.launch"(%1281, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1285 = "equeue.control_and"(%1284, %done_1015) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1016 = "equeue.launch"(%1281, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1286 = "equeue.control_and"(%1285, %done_1016) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1017 = "equeue.launch"(%1281, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1287 = "equeue.control_and"(%1286, %done_1017) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1018 = "equeue.launch"(%1281, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1288 = "equeue.control_and"(%1287, %done_1018) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1019 = "equeue.launch"(%1281, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1289 = "equeue.control_and"(%1288, %done_1019) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1020 = "equeue.launch"(%1281, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1290 = "equeue.control_and"(%1289, %done_1020) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1021 = "equeue.launch"(%1281, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1291 = "equeue.control_and"(%1290, %done_1021) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1022 = "equeue.launch"(%1281, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1292 = "equeue.control_and"(%1291, %done_1022) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1023 = "equeue.launch"(%1281, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1293 = "equeue.control_and"(%1292, %done_1023) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1024 = "equeue.launch"(%1281, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1294 = "equeue.control_and"(%1293, %done_1024) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1025 = "equeue.launch"(%1281, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        %3252 = addf %3251, %3250 : f32
        "equeue.write"(%3252, %arg9) {bank = 2 : i64} : (f32, memref<5x3x3xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1295 = "equeue.control_and"(%1294, %done_1025) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1026 = "equeue.launch"(%1281, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1296 = "equeue.control_and"(%1295, %done_1026) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1027 = "equeue.launch"(%1281, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1297 = "equeue.control_and"(%1296, %done_1027) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1028 = "equeue.launch"(%1281, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1298 = "equeue.control_and"(%1297, %done_1028) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1029 = "equeue.launch"(%1281, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1299 = "equeue.control_and"(%1298, %done_1029) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1030 = "equeue.launch"(%1281, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        %3252 = addf %3251, %3250 : f32
        "equeue.write"(%3252, %arg9) {bank = 3 : i64} : (f32, memref<5x3x3xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1300 = "equeue.control_and"(%1299, %done_1030) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1031 = "equeue.launch"(%1281, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1301 = "equeue.control_and"(%1300, %done_1031) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1032 = "equeue.launch"(%1281, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1302 = "equeue.control_and"(%1301, %done_1032) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1033 = "equeue.launch"(%1281, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1303 = "equeue.control_and"(%1302, %done_1033) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1034 = "equeue.launch"(%1281, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1304 = "equeue.control_and"(%1303, %done_1034) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1035 = "equeue.launch"(%1281, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        %3252 = addf %3251, %3250 : f32
        "equeue.write"(%3252, %arg8) {bank = 4 : i64} : (f32, memref<5x3x3xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1305 = "equeue.control_and"(%1304, %done_1035) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1305) : (!equeue.signal) -> ()
      %1306 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%1306) : (!equeue.signal) -> ()
      %1307 = "equeue.control_start"() : () -> !equeue.signal
      %done_1036 = "equeue.launch"(%1307, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1037 = "equeue.launch"(%1307, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1308 = "equeue.control_and"(%done_1036, %done_1037) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1038 = "equeue.launch"(%1307, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1309 = "equeue.control_and"(%1308, %done_1038) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1039 = "equeue.launch"(%1307, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1310 = "equeue.control_and"(%1309, %done_1039) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1040 = "equeue.launch"(%1307, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1311 = "equeue.control_and"(%1310, %done_1040) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1041 = "equeue.launch"(%1307, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1312 = "equeue.control_and"(%1311, %done_1041) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1042 = "equeue.launch"(%1307, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1313 = "equeue.control_and"(%1312, %done_1042) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1043 = "equeue.launch"(%1307, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1314 = "equeue.control_and"(%1313, %done_1043) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1044 = "equeue.launch"(%1307, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1315 = "equeue.control_and"(%1314, %done_1044) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1045 = "equeue.launch"(%1307, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1316 = "equeue.control_and"(%1315, %done_1045) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1046 = "equeue.launch"(%1307, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1317 = "equeue.control_and"(%1316, %done_1046) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1047 = "equeue.launch"(%1307, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1318 = "equeue.control_and"(%1317, %done_1047) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1048 = "equeue.launch"(%1307, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1319 = "equeue.control_and"(%1318, %done_1048) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1049 = "equeue.launch"(%1307, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1320 = "equeue.control_and"(%1319, %done_1049) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1050 = "equeue.launch"(%1307, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1321 = "equeue.control_and"(%1320, %done_1050) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1051 = "equeue.launch"(%1307, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1322 = "equeue.control_and"(%1321, %done_1051) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1052 = "equeue.launch"(%1307, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1323 = "equeue.control_and"(%1322, %done_1052) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1053 = "equeue.launch"(%1307, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1324 = "equeue.control_and"(%1323, %done_1053) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1054 = "equeue.launch"(%1307, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1325 = "equeue.control_and"(%1324, %done_1054) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1055 = "equeue.launch"(%1307, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1326 = "equeue.control_and"(%1325, %done_1055) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1056 = "equeue.launch"(%1307, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1327 = "equeue.control_and"(%1326, %done_1056) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1057 = "equeue.launch"(%1307, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1328 = "equeue.control_and"(%1327, %done_1057) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1058 = "equeue.launch"(%1307, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1329 = "equeue.control_and"(%1328, %done_1058) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1059 = "equeue.launch"(%1307, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1330 = "equeue.control_and"(%1329, %done_1059) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1060 = "equeue.launch"(%1307, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1331 = "equeue.control_and"(%1330, %done_1060) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1331) : (!equeue.signal) -> ()
      %1332 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%1332) : (!equeue.signal) -> ()
      %1333 = "equeue.control_start"() : () -> !equeue.signal
      %done_1061 = "equeue.launch"(%1333, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1062 = "equeue.launch"(%1333, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1334 = "equeue.control_and"(%done_1061, %done_1062) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1063 = "equeue.launch"(%1333, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1335 = "equeue.control_and"(%1334, %done_1063) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1064 = "equeue.launch"(%1333, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1336 = "equeue.control_and"(%1335, %done_1064) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1065 = "equeue.launch"(%1333, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1337 = "equeue.control_and"(%1336, %done_1065) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1066 = "equeue.launch"(%1333, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1338 = "equeue.control_and"(%1337, %done_1066) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1067 = "equeue.launch"(%1333, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1339 = "equeue.control_and"(%1338, %done_1067) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1068 = "equeue.launch"(%1333, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1340 = "equeue.control_and"(%1339, %done_1068) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1069 = "equeue.launch"(%1333, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1341 = "equeue.control_and"(%1340, %done_1069) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1070 = "equeue.launch"(%1333, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1342 = "equeue.control_and"(%1341, %done_1070) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1071 = "equeue.launch"(%1333, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1343 = "equeue.control_and"(%1342, %done_1071) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1072 = "equeue.launch"(%1333, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1344 = "equeue.control_and"(%1343, %done_1072) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1073 = "equeue.launch"(%1333, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1345 = "equeue.control_and"(%1344, %done_1073) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1074 = "equeue.launch"(%1333, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1346 = "equeue.control_and"(%1345, %done_1074) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1075 = "equeue.launch"(%1333, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1347 = "equeue.control_and"(%1346, %done_1075) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1076 = "equeue.launch"(%1333, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1348 = "equeue.control_and"(%1347, %done_1076) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1077 = "equeue.launch"(%1333, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1349 = "equeue.control_and"(%1348, %done_1077) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1078 = "equeue.launch"(%1333, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1350 = "equeue.control_and"(%1349, %done_1078) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1079 = "equeue.launch"(%1333, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1351 = "equeue.control_and"(%1350, %done_1079) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1080 = "equeue.launch"(%1333, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1352 = "equeue.control_and"(%1351, %done_1080) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1081 = "equeue.launch"(%1333, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1353 = "equeue.control_and"(%1352, %done_1081) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1082 = "equeue.launch"(%1333, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1354 = "equeue.control_and"(%1353, %done_1082) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1083 = "equeue.launch"(%1333, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1355 = "equeue.control_and"(%1354, %done_1083) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1084 = "equeue.launch"(%1333, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1356 = "equeue.control_and"(%1355, %done_1084) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1085 = "equeue.launch"(%1333, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1357 = "equeue.control_and"(%1356, %done_1085) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1357) : (!equeue.signal) -> ()
      %1358 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%1358) : (!equeue.signal) -> ()
      %1359 = "equeue.control_start"() : () -> !equeue.signal
      %done_1086 = "equeue.launch"(%1359, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1087 = "equeue.launch"(%1359, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1360 = "equeue.control_and"(%done_1086, %done_1087) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1088 = "equeue.launch"(%1359, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1361 = "equeue.control_and"(%1360, %done_1088) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1089 = "equeue.launch"(%1359, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1362 = "equeue.control_and"(%1361, %done_1089) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1090 = "equeue.launch"(%1359, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1363 = "equeue.control_and"(%1362, %done_1090) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1091 = "equeue.launch"(%1359, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1364 = "equeue.control_and"(%1363, %done_1091) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1092 = "equeue.launch"(%1359, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1365 = "equeue.control_and"(%1364, %done_1092) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1093 = "equeue.launch"(%1359, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1366 = "equeue.control_and"(%1365, %done_1093) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1094 = "equeue.launch"(%1359, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1367 = "equeue.control_and"(%1366, %done_1094) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1095 = "equeue.launch"(%1359, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1368 = "equeue.control_and"(%1367, %done_1095) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1096 = "equeue.launch"(%1359, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1369 = "equeue.control_and"(%1368, %done_1096) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1097 = "equeue.launch"(%1359, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1370 = "equeue.control_and"(%1369, %done_1097) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1098 = "equeue.launch"(%1359, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1371 = "equeue.control_and"(%1370, %done_1098) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1099 = "equeue.launch"(%1359, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1372 = "equeue.control_and"(%1371, %done_1099) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1100 = "equeue.launch"(%1359, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1373 = "equeue.control_and"(%1372, %done_1100) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1101 = "equeue.launch"(%1359, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1374 = "equeue.control_and"(%1373, %done_1101) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1102 = "equeue.launch"(%1359, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1375 = "equeue.control_and"(%1374, %done_1102) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1103 = "equeue.launch"(%1359, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1376 = "equeue.control_and"(%1375, %done_1103) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1104 = "equeue.launch"(%1359, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1377 = "equeue.control_and"(%1376, %done_1104) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1105 = "equeue.launch"(%1359, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1378 = "equeue.control_and"(%1377, %done_1105) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1106 = "equeue.launch"(%1359, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1379 = "equeue.control_and"(%1378, %done_1106) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1107 = "equeue.launch"(%1359, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1380 = "equeue.control_and"(%1379, %done_1107) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1108 = "equeue.launch"(%1359, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1381 = "equeue.control_and"(%1380, %done_1108) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1109 = "equeue.launch"(%1359, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1382 = "equeue.control_and"(%1381, %done_1109) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1110 = "equeue.launch"(%1359, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1383 = "equeue.control_and"(%1382, %done_1110) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1383) : (!equeue.signal) -> ()
      %c0_1111 = constant 0 : index
      %1384 = "equeue.control_start"() : () -> !equeue.signal
      %1385 = "equeue.memcpy"(%1384, %122, %127, %111, %c0_1111) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_1112 = "equeue.launch"(%1385, %126, %127, %157) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1113 = "equeue.launch"(%1385, %156, %157, %187) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1114 = "equeue.launch"(%1385, %186, %187, %217) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1115 = "equeue.launch"(%1385, %216, %217, %247) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1386 = "equeue.control_and"(%done_1115, %1385) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1387 = "equeue.memcpy"(%1384, %122, %133, %113, %c0_1111) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_1116 = "equeue.launch"(%1387, %132, %133, %163) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1117 = "equeue.launch"(%1387, %162, %163, %193) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1118 = "equeue.launch"(%1387, %192, %193, %223) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1119 = "equeue.launch"(%1387, %222, %223, %253) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1388 = "equeue.control_and"(%1387, %1386, %done_1119) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %1389 = "equeue.memcpy"(%1384, %122, %139, %115, %c0_1111) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_1120 = "equeue.launch"(%1389, %138, %139, %169) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1121 = "equeue.launch"(%1389, %168, %169, %199) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1122 = "equeue.launch"(%1389, %198, %199, %229) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1123 = "equeue.launch"(%1389, %228, %229, %259) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1390 = "equeue.control_and"(%1389, %1388, %done_1123) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %1391 = "equeue.memcpy"(%1384, %122, %145, %117, %c0_1111) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_1124 = "equeue.launch"(%1391, %144, %145, %175) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1125 = "equeue.launch"(%1391, %174, %175, %205) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1126 = "equeue.launch"(%1391, %204, %205, %235) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1127 = "equeue.launch"(%1391, %234, %235, %265) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1392 = "equeue.control_and"(%1391, %1390, %done_1127) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %1393 = "equeue.memcpy"(%1384, %122, %151, %119, %c0_1111) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_1128 = "equeue.launch"(%1393, %150, %151, %181) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1129 = "equeue.launch"(%1393, %180, %181, %211) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1130 = "equeue.launch"(%1393, %210, %211, %241) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1131 = "equeue.launch"(%1393, %240, %241, %271) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1394 = "equeue.control_and"(%1393, %1392, %done_1131) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1394) : (!equeue.signal) -> ()
      %1395 = "equeue.control_start"() : () -> !equeue.signal
      %1396 = "equeue.memcpy"(%1395, %122, %127, %111, %c0_1111) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_1132 = "equeue.launch"(%1396, %126, %127, %157) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1133 = "equeue.launch"(%1396, %156, %157, %187) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1134 = "equeue.launch"(%1396, %186, %187, %217) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1135 = "equeue.launch"(%1396, %216, %217, %247) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1397 = "equeue.control_and"(%done_1135, %1396) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1398 = "equeue.memcpy"(%1395, %122, %133, %113, %c0_1111) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_1136 = "equeue.launch"(%1398, %132, %133, %163) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1137 = "equeue.launch"(%1398, %162, %163, %193) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1138 = "equeue.launch"(%1398, %192, %193, %223) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1139 = "equeue.launch"(%1398, %222, %223, %253) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1399 = "equeue.control_and"(%1398, %1397, %done_1139) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %1400 = "equeue.memcpy"(%1395, %122, %139, %115, %c0_1111) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_1140 = "equeue.launch"(%1400, %138, %139, %169) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1141 = "equeue.launch"(%1400, %168, %169, %199) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1142 = "equeue.launch"(%1400, %198, %199, %229) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1143 = "equeue.launch"(%1400, %228, %229, %259) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1401 = "equeue.control_and"(%1400, %1399, %done_1143) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %1402 = "equeue.memcpy"(%1395, %122, %145, %117, %c0_1111) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_1144 = "equeue.launch"(%1402, %144, %145, %175) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1145 = "equeue.launch"(%1402, %174, %175, %205) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1146 = "equeue.launch"(%1402, %204, %205, %235) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1147 = "equeue.launch"(%1402, %234, %235, %265) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1403 = "equeue.control_and"(%1402, %1401, %done_1147) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %1404 = "equeue.memcpy"(%1395, %122, %151, %119, %c0_1111) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_1148 = "equeue.launch"(%1404, %150, %151, %181) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1149 = "equeue.launch"(%1404, %180, %181, %211) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1150 = "equeue.launch"(%1404, %210, %211, %241) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1151 = "equeue.launch"(%1404, %240, %241, %271) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1405 = "equeue.control_and"(%1404, %1403, %done_1151) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1405) : (!equeue.signal) -> ()
      %1406 = "equeue.control_start"() : () -> !equeue.signal
      %1407 = "equeue.memcpy"(%1406, %122, %127, %111, %c0_1111) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_1152 = "equeue.launch"(%1407, %126, %127, %157) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1153 = "equeue.launch"(%1407, %156, %157, %187) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1154 = "equeue.launch"(%1407, %186, %187, %217) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1155 = "equeue.launch"(%1407, %216, %217, %247) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1408 = "equeue.control_and"(%done_1155, %1407) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1409 = "equeue.memcpy"(%1406, %122, %133, %113, %c0_1111) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_1156 = "equeue.launch"(%1409, %132, %133, %163) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1157 = "equeue.launch"(%1409, %162, %163, %193) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1158 = "equeue.launch"(%1409, %192, %193, %223) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1159 = "equeue.launch"(%1409, %222, %223, %253) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1410 = "equeue.control_and"(%1409, %1408, %done_1159) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %1411 = "equeue.memcpy"(%1406, %122, %139, %115, %c0_1111) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_1160 = "equeue.launch"(%1411, %138, %139, %169) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1161 = "equeue.launch"(%1411, %168, %169, %199) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1162 = "equeue.launch"(%1411, %198, %199, %229) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1163 = "equeue.launch"(%1411, %228, %229, %259) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1412 = "equeue.control_and"(%1411, %1410, %done_1163) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %1413 = "equeue.memcpy"(%1406, %122, %145, %117, %c0_1111) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_1164 = "equeue.launch"(%1413, %144, %145, %175) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1165 = "equeue.launch"(%1413, %174, %175, %205) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1166 = "equeue.launch"(%1413, %204, %205, %235) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1167 = "equeue.launch"(%1413, %234, %235, %265) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1414 = "equeue.control_and"(%1413, %1412, %done_1167) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %1415 = "equeue.memcpy"(%1406, %122, %151, %119, %c0_1111) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_1168 = "equeue.launch"(%1415, %150, %151, %181) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1169 = "equeue.launch"(%1415, %180, %181, %211) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1170 = "equeue.launch"(%1415, %210, %211, %241) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1171 = "equeue.launch"(%1415, %240, %241, %271) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1416 = "equeue.control_and"(%1415, %1414, %done_1171) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1416) : (!equeue.signal) -> ()
      %1417 = "equeue.control_start"() : () -> !equeue.signal
      %1418 = "equeue.memcpy"(%1417, %122, %127, %111, %c0_1111) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_1172 = "equeue.launch"(%1418, %126, %127, %157) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1173 = "equeue.launch"(%1418, %156, %157, %187) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1174 = "equeue.launch"(%1418, %186, %187, %217) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1175 = "equeue.launch"(%1418, %216, %217, %247) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1419 = "equeue.control_and"(%done_1175, %1418) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1420 = "equeue.memcpy"(%1417, %122, %133, %113, %c0_1111) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_1176 = "equeue.launch"(%1420, %132, %133, %163) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1177 = "equeue.launch"(%1420, %162, %163, %193) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1178 = "equeue.launch"(%1420, %192, %193, %223) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1179 = "equeue.launch"(%1420, %222, %223, %253) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1421 = "equeue.control_and"(%1420, %1419, %done_1179) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %1422 = "equeue.memcpy"(%1417, %122, %139, %115, %c0_1111) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_1180 = "equeue.launch"(%1422, %138, %139, %169) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1181 = "equeue.launch"(%1422, %168, %169, %199) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1182 = "equeue.launch"(%1422, %198, %199, %229) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1183 = "equeue.launch"(%1422, %228, %229, %259) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1423 = "equeue.control_and"(%1422, %1421, %done_1183) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %1424 = "equeue.memcpy"(%1417, %122, %145, %117, %c0_1111) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_1184 = "equeue.launch"(%1424, %144, %145, %175) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1185 = "equeue.launch"(%1424, %174, %175, %205) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1186 = "equeue.launch"(%1424, %204, %205, %235) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1187 = "equeue.launch"(%1424, %234, %235, %265) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1425 = "equeue.control_and"(%1424, %1423, %done_1187) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %1426 = "equeue.memcpy"(%1417, %122, %151, %119, %c0_1111) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_1188 = "equeue.launch"(%1426, %150, %151, %181) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1189 = "equeue.launch"(%1426, %180, %181, %211) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1190 = "equeue.launch"(%1426, %210, %211, %241) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1191 = "equeue.launch"(%1426, %240, %241, %271) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1427 = "equeue.control_and"(%1426, %1425, %done_1191) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1427) : (!equeue.signal) -> ()
      %1428 = "equeue.control_start"() : () -> !equeue.signal
      %1429 = "equeue.memcpy"(%1428, %121, %129, %102) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32) -> !equeue.signal
      %1430 = "equeue.memcpy"(%1428, %121, %159, %104) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32) -> !equeue.signal
      %1431 = "equeue.control_and"(%1429, %1430) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1432 = "equeue.memcpy"(%1428, %121, %189, %106) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32) -> !equeue.signal
      %1433 = "equeue.control_and"(%1431, %1432) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1434 = "equeue.memcpy"(%1428, %121, %219, %108) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32) -> !equeue.signal
      %1435 = "equeue.control_and"(%1433, %1434) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1436 = "equeue.memcpy"(%1428, %121, %249, %110) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32) -> !equeue.signal
      %1437 = "equeue.control_and"(%1435, %1436) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1437) : (!equeue.signal) -> ()
      %1438 = "equeue.control_start"() : () -> !equeue.signal
      %done_1192 = "equeue.launch"(%1438, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1193 = "equeue.launch"(%1438, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1439 = "equeue.control_and"(%done_1192, %done_1193) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1194 = "equeue.launch"(%1438, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1440 = "equeue.control_and"(%1439, %done_1194) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1195 = "equeue.launch"(%1438, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1441 = "equeue.control_and"(%1440, %done_1195) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1196 = "equeue.launch"(%1438, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1442 = "equeue.control_and"(%1441, %done_1196) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1197 = "equeue.launch"(%1438, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1443 = "equeue.control_and"(%1442, %done_1197) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1198 = "equeue.launch"(%1438, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1444 = "equeue.control_and"(%1443, %done_1198) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1199 = "equeue.launch"(%1438, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1445 = "equeue.control_and"(%1444, %done_1199) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1200 = "equeue.launch"(%1438, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1446 = "equeue.control_and"(%1445, %done_1200) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1201 = "equeue.launch"(%1438, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1447 = "equeue.control_and"(%1446, %done_1201) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1202 = "equeue.launch"(%1438, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1448 = "equeue.control_and"(%1447, %done_1202) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1203 = "equeue.launch"(%1438, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1449 = "equeue.control_and"(%1448, %done_1203) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1204 = "equeue.launch"(%1438, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1450 = "equeue.control_and"(%1449, %done_1204) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1205 = "equeue.launch"(%1438, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1451 = "equeue.control_and"(%1450, %done_1205) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1206 = "equeue.launch"(%1438, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1452 = "equeue.control_and"(%1451, %done_1206) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1207 = "equeue.launch"(%1438, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1453 = "equeue.control_and"(%1452, %done_1207) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1208 = "equeue.launch"(%1438, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1454 = "equeue.control_and"(%1453, %done_1208) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1209 = "equeue.launch"(%1438, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1455 = "equeue.control_and"(%1454, %done_1209) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1210 = "equeue.launch"(%1438, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1456 = "equeue.control_and"(%1455, %done_1210) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1211 = "equeue.launch"(%1438, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1457 = "equeue.control_and"(%1456, %done_1211) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1212 = "equeue.launch"(%1438, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1458 = "equeue.control_and"(%1457, %done_1212) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1213 = "equeue.launch"(%1438, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1459 = "equeue.control_and"(%1458, %done_1213) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1214 = "equeue.launch"(%1438, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1460 = "equeue.control_and"(%1459, %done_1214) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1215 = "equeue.launch"(%1438, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1461 = "equeue.control_and"(%1460, %done_1215) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1216 = "equeue.launch"(%1438, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1462 = "equeue.control_and"(%1461, %done_1216) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1462) : (!equeue.signal) -> ()
      %1463 = "equeue.control_start"() : () -> !equeue.signal
      %1464 = "equeue.memcpy"(%1463, %121, %129, %102, %c0_1111) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      "equeue.await"(%1464) : (!equeue.signal) -> ()
      %1465 = "equeue.control_start"() : () -> !equeue.signal
      %done_1217 = "equeue.launch"(%1465, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1218 = "equeue.launch"(%1465, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1466 = "equeue.control_and"(%done_1217, %done_1218) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1219 = "equeue.launch"(%1465, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1467 = "equeue.control_and"(%1466, %done_1219) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1220 = "equeue.launch"(%1465, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1468 = "equeue.control_and"(%1467, %done_1220) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1221 = "equeue.launch"(%1465, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1469 = "equeue.control_and"(%1468, %done_1221) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1222 = "equeue.launch"(%1465, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1470 = "equeue.control_and"(%1469, %done_1222) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1223 = "equeue.launch"(%1465, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1471 = "equeue.control_and"(%1470, %done_1223) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1224 = "equeue.launch"(%1465, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1472 = "equeue.control_and"(%1471, %done_1224) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1225 = "equeue.launch"(%1465, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1473 = "equeue.control_and"(%1472, %done_1225) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1226 = "equeue.launch"(%1465, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1474 = "equeue.control_and"(%1473, %done_1226) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1227 = "equeue.launch"(%1465, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1475 = "equeue.control_and"(%1474, %done_1227) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1228 = "equeue.launch"(%1465, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1476 = "equeue.control_and"(%1475, %done_1228) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1229 = "equeue.launch"(%1465, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1477 = "equeue.control_and"(%1476, %done_1229) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1230 = "equeue.launch"(%1465, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1478 = "equeue.control_and"(%1477, %done_1230) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1231 = "equeue.launch"(%1465, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1479 = "equeue.control_and"(%1478, %done_1231) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1232 = "equeue.launch"(%1465, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1480 = "equeue.control_and"(%1479, %done_1232) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1233 = "equeue.launch"(%1465, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1481 = "equeue.control_and"(%1480, %done_1233) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1234 = "equeue.launch"(%1465, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1482 = "equeue.control_and"(%1481, %done_1234) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1235 = "equeue.launch"(%1465, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1483 = "equeue.control_and"(%1482, %done_1235) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1236 = "equeue.launch"(%1465, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1484 = "equeue.control_and"(%1483, %done_1236) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1237 = "equeue.launch"(%1465, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1485 = "equeue.control_and"(%1484, %done_1237) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1238 = "equeue.launch"(%1465, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1486 = "equeue.control_and"(%1485, %done_1238) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1239 = "equeue.launch"(%1465, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1487 = "equeue.control_and"(%1486, %done_1239) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1240 = "equeue.launch"(%1465, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1488 = "equeue.control_and"(%1487, %done_1240) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1241 = "equeue.launch"(%1465, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1489 = "equeue.control_and"(%1488, %done_1241) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1489) : (!equeue.signal) -> ()
      %1490 = "equeue.control_start"() : () -> !equeue.signal
      %1491 = "equeue.memcpy"(%1490, %121, %129, %102, %c0_1111) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      "equeue.await"(%1491) : (!equeue.signal) -> ()
      %1492 = "equeue.control_start"() : () -> !equeue.signal
      %done_1242 = "equeue.launch"(%1492, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1243 = "equeue.launch"(%1492, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1493 = "equeue.control_and"(%done_1242, %done_1243) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1244 = "equeue.launch"(%1492, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1494 = "equeue.control_and"(%1493, %done_1244) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1245 = "equeue.launch"(%1492, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1495 = "equeue.control_and"(%1494, %done_1245) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1246 = "equeue.launch"(%1492, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1496 = "equeue.control_and"(%1495, %done_1246) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1247 = "equeue.launch"(%1492, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1497 = "equeue.control_and"(%1496, %done_1247) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1248 = "equeue.launch"(%1492, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1498 = "equeue.control_and"(%1497, %done_1248) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1249 = "equeue.launch"(%1492, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1499 = "equeue.control_and"(%1498, %done_1249) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1250 = "equeue.launch"(%1492, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1500 = "equeue.control_and"(%1499, %done_1250) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1251 = "equeue.launch"(%1492, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1501 = "equeue.control_and"(%1500, %done_1251) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1252 = "equeue.launch"(%1492, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1502 = "equeue.control_and"(%1501, %done_1252) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1253 = "equeue.launch"(%1492, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1503 = "equeue.control_and"(%1502, %done_1253) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1254 = "equeue.launch"(%1492, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1504 = "equeue.control_and"(%1503, %done_1254) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1255 = "equeue.launch"(%1492, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1505 = "equeue.control_and"(%1504, %done_1255) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1256 = "equeue.launch"(%1492, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1506 = "equeue.control_and"(%1505, %done_1256) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1257 = "equeue.launch"(%1492, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1507 = "equeue.control_and"(%1506, %done_1257) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1258 = "equeue.launch"(%1492, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1508 = "equeue.control_and"(%1507, %done_1258) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1259 = "equeue.launch"(%1492, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1509 = "equeue.control_and"(%1508, %done_1259) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1260 = "equeue.launch"(%1492, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1510 = "equeue.control_and"(%1509, %done_1260) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1261 = "equeue.launch"(%1492, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1511 = "equeue.control_and"(%1510, %done_1261) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1262 = "equeue.launch"(%1492, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1512 = "equeue.control_and"(%1511, %done_1262) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1263 = "equeue.launch"(%1492, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1513 = "equeue.control_and"(%1512, %done_1263) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1264 = "equeue.launch"(%1492, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1514 = "equeue.control_and"(%1513, %done_1264) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1265 = "equeue.launch"(%1492, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1515 = "equeue.control_and"(%1514, %done_1265) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1266 = "equeue.launch"(%1492, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1516 = "equeue.control_and"(%1515, %done_1266) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1516) : (!equeue.signal) -> ()
      %1517 = "equeue.control_start"() : () -> !equeue.signal
      %1518 = "equeue.memcpy"(%1517, %121, %129, %102, %c0_1111) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      "equeue.await"(%1518) : (!equeue.signal) -> ()
      %1519 = "equeue.control_start"() : () -> !equeue.signal
      %done_1267 = "equeue.launch"(%1519, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1268 = "equeue.launch"(%1519, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1520 = "equeue.control_and"(%done_1267, %done_1268) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1269 = "equeue.launch"(%1519, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1521 = "equeue.control_and"(%1520, %done_1269) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1270 = "equeue.launch"(%1519, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1522 = "equeue.control_and"(%1521, %done_1270) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1271 = "equeue.launch"(%1519, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1523 = "equeue.control_and"(%1522, %done_1271) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1272 = "equeue.launch"(%1519, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1524 = "equeue.control_and"(%1523, %done_1272) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1273 = "equeue.launch"(%1519, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1525 = "equeue.control_and"(%1524, %done_1273) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1274 = "equeue.launch"(%1519, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1526 = "equeue.control_and"(%1525, %done_1274) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1275 = "equeue.launch"(%1519, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1527 = "equeue.control_and"(%1526, %done_1275) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1276 = "equeue.launch"(%1519, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1528 = "equeue.control_and"(%1527, %done_1276) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1277 = "equeue.launch"(%1519, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1529 = "equeue.control_and"(%1528, %done_1277) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1278 = "equeue.launch"(%1519, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1530 = "equeue.control_and"(%1529, %done_1278) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1279 = "equeue.launch"(%1519, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1531 = "equeue.control_and"(%1530, %done_1279) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1280 = "equeue.launch"(%1519, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1532 = "equeue.control_and"(%1531, %done_1280) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1281 = "equeue.launch"(%1519, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1533 = "equeue.control_and"(%1532, %done_1281) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1282 = "equeue.launch"(%1519, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1534 = "equeue.control_and"(%1533, %done_1282) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1283 = "equeue.launch"(%1519, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1535 = "equeue.control_and"(%1534, %done_1283) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1284 = "equeue.launch"(%1519, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1536 = "equeue.control_and"(%1535, %done_1284) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1285 = "equeue.launch"(%1519, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1537 = "equeue.control_and"(%1536, %done_1285) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1286 = "equeue.launch"(%1519, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1538 = "equeue.control_and"(%1537, %done_1286) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1287 = "equeue.launch"(%1519, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1539 = "equeue.control_and"(%1538, %done_1287) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1288 = "equeue.launch"(%1519, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1540 = "equeue.control_and"(%1539, %done_1288) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1289 = "equeue.launch"(%1519, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1541 = "equeue.control_and"(%1540, %done_1289) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1290 = "equeue.launch"(%1519, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1542 = "equeue.control_and"(%1541, %done_1290) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1291 = "equeue.launch"(%1519, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1543 = "equeue.control_and"(%1542, %done_1291) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1543) : (!equeue.signal) -> ()
      %1544 = "equeue.control_start"() : () -> !equeue.signal
      %1545 = "equeue.memcpy"(%1544, %121, %129, %102, %c0_1111) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      "equeue.await"(%1545) : (!equeue.signal) -> ()
      %1546 = "equeue.control_start"() : () -> !equeue.signal
      %done_1292 = "equeue.launch"(%1546, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1293 = "equeue.launch"(%1546, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1547 = "equeue.control_and"(%done_1292, %done_1293) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1294 = "equeue.launch"(%1546, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1548 = "equeue.control_and"(%1547, %done_1294) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1295 = "equeue.launch"(%1546, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1549 = "equeue.control_and"(%1548, %done_1295) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1296 = "equeue.launch"(%1546, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1550 = "equeue.control_and"(%1549, %done_1296) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1297 = "equeue.launch"(%1546, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1551 = "equeue.control_and"(%1550, %done_1297) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1298 = "equeue.launch"(%1546, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1552 = "equeue.control_and"(%1551, %done_1298) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1299 = "equeue.launch"(%1546, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1553 = "equeue.control_and"(%1552, %done_1299) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1300 = "equeue.launch"(%1546, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1554 = "equeue.control_and"(%1553, %done_1300) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1301 = "equeue.launch"(%1546, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1555 = "equeue.control_and"(%1554, %done_1301) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1302 = "equeue.launch"(%1546, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1556 = "equeue.control_and"(%1555, %done_1302) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1303 = "equeue.launch"(%1546, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1557 = "equeue.control_and"(%1556, %done_1303) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1304 = "equeue.launch"(%1546, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1558 = "equeue.control_and"(%1557, %done_1304) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1305 = "equeue.launch"(%1546, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1559 = "equeue.control_and"(%1558, %done_1305) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1306 = "equeue.launch"(%1546, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1560 = "equeue.control_and"(%1559, %done_1306) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1307 = "equeue.launch"(%1546, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1561 = "equeue.control_and"(%1560, %done_1307) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1308 = "equeue.launch"(%1546, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1562 = "equeue.control_and"(%1561, %done_1308) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1309 = "equeue.launch"(%1546, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1563 = "equeue.control_and"(%1562, %done_1309) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1310 = "equeue.launch"(%1546, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1564 = "equeue.control_and"(%1563, %done_1310) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1311 = "equeue.launch"(%1546, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1565 = "equeue.control_and"(%1564, %done_1311) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1312 = "equeue.launch"(%1546, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1566 = "equeue.control_and"(%1565, %done_1312) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1313 = "equeue.launch"(%1546, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1567 = "equeue.control_and"(%1566, %done_1313) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1314 = "equeue.launch"(%1546, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1568 = "equeue.control_and"(%1567, %done_1314) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1315 = "equeue.launch"(%1546, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1569 = "equeue.control_and"(%1568, %done_1315) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1316 = "equeue.launch"(%1546, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1570 = "equeue.control_and"(%1569, %done_1316) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1570) : (!equeue.signal) -> ()
      %1571 = "equeue.control_start"() : () -> !equeue.signal
      %1572 = "equeue.memcpy"(%1571, %121, %129, %102, %c0_1111) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      "equeue.await"(%1572) : (!equeue.signal) -> ()
      %1573 = "equeue.control_start"() : () -> !equeue.signal
      %done_1317 = "equeue.launch"(%1573, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1318 = "equeue.launch"(%1573, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1574 = "equeue.control_and"(%done_1317, %done_1318) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1319 = "equeue.launch"(%1573, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1575 = "equeue.control_and"(%1574, %done_1319) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1320 = "equeue.launch"(%1573, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1576 = "equeue.control_and"(%1575, %done_1320) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1321 = "equeue.launch"(%1573, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1577 = "equeue.control_and"(%1576, %done_1321) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1322 = "equeue.launch"(%1573, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1578 = "equeue.control_and"(%1577, %done_1322) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1323 = "equeue.launch"(%1573, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1579 = "equeue.control_and"(%1578, %done_1323) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1324 = "equeue.launch"(%1573, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1580 = "equeue.control_and"(%1579, %done_1324) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1325 = "equeue.launch"(%1573, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1581 = "equeue.control_and"(%1580, %done_1325) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1326 = "equeue.launch"(%1573, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1582 = "equeue.control_and"(%1581, %done_1326) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1327 = "equeue.launch"(%1573, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1583 = "equeue.control_and"(%1582, %done_1327) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1328 = "equeue.launch"(%1573, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1584 = "equeue.control_and"(%1583, %done_1328) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1329 = "equeue.launch"(%1573, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1585 = "equeue.control_and"(%1584, %done_1329) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1330 = "equeue.launch"(%1573, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1586 = "equeue.control_and"(%1585, %done_1330) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1331 = "equeue.launch"(%1573, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1587 = "equeue.control_and"(%1586, %done_1331) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1332 = "equeue.launch"(%1573, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1588 = "equeue.control_and"(%1587, %done_1332) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1333 = "equeue.launch"(%1573, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1589 = "equeue.control_and"(%1588, %done_1333) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1334 = "equeue.launch"(%1573, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1590 = "equeue.control_and"(%1589, %done_1334) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1335 = "equeue.launch"(%1573, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1591 = "equeue.control_and"(%1590, %done_1335) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1336 = "equeue.launch"(%1573, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1592 = "equeue.control_and"(%1591, %done_1336) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1337 = "equeue.launch"(%1573, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1593 = "equeue.control_and"(%1592, %done_1337) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1338 = "equeue.launch"(%1573, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1594 = "equeue.control_and"(%1593, %done_1338) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1339 = "equeue.launch"(%1573, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1595 = "equeue.control_and"(%1594, %done_1339) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1340 = "equeue.launch"(%1573, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1596 = "equeue.control_and"(%1595, %done_1340) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1341 = "equeue.launch"(%1573, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1597 = "equeue.control_and"(%1596, %done_1341) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1597) : (!equeue.signal) -> ()
      %1598 = "equeue.control_start"() : () -> !equeue.signal
      %1599 = "equeue.memcpy"(%1598, %121, %129, %102, %c0_1111) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      "equeue.await"(%1599) : (!equeue.signal) -> ()
      %1600 = "equeue.control_start"() : () -> !equeue.signal
      %done_1342 = "equeue.launch"(%1600, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1343 = "equeue.launch"(%1600, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1601 = "equeue.control_and"(%done_1342, %done_1343) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1344 = "equeue.launch"(%1600, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1602 = "equeue.control_and"(%1601, %done_1344) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1345 = "equeue.launch"(%1600, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1603 = "equeue.control_and"(%1602, %done_1345) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1346 = "equeue.launch"(%1600, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1604 = "equeue.control_and"(%1603, %done_1346) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1347 = "equeue.launch"(%1600, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1605 = "equeue.control_and"(%1604, %done_1347) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1348 = "equeue.launch"(%1600, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1606 = "equeue.control_and"(%1605, %done_1348) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1349 = "equeue.launch"(%1600, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1607 = "equeue.control_and"(%1606, %done_1349) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1350 = "equeue.launch"(%1600, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1608 = "equeue.control_and"(%1607, %done_1350) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1351 = "equeue.launch"(%1600, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1609 = "equeue.control_and"(%1608, %done_1351) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1352 = "equeue.launch"(%1600, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1610 = "equeue.control_and"(%1609, %done_1352) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1353 = "equeue.launch"(%1600, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1611 = "equeue.control_and"(%1610, %done_1353) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1354 = "equeue.launch"(%1600, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1612 = "equeue.control_and"(%1611, %done_1354) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1355 = "equeue.launch"(%1600, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1613 = "equeue.control_and"(%1612, %done_1355) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1356 = "equeue.launch"(%1600, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1614 = "equeue.control_and"(%1613, %done_1356) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1357 = "equeue.launch"(%1600, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1615 = "equeue.control_and"(%1614, %done_1357) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1358 = "equeue.launch"(%1600, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1616 = "equeue.control_and"(%1615, %done_1358) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1359 = "equeue.launch"(%1600, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1617 = "equeue.control_and"(%1616, %done_1359) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1360 = "equeue.launch"(%1600, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1618 = "equeue.control_and"(%1617, %done_1360) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1361 = "equeue.launch"(%1600, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1619 = "equeue.control_and"(%1618, %done_1361) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1362 = "equeue.launch"(%1600, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1620 = "equeue.control_and"(%1619, %done_1362) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1363 = "equeue.launch"(%1600, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1621 = "equeue.control_and"(%1620, %done_1363) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1364 = "equeue.launch"(%1600, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1622 = "equeue.control_and"(%1621, %done_1364) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1365 = "equeue.launch"(%1600, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1623 = "equeue.control_and"(%1622, %done_1365) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1366 = "equeue.launch"(%1600, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1624 = "equeue.control_and"(%1623, %done_1366) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1624) : (!equeue.signal) -> ()
      %1625 = "equeue.control_start"() : () -> !equeue.signal
      %1626 = "equeue.memcpy"(%1625, %121, %129, %102, %c0_1111) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      "equeue.await"(%1626) : (!equeue.signal) -> ()
      %1627 = "equeue.control_start"() : () -> !equeue.signal
      %done_1367 = "equeue.launch"(%1627, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1368 = "equeue.launch"(%1627, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1628 = "equeue.control_and"(%done_1367, %done_1368) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1369 = "equeue.launch"(%1627, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1629 = "equeue.control_and"(%1628, %done_1369) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1370 = "equeue.launch"(%1627, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1630 = "equeue.control_and"(%1629, %done_1370) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1371 = "equeue.launch"(%1627, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1631 = "equeue.control_and"(%1630, %done_1371) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1372 = "equeue.launch"(%1627, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1632 = "equeue.control_and"(%1631, %done_1372) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1373 = "equeue.launch"(%1627, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1633 = "equeue.control_and"(%1632, %done_1373) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1374 = "equeue.launch"(%1627, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1634 = "equeue.control_and"(%1633, %done_1374) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1375 = "equeue.launch"(%1627, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1635 = "equeue.control_and"(%1634, %done_1375) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1376 = "equeue.launch"(%1627, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1636 = "equeue.control_and"(%1635, %done_1376) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1377 = "equeue.launch"(%1627, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1637 = "equeue.control_and"(%1636, %done_1377) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1378 = "equeue.launch"(%1627, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1638 = "equeue.control_and"(%1637, %done_1378) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1379 = "equeue.launch"(%1627, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1639 = "equeue.control_and"(%1638, %done_1379) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1380 = "equeue.launch"(%1627, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1640 = "equeue.control_and"(%1639, %done_1380) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1381 = "equeue.launch"(%1627, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1641 = "equeue.control_and"(%1640, %done_1381) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1382 = "equeue.launch"(%1627, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1642 = "equeue.control_and"(%1641, %done_1382) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1383 = "equeue.launch"(%1627, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1643 = "equeue.control_and"(%1642, %done_1383) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1384 = "equeue.launch"(%1627, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1644 = "equeue.control_and"(%1643, %done_1384) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1385 = "equeue.launch"(%1627, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1645 = "equeue.control_and"(%1644, %done_1385) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1386 = "equeue.launch"(%1627, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1646 = "equeue.control_and"(%1645, %done_1386) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1387 = "equeue.launch"(%1627, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1647 = "equeue.control_and"(%1646, %done_1387) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1388 = "equeue.launch"(%1627, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1648 = "equeue.control_and"(%1647, %done_1388) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1389 = "equeue.launch"(%1627, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1649 = "equeue.control_and"(%1648, %done_1389) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1390 = "equeue.launch"(%1627, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1650 = "equeue.control_and"(%1649, %done_1390) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1391 = "equeue.launch"(%1627, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1651 = "equeue.control_and"(%1650, %done_1391) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1651) : (!equeue.signal) -> ()
      %1652 = "equeue.control_start"() : () -> !equeue.signal
      %1653 = "equeue.memcpy"(%1652, %121, %129, %102, %c0_1111) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      "equeue.await"(%1653) : (!equeue.signal) -> ()
      %1654 = "equeue.control_start"() : () -> !equeue.signal
      %done_1392 = "equeue.launch"(%1654, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1393 = "equeue.launch"(%1654, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1655 = "equeue.control_and"(%done_1392, %done_1393) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1394 = "equeue.launch"(%1654, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1656 = "equeue.control_and"(%1655, %done_1394) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1395 = "equeue.launch"(%1654, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1657 = "equeue.control_and"(%1656, %done_1395) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1396 = "equeue.launch"(%1654, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1658 = "equeue.control_and"(%1657, %done_1396) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1397 = "equeue.launch"(%1654, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1659 = "equeue.control_and"(%1658, %done_1397) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1398 = "equeue.launch"(%1654, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1660 = "equeue.control_and"(%1659, %done_1398) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1399 = "equeue.launch"(%1654, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1661 = "equeue.control_and"(%1660, %done_1399) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1400 = "equeue.launch"(%1654, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1662 = "equeue.control_and"(%1661, %done_1400) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1401 = "equeue.launch"(%1654, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1663 = "equeue.control_and"(%1662, %done_1401) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1402 = "equeue.launch"(%1654, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1664 = "equeue.control_and"(%1663, %done_1402) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1403 = "equeue.launch"(%1654, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1665 = "equeue.control_and"(%1664, %done_1403) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1404 = "equeue.launch"(%1654, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1666 = "equeue.control_and"(%1665, %done_1404) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1405 = "equeue.launch"(%1654, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1667 = "equeue.control_and"(%1666, %done_1405) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1406 = "equeue.launch"(%1654, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1668 = "equeue.control_and"(%1667, %done_1406) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1407 = "equeue.launch"(%1654, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1669 = "equeue.control_and"(%1668, %done_1407) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1408 = "equeue.launch"(%1654, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1670 = "equeue.control_and"(%1669, %done_1408) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1409 = "equeue.launch"(%1654, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1671 = "equeue.control_and"(%1670, %done_1409) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1410 = "equeue.launch"(%1654, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1672 = "equeue.control_and"(%1671, %done_1410) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1411 = "equeue.launch"(%1654, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1673 = "equeue.control_and"(%1672, %done_1411) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1412 = "equeue.launch"(%1654, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1674 = "equeue.control_and"(%1673, %done_1412) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1413 = "equeue.launch"(%1654, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1675 = "equeue.control_and"(%1674, %done_1413) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1414 = "equeue.launch"(%1654, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1676 = "equeue.control_and"(%1675, %done_1414) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1415 = "equeue.launch"(%1654, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1677 = "equeue.control_and"(%1676, %done_1415) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1416 = "equeue.launch"(%1654, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1678 = "equeue.control_and"(%1677, %done_1416) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1678) : (!equeue.signal) -> ()
      %1679 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%1679) : (!equeue.signal) -> ()
      %1680 = "equeue.control_start"() : () -> !equeue.signal
      %done_1417 = "equeue.launch"(%1680, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1418 = "equeue.launch"(%1680, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1681 = "equeue.control_and"(%done_1417, %done_1418) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1419 = "equeue.launch"(%1680, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1682 = "equeue.control_and"(%1681, %done_1419) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1420 = "equeue.launch"(%1680, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1683 = "equeue.control_and"(%1682, %done_1420) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1421 = "equeue.launch"(%1680, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1684 = "equeue.control_and"(%1683, %done_1421) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1422 = "equeue.launch"(%1680, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1685 = "equeue.control_and"(%1684, %done_1422) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1423 = "equeue.launch"(%1680, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1686 = "equeue.control_and"(%1685, %done_1423) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1424 = "equeue.launch"(%1680, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1687 = "equeue.control_and"(%1686, %done_1424) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1425 = "equeue.launch"(%1680, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1688 = "equeue.control_and"(%1687, %done_1425) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1426 = "equeue.launch"(%1680, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1689 = "equeue.control_and"(%1688, %done_1426) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1427 = "equeue.launch"(%1680, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1690 = "equeue.control_and"(%1689, %done_1427) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1428 = "equeue.launch"(%1680, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1691 = "equeue.control_and"(%1690, %done_1428) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1429 = "equeue.launch"(%1680, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1692 = "equeue.control_and"(%1691, %done_1429) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1430 = "equeue.launch"(%1680, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1693 = "equeue.control_and"(%1692, %done_1430) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1431 = "equeue.launch"(%1680, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1694 = "equeue.control_and"(%1693, %done_1431) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1432 = "equeue.launch"(%1680, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1695 = "equeue.control_and"(%1694, %done_1432) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1433 = "equeue.launch"(%1680, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1696 = "equeue.control_and"(%1695, %done_1433) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1434 = "equeue.launch"(%1680, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1697 = "equeue.control_and"(%1696, %done_1434) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1435 = "equeue.launch"(%1680, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1698 = "equeue.control_and"(%1697, %done_1435) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1436 = "equeue.launch"(%1680, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1699 = "equeue.control_and"(%1698, %done_1436) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1437 = "equeue.launch"(%1680, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1700 = "equeue.control_and"(%1699, %done_1437) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1438 = "equeue.launch"(%1680, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1701 = "equeue.control_and"(%1700, %done_1438) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1439 = "equeue.launch"(%1680, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1702 = "equeue.control_and"(%1701, %done_1439) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1440 = "equeue.launch"(%1680, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1703 = "equeue.control_and"(%1702, %done_1440) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1441 = "equeue.launch"(%1680, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1704 = "equeue.control_and"(%1703, %done_1441) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1704) : (!equeue.signal) -> ()
      %1705 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%1705) : (!equeue.signal) -> ()
      %1706 = "equeue.control_start"() : () -> !equeue.signal
      %done_1442 = "equeue.launch"(%1706, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1443 = "equeue.launch"(%1706, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1707 = "equeue.control_and"(%done_1442, %done_1443) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1444 = "equeue.launch"(%1706, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1708 = "equeue.control_and"(%1707, %done_1444) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1445 = "equeue.launch"(%1706, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1709 = "equeue.control_and"(%1708, %done_1445) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1446 = "equeue.launch"(%1706, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1710 = "equeue.control_and"(%1709, %done_1446) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1447 = "equeue.launch"(%1706, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1711 = "equeue.control_and"(%1710, %done_1447) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1448 = "equeue.launch"(%1706, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1712 = "equeue.control_and"(%1711, %done_1448) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1449 = "equeue.launch"(%1706, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1713 = "equeue.control_and"(%1712, %done_1449) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1450 = "equeue.launch"(%1706, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1714 = "equeue.control_and"(%1713, %done_1450) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1451 = "equeue.launch"(%1706, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1715 = "equeue.control_and"(%1714, %done_1451) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1452 = "equeue.launch"(%1706, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1716 = "equeue.control_and"(%1715, %done_1452) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1453 = "equeue.launch"(%1706, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1717 = "equeue.control_and"(%1716, %done_1453) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1454 = "equeue.launch"(%1706, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1718 = "equeue.control_and"(%1717, %done_1454) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1455 = "equeue.launch"(%1706, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1719 = "equeue.control_and"(%1718, %done_1455) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1456 = "equeue.launch"(%1706, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1720 = "equeue.control_and"(%1719, %done_1456) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1457 = "equeue.launch"(%1706, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1721 = "equeue.control_and"(%1720, %done_1457) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1458 = "equeue.launch"(%1706, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1722 = "equeue.control_and"(%1721, %done_1458) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1459 = "equeue.launch"(%1706, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1723 = "equeue.control_and"(%1722, %done_1459) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1460 = "equeue.launch"(%1706, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1724 = "equeue.control_and"(%1723, %done_1460) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1461 = "equeue.launch"(%1706, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1725 = "equeue.control_and"(%1724, %done_1461) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1462 = "equeue.launch"(%1706, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1726 = "equeue.control_and"(%1725, %done_1462) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1463 = "equeue.launch"(%1706, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1727 = "equeue.control_and"(%1726, %done_1463) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1464 = "equeue.launch"(%1706, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1728 = "equeue.control_and"(%1727, %done_1464) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1465 = "equeue.launch"(%1706, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1729 = "equeue.control_and"(%1728, %done_1465) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1466 = "equeue.launch"(%1706, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1730 = "equeue.control_and"(%1729, %done_1466) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1730) : (!equeue.signal) -> ()
      %1731 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%1731) : (!equeue.signal) -> ()
      %1732 = "equeue.control_start"() : () -> !equeue.signal
      %done_1467 = "equeue.launch"(%1732, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1468 = "equeue.launch"(%1732, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1733 = "equeue.control_and"(%done_1467, %done_1468) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1469 = "equeue.launch"(%1732, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1734 = "equeue.control_and"(%1733, %done_1469) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1470 = "equeue.launch"(%1732, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1735 = "equeue.control_and"(%1734, %done_1470) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1471 = "equeue.launch"(%1732, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1736 = "equeue.control_and"(%1735, %done_1471) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1472 = "equeue.launch"(%1732, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1737 = "equeue.control_and"(%1736, %done_1472) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1473 = "equeue.launch"(%1732, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1738 = "equeue.control_and"(%1737, %done_1473) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1474 = "equeue.launch"(%1732, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1739 = "equeue.control_and"(%1738, %done_1474) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1475 = "equeue.launch"(%1732, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1740 = "equeue.control_and"(%1739, %done_1475) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1476 = "equeue.launch"(%1732, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1741 = "equeue.control_and"(%1740, %done_1476) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1477 = "equeue.launch"(%1732, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1742 = "equeue.control_and"(%1741, %done_1477) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1478 = "equeue.launch"(%1732, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1743 = "equeue.control_and"(%1742, %done_1478) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1479 = "equeue.launch"(%1732, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1744 = "equeue.control_and"(%1743, %done_1479) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1480 = "equeue.launch"(%1732, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1745 = "equeue.control_and"(%1744, %done_1480) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1481 = "equeue.launch"(%1732, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1746 = "equeue.control_and"(%1745, %done_1481) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1482 = "equeue.launch"(%1732, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1747 = "equeue.control_and"(%1746, %done_1482) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1483 = "equeue.launch"(%1732, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1748 = "equeue.control_and"(%1747, %done_1483) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1484 = "equeue.launch"(%1732, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1749 = "equeue.control_and"(%1748, %done_1484) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1485 = "equeue.launch"(%1732, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1750 = "equeue.control_and"(%1749, %done_1485) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1486 = "equeue.launch"(%1732, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1751 = "equeue.control_and"(%1750, %done_1486) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1487 = "equeue.launch"(%1732, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1752 = "equeue.control_and"(%1751, %done_1487) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1488 = "equeue.launch"(%1732, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1753 = "equeue.control_and"(%1752, %done_1488) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1489 = "equeue.launch"(%1732, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1754 = "equeue.control_and"(%1753, %done_1489) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1490 = "equeue.launch"(%1732, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1755 = "equeue.control_and"(%1754, %done_1490) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1491 = "equeue.launch"(%1732, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1756 = "equeue.control_and"(%1755, %done_1491) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1756) : (!equeue.signal) -> ()
      %1757 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%1757) : (!equeue.signal) -> ()
      %1758 = "equeue.control_start"() : () -> !equeue.signal
      %done_1492 = "equeue.launch"(%1758, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1493 = "equeue.launch"(%1758, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1759 = "equeue.control_and"(%done_1492, %done_1493) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1494 = "equeue.launch"(%1758, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1760 = "equeue.control_and"(%1759, %done_1494) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1495 = "equeue.launch"(%1758, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1761 = "equeue.control_and"(%1760, %done_1495) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1496 = "equeue.launch"(%1758, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1762 = "equeue.control_and"(%1761, %done_1496) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1497 = "equeue.launch"(%1758, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1763 = "equeue.control_and"(%1762, %done_1497) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1498 = "equeue.launch"(%1758, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1764 = "equeue.control_and"(%1763, %done_1498) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1499 = "equeue.launch"(%1758, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1765 = "equeue.control_and"(%1764, %done_1499) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1500 = "equeue.launch"(%1758, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1766 = "equeue.control_and"(%1765, %done_1500) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1501 = "equeue.launch"(%1758, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1767 = "equeue.control_and"(%1766, %done_1501) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1502 = "equeue.launch"(%1758, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1768 = "equeue.control_and"(%1767, %done_1502) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1503 = "equeue.launch"(%1758, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1769 = "equeue.control_and"(%1768, %done_1503) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1504 = "equeue.launch"(%1758, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1770 = "equeue.control_and"(%1769, %done_1504) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1505 = "equeue.launch"(%1758, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1771 = "equeue.control_and"(%1770, %done_1505) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1506 = "equeue.launch"(%1758, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1772 = "equeue.control_and"(%1771, %done_1506) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1507 = "equeue.launch"(%1758, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1773 = "equeue.control_and"(%1772, %done_1507) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1508 = "equeue.launch"(%1758, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1774 = "equeue.control_and"(%1773, %done_1508) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1509 = "equeue.launch"(%1758, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1775 = "equeue.control_and"(%1774, %done_1509) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1510 = "equeue.launch"(%1758, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1776 = "equeue.control_and"(%1775, %done_1510) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1511 = "equeue.launch"(%1758, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1777 = "equeue.control_and"(%1776, %done_1511) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1512 = "equeue.launch"(%1758, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1778 = "equeue.control_and"(%1777, %done_1512) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1513 = "equeue.launch"(%1758, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1779 = "equeue.control_and"(%1778, %done_1513) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1514 = "equeue.launch"(%1758, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1780 = "equeue.control_and"(%1779, %done_1514) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1515 = "equeue.launch"(%1758, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1781 = "equeue.control_and"(%1780, %done_1515) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1516 = "equeue.launch"(%1758, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1782 = "equeue.control_and"(%1781, %done_1516) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1782) : (!equeue.signal) -> ()
      %1783 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%1783) : (!equeue.signal) -> ()
      %1784 = "equeue.control_start"() : () -> !equeue.signal
      %done_1517 = "equeue.launch"(%1784, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1518 = "equeue.launch"(%1784, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1785 = "equeue.control_and"(%done_1517, %done_1518) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1519 = "equeue.launch"(%1784, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1786 = "equeue.control_and"(%1785, %done_1519) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1520 = "equeue.launch"(%1784, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1787 = "equeue.control_and"(%1786, %done_1520) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1521 = "equeue.launch"(%1784, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1788 = "equeue.control_and"(%1787, %done_1521) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1522 = "equeue.launch"(%1784, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1789 = "equeue.control_and"(%1788, %done_1522) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1523 = "equeue.launch"(%1784, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1790 = "equeue.control_and"(%1789, %done_1523) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1524 = "equeue.launch"(%1784, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1791 = "equeue.control_and"(%1790, %done_1524) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1525 = "equeue.launch"(%1784, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1792 = "equeue.control_and"(%1791, %done_1525) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1526 = "equeue.launch"(%1784, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1793 = "equeue.control_and"(%1792, %done_1526) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1527 = "equeue.launch"(%1784, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1794 = "equeue.control_and"(%1793, %done_1527) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1528 = "equeue.launch"(%1784, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1795 = "equeue.control_and"(%1794, %done_1528) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1529 = "equeue.launch"(%1784, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1796 = "equeue.control_and"(%1795, %done_1529) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1530 = "equeue.launch"(%1784, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1797 = "equeue.control_and"(%1796, %done_1530) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1531 = "equeue.launch"(%1784, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1798 = "equeue.control_and"(%1797, %done_1531) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1532 = "equeue.launch"(%1784, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1799 = "equeue.control_and"(%1798, %done_1532) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1533 = "equeue.launch"(%1784, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1800 = "equeue.control_and"(%1799, %done_1533) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1534 = "equeue.launch"(%1784, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1801 = "equeue.control_and"(%1800, %done_1534) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1535 = "equeue.launch"(%1784, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1802 = "equeue.control_and"(%1801, %done_1535) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1536 = "equeue.launch"(%1784, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1803 = "equeue.control_and"(%1802, %done_1536) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1537 = "equeue.launch"(%1784, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1804 = "equeue.control_and"(%1803, %done_1537) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1538 = "equeue.launch"(%1784, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1805 = "equeue.control_and"(%1804, %done_1538) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1539 = "equeue.launch"(%1784, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1806 = "equeue.control_and"(%1805, %done_1539) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1540 = "equeue.launch"(%1784, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1807 = "equeue.control_and"(%1806, %done_1540) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1541 = "equeue.launch"(%1784, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1808 = "equeue.control_and"(%1807, %done_1541) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1808) : (!equeue.signal) -> ()
      %1809 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%1809) : (!equeue.signal) -> ()
      %1810 = "equeue.control_start"() : () -> !equeue.signal
      %done_1542 = "equeue.launch"(%1810, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1543 = "equeue.launch"(%1810, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1811 = "equeue.control_and"(%done_1542, %done_1543) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1544 = "equeue.launch"(%1810, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1812 = "equeue.control_and"(%1811, %done_1544) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1545 = "equeue.launch"(%1810, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1813 = "equeue.control_and"(%1812, %done_1545) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1546 = "equeue.launch"(%1810, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1814 = "equeue.control_and"(%1813, %done_1546) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1547 = "equeue.launch"(%1810, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1815 = "equeue.control_and"(%1814, %done_1547) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1548 = "equeue.launch"(%1810, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1816 = "equeue.control_and"(%1815, %done_1548) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1549 = "equeue.launch"(%1810, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1817 = "equeue.control_and"(%1816, %done_1549) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1550 = "equeue.launch"(%1810, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1818 = "equeue.control_and"(%1817, %done_1550) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1551 = "equeue.launch"(%1810, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1819 = "equeue.control_and"(%1818, %done_1551) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1552 = "equeue.launch"(%1810, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1820 = "equeue.control_and"(%1819, %done_1552) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1553 = "equeue.launch"(%1810, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1821 = "equeue.control_and"(%1820, %done_1553) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1554 = "equeue.launch"(%1810, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1822 = "equeue.control_and"(%1821, %done_1554) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1555 = "equeue.launch"(%1810, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1823 = "equeue.control_and"(%1822, %done_1555) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1556 = "equeue.launch"(%1810, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1824 = "equeue.control_and"(%1823, %done_1556) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1557 = "equeue.launch"(%1810, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1825 = "equeue.control_and"(%1824, %done_1557) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1558 = "equeue.launch"(%1810, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1826 = "equeue.control_and"(%1825, %done_1558) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1559 = "equeue.launch"(%1810, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1827 = "equeue.control_and"(%1826, %done_1559) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1560 = "equeue.launch"(%1810, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1828 = "equeue.control_and"(%1827, %done_1560) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1561 = "equeue.launch"(%1810, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1829 = "equeue.control_and"(%1828, %done_1561) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1562 = "equeue.launch"(%1810, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1830 = "equeue.control_and"(%1829, %done_1562) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1563 = "equeue.launch"(%1810, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1831 = "equeue.control_and"(%1830, %done_1563) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1564 = "equeue.launch"(%1810, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1832 = "equeue.control_and"(%1831, %done_1564) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1565 = "equeue.launch"(%1810, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1833 = "equeue.control_and"(%1832, %done_1565) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1566 = "equeue.launch"(%1810, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1834 = "equeue.control_and"(%1833, %done_1566) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1834) : (!equeue.signal) -> ()
      %1835 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%1835) : (!equeue.signal) -> ()
      %1836 = "equeue.control_start"() : () -> !equeue.signal
      %done_1567 = "equeue.launch"(%1836, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1568 = "equeue.launch"(%1836, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1837 = "equeue.control_and"(%done_1567, %done_1568) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1569 = "equeue.launch"(%1836, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1838 = "equeue.control_and"(%1837, %done_1569) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1570 = "equeue.launch"(%1836, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1839 = "equeue.control_and"(%1838, %done_1570) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1571 = "equeue.launch"(%1836, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1840 = "equeue.control_and"(%1839, %done_1571) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1572 = "equeue.launch"(%1836, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1841 = "equeue.control_and"(%1840, %done_1572) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1573 = "equeue.launch"(%1836, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1842 = "equeue.control_and"(%1841, %done_1573) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1574 = "equeue.launch"(%1836, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1843 = "equeue.control_and"(%1842, %done_1574) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1575 = "equeue.launch"(%1836, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1844 = "equeue.control_and"(%1843, %done_1575) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1576 = "equeue.launch"(%1836, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1845 = "equeue.control_and"(%1844, %done_1576) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1577 = "equeue.launch"(%1836, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1846 = "equeue.control_and"(%1845, %done_1577) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1578 = "equeue.launch"(%1836, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1847 = "equeue.control_and"(%1846, %done_1578) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1579 = "equeue.launch"(%1836, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1848 = "equeue.control_and"(%1847, %done_1579) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1580 = "equeue.launch"(%1836, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1849 = "equeue.control_and"(%1848, %done_1580) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1581 = "equeue.launch"(%1836, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        %3252 = addf %3251, %3250 : f32
        "equeue.write"(%3252, %arg9) {bank = 2 : i64} : (f32, memref<5x3x3xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1850 = "equeue.control_and"(%1849, %done_1581) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1582 = "equeue.launch"(%1836, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1851 = "equeue.control_and"(%1850, %done_1582) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1583 = "equeue.launch"(%1836, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1852 = "equeue.control_and"(%1851, %done_1583) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1584 = "equeue.launch"(%1836, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1853 = "equeue.control_and"(%1852, %done_1584) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1585 = "equeue.launch"(%1836, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1854 = "equeue.control_and"(%1853, %done_1585) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1586 = "equeue.launch"(%1836, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        %3252 = addf %3251, %3250 : f32
        "equeue.write"(%3252, %arg9) {bank = 3 : i64} : (f32, memref<5x3x3xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1855 = "equeue.control_and"(%1854, %done_1586) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1587 = "equeue.launch"(%1836, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1856 = "equeue.control_and"(%1855, %done_1587) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1588 = "equeue.launch"(%1836, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1857 = "equeue.control_and"(%1856, %done_1588) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1589 = "equeue.launch"(%1836, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1858 = "equeue.control_and"(%1857, %done_1589) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1590 = "equeue.launch"(%1836, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1859 = "equeue.control_and"(%1858, %done_1590) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1591 = "equeue.launch"(%1836, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        %3252 = addf %3251, %3250 : f32
        "equeue.write"(%3252, %arg8) {bank = 4 : i64} : (f32, memref<5x3x3xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1860 = "equeue.control_and"(%1859, %done_1591) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1860) : (!equeue.signal) -> ()
      %1861 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%1861) : (!equeue.signal) -> ()
      %1862 = "equeue.control_start"() : () -> !equeue.signal
      %done_1592 = "equeue.launch"(%1862, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1593 = "equeue.launch"(%1862, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1863 = "equeue.control_and"(%done_1592, %done_1593) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1594 = "equeue.launch"(%1862, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1864 = "equeue.control_and"(%1863, %done_1594) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1595 = "equeue.launch"(%1862, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1865 = "equeue.control_and"(%1864, %done_1595) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1596 = "equeue.launch"(%1862, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1866 = "equeue.control_and"(%1865, %done_1596) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1597 = "equeue.launch"(%1862, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1867 = "equeue.control_and"(%1866, %done_1597) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1598 = "equeue.launch"(%1862, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1868 = "equeue.control_and"(%1867, %done_1598) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1599 = "equeue.launch"(%1862, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1869 = "equeue.control_and"(%1868, %done_1599) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1600 = "equeue.launch"(%1862, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1870 = "equeue.control_and"(%1869, %done_1600) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1601 = "equeue.launch"(%1862, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1871 = "equeue.control_and"(%1870, %done_1601) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1602 = "equeue.launch"(%1862, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1872 = "equeue.control_and"(%1871, %done_1602) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1603 = "equeue.launch"(%1862, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1873 = "equeue.control_and"(%1872, %done_1603) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1604 = "equeue.launch"(%1862, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1874 = "equeue.control_and"(%1873, %done_1604) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1605 = "equeue.launch"(%1862, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1875 = "equeue.control_and"(%1874, %done_1605) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1606 = "equeue.launch"(%1862, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1876 = "equeue.control_and"(%1875, %done_1606) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1607 = "equeue.launch"(%1862, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1877 = "equeue.control_and"(%1876, %done_1607) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1608 = "equeue.launch"(%1862, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1878 = "equeue.control_and"(%1877, %done_1608) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1609 = "equeue.launch"(%1862, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1879 = "equeue.control_and"(%1878, %done_1609) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1610 = "equeue.launch"(%1862, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1880 = "equeue.control_and"(%1879, %done_1610) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1611 = "equeue.launch"(%1862, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1881 = "equeue.control_and"(%1880, %done_1611) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1612 = "equeue.launch"(%1862, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1882 = "equeue.control_and"(%1881, %done_1612) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1613 = "equeue.launch"(%1862, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1883 = "equeue.control_and"(%1882, %done_1613) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1614 = "equeue.launch"(%1862, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1884 = "equeue.control_and"(%1883, %done_1614) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1615 = "equeue.launch"(%1862, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1885 = "equeue.control_and"(%1884, %done_1615) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1616 = "equeue.launch"(%1862, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1886 = "equeue.control_and"(%1885, %done_1616) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1886) : (!equeue.signal) -> ()
      %1887 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%1887) : (!equeue.signal) -> ()
      %1888 = "equeue.control_start"() : () -> !equeue.signal
      %done_1617 = "equeue.launch"(%1888, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1618 = "equeue.launch"(%1888, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1889 = "equeue.control_and"(%done_1617, %done_1618) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1619 = "equeue.launch"(%1888, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1890 = "equeue.control_and"(%1889, %done_1619) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1620 = "equeue.launch"(%1888, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1891 = "equeue.control_and"(%1890, %done_1620) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1621 = "equeue.launch"(%1888, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1892 = "equeue.control_and"(%1891, %done_1621) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1622 = "equeue.launch"(%1888, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1893 = "equeue.control_and"(%1892, %done_1622) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1623 = "equeue.launch"(%1888, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1894 = "equeue.control_and"(%1893, %done_1623) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1624 = "equeue.launch"(%1888, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1895 = "equeue.control_and"(%1894, %done_1624) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1625 = "equeue.launch"(%1888, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1896 = "equeue.control_and"(%1895, %done_1625) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1626 = "equeue.launch"(%1888, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1897 = "equeue.control_and"(%1896, %done_1626) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1627 = "equeue.launch"(%1888, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1898 = "equeue.control_and"(%1897, %done_1627) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1628 = "equeue.launch"(%1888, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1899 = "equeue.control_and"(%1898, %done_1628) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1629 = "equeue.launch"(%1888, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1900 = "equeue.control_and"(%1899, %done_1629) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1630 = "equeue.launch"(%1888, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1901 = "equeue.control_and"(%1900, %done_1630) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1631 = "equeue.launch"(%1888, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1902 = "equeue.control_and"(%1901, %done_1631) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1632 = "equeue.launch"(%1888, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1903 = "equeue.control_and"(%1902, %done_1632) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1633 = "equeue.launch"(%1888, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1904 = "equeue.control_and"(%1903, %done_1633) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1634 = "equeue.launch"(%1888, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1905 = "equeue.control_and"(%1904, %done_1634) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1635 = "equeue.launch"(%1888, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1906 = "equeue.control_and"(%1905, %done_1635) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1636 = "equeue.launch"(%1888, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1907 = "equeue.control_and"(%1906, %done_1636) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1637 = "equeue.launch"(%1888, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1908 = "equeue.control_and"(%1907, %done_1637) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1638 = "equeue.launch"(%1888, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1909 = "equeue.control_and"(%1908, %done_1638) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1639 = "equeue.launch"(%1888, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1910 = "equeue.control_and"(%1909, %done_1639) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1640 = "equeue.launch"(%1888, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1911 = "equeue.control_and"(%1910, %done_1640) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1641 = "equeue.launch"(%1888, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1912 = "equeue.control_and"(%1911, %done_1641) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1912) : (!equeue.signal) -> ()
      %1913 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%1913) : (!equeue.signal) -> ()
      %1914 = "equeue.control_start"() : () -> !equeue.signal
      %done_1642 = "equeue.launch"(%1914, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1643 = "equeue.launch"(%1914, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1915 = "equeue.control_and"(%done_1642, %done_1643) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1644 = "equeue.launch"(%1914, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1916 = "equeue.control_and"(%1915, %done_1644) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1645 = "equeue.launch"(%1914, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1917 = "equeue.control_and"(%1916, %done_1645) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1646 = "equeue.launch"(%1914, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1918 = "equeue.control_and"(%1917, %done_1646) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1647 = "equeue.launch"(%1914, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1919 = "equeue.control_and"(%1918, %done_1647) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1648 = "equeue.launch"(%1914, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1920 = "equeue.control_and"(%1919, %done_1648) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1649 = "equeue.launch"(%1914, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1921 = "equeue.control_and"(%1920, %done_1649) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1650 = "equeue.launch"(%1914, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1922 = "equeue.control_and"(%1921, %done_1650) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1651 = "equeue.launch"(%1914, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1923 = "equeue.control_and"(%1922, %done_1651) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1652 = "equeue.launch"(%1914, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1924 = "equeue.control_and"(%1923, %done_1652) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1653 = "equeue.launch"(%1914, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1925 = "equeue.control_and"(%1924, %done_1653) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1654 = "equeue.launch"(%1914, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1926 = "equeue.control_and"(%1925, %done_1654) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1655 = "equeue.launch"(%1914, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1927 = "equeue.control_and"(%1926, %done_1655) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1656 = "equeue.launch"(%1914, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1928 = "equeue.control_and"(%1927, %done_1656) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1657 = "equeue.launch"(%1914, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1929 = "equeue.control_and"(%1928, %done_1657) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1658 = "equeue.launch"(%1914, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1930 = "equeue.control_and"(%1929, %done_1658) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1659 = "equeue.launch"(%1914, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1931 = "equeue.control_and"(%1930, %done_1659) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1660 = "equeue.launch"(%1914, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1932 = "equeue.control_and"(%1931, %done_1660) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1661 = "equeue.launch"(%1914, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1933 = "equeue.control_and"(%1932, %done_1661) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1662 = "equeue.launch"(%1914, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1934 = "equeue.control_and"(%1933, %done_1662) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1663 = "equeue.launch"(%1914, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1935 = "equeue.control_and"(%1934, %done_1663) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1664 = "equeue.launch"(%1914, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1936 = "equeue.control_and"(%1935, %done_1664) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1665 = "equeue.launch"(%1914, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1937 = "equeue.control_and"(%1936, %done_1665) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1666 = "equeue.launch"(%1914, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1938 = "equeue.control_and"(%1937, %done_1666) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1938) : (!equeue.signal) -> ()
      %c0_1667 = constant 0 : index
      %1939 = "equeue.control_start"() : () -> !equeue.signal
      %1940 = "equeue.memcpy"(%1939, %122, %127, %111, %c0_1667) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_1668 = "equeue.launch"(%1940, %126, %127, %157) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1669 = "equeue.launch"(%1940, %156, %157, %187) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1670 = "equeue.launch"(%1940, %186, %187, %217) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1671 = "equeue.launch"(%1940, %216, %217, %247) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1941 = "equeue.control_and"(%done_1671, %1940) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1942 = "equeue.memcpy"(%1939, %122, %133, %113, %c0_1667) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_1672 = "equeue.launch"(%1942, %132, %133, %163) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1673 = "equeue.launch"(%1942, %162, %163, %193) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1674 = "equeue.launch"(%1942, %192, %193, %223) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1675 = "equeue.launch"(%1942, %222, %223, %253) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1943 = "equeue.control_and"(%1942, %1941, %done_1675) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %1944 = "equeue.memcpy"(%1939, %122, %139, %115, %c0_1667) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_1676 = "equeue.launch"(%1944, %138, %139, %169) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1677 = "equeue.launch"(%1944, %168, %169, %199) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1678 = "equeue.launch"(%1944, %198, %199, %229) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1679 = "equeue.launch"(%1944, %228, %229, %259) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1945 = "equeue.control_and"(%1944, %1943, %done_1679) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %1946 = "equeue.memcpy"(%1939, %122, %145, %117, %c0_1667) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_1680 = "equeue.launch"(%1946, %144, %145, %175) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1681 = "equeue.launch"(%1946, %174, %175, %205) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1682 = "equeue.launch"(%1946, %204, %205, %235) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1683 = "equeue.launch"(%1946, %234, %235, %265) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1947 = "equeue.control_and"(%1946, %1945, %done_1683) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %1948 = "equeue.memcpy"(%1939, %122, %151, %119, %c0_1667) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_1684 = "equeue.launch"(%1948, %150, %151, %181) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1685 = "equeue.launch"(%1948, %180, %181, %211) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1686 = "equeue.launch"(%1948, %210, %211, %241) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1687 = "equeue.launch"(%1948, %240, %241, %271) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1949 = "equeue.control_and"(%1948, %1947, %done_1687) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1949) : (!equeue.signal) -> ()
      %1950 = "equeue.control_start"() : () -> !equeue.signal
      %1951 = "equeue.memcpy"(%1950, %122, %127, %111, %c0_1667) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_1688 = "equeue.launch"(%1951, %126, %127, %157) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1689 = "equeue.launch"(%1951, %156, %157, %187) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1690 = "equeue.launch"(%1951, %186, %187, %217) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1691 = "equeue.launch"(%1951, %216, %217, %247) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1952 = "equeue.control_and"(%done_1691, %1951) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1953 = "equeue.memcpy"(%1950, %122, %133, %113, %c0_1667) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_1692 = "equeue.launch"(%1953, %132, %133, %163) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1693 = "equeue.launch"(%1953, %162, %163, %193) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1694 = "equeue.launch"(%1953, %192, %193, %223) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1695 = "equeue.launch"(%1953, %222, %223, %253) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1954 = "equeue.control_and"(%1953, %1952, %done_1695) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %1955 = "equeue.memcpy"(%1950, %122, %139, %115, %c0_1667) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_1696 = "equeue.launch"(%1955, %138, %139, %169) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1697 = "equeue.launch"(%1955, %168, %169, %199) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1698 = "equeue.launch"(%1955, %198, %199, %229) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1699 = "equeue.launch"(%1955, %228, %229, %259) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1956 = "equeue.control_and"(%1955, %1954, %done_1699) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %1957 = "equeue.memcpy"(%1950, %122, %145, %117, %c0_1667) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_1700 = "equeue.launch"(%1957, %144, %145, %175) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1701 = "equeue.launch"(%1957, %174, %175, %205) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1702 = "equeue.launch"(%1957, %204, %205, %235) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1703 = "equeue.launch"(%1957, %234, %235, %265) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1958 = "equeue.control_and"(%1957, %1956, %done_1703) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %1959 = "equeue.memcpy"(%1950, %122, %151, %119, %c0_1667) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_1704 = "equeue.launch"(%1959, %150, %151, %181) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1705 = "equeue.launch"(%1959, %180, %181, %211) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1706 = "equeue.launch"(%1959, %210, %211, %241) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1707 = "equeue.launch"(%1959, %240, %241, %271) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1960 = "equeue.control_and"(%1959, %1958, %done_1707) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1960) : (!equeue.signal) -> ()
      %1961 = "equeue.control_start"() : () -> !equeue.signal
      %1962 = "equeue.memcpy"(%1961, %122, %127, %111, %c0_1667) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_1708 = "equeue.launch"(%1962, %126, %127, %157) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1709 = "equeue.launch"(%1962, %156, %157, %187) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1710 = "equeue.launch"(%1962, %186, %187, %217) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1711 = "equeue.launch"(%1962, %216, %217, %247) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1963 = "equeue.control_and"(%done_1711, %1962) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1964 = "equeue.memcpy"(%1961, %122, %133, %113, %c0_1667) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_1712 = "equeue.launch"(%1964, %132, %133, %163) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1713 = "equeue.launch"(%1964, %162, %163, %193) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1714 = "equeue.launch"(%1964, %192, %193, %223) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1715 = "equeue.launch"(%1964, %222, %223, %253) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1965 = "equeue.control_and"(%1964, %1963, %done_1715) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %1966 = "equeue.memcpy"(%1961, %122, %139, %115, %c0_1667) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_1716 = "equeue.launch"(%1966, %138, %139, %169) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1717 = "equeue.launch"(%1966, %168, %169, %199) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1718 = "equeue.launch"(%1966, %198, %199, %229) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1719 = "equeue.launch"(%1966, %228, %229, %259) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1967 = "equeue.control_and"(%1966, %1965, %done_1719) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %1968 = "equeue.memcpy"(%1961, %122, %145, %117, %c0_1667) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_1720 = "equeue.launch"(%1968, %144, %145, %175) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1721 = "equeue.launch"(%1968, %174, %175, %205) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1722 = "equeue.launch"(%1968, %204, %205, %235) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1723 = "equeue.launch"(%1968, %234, %235, %265) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1969 = "equeue.control_and"(%1968, %1967, %done_1723) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %1970 = "equeue.memcpy"(%1961, %122, %151, %119, %c0_1667) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_1724 = "equeue.launch"(%1970, %150, %151, %181) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1725 = "equeue.launch"(%1970, %180, %181, %211) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1726 = "equeue.launch"(%1970, %210, %211, %241) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1727 = "equeue.launch"(%1970, %240, %241, %271) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1971 = "equeue.control_and"(%1970, %1969, %done_1727) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1971) : (!equeue.signal) -> ()
      %1972 = "equeue.control_start"() : () -> !equeue.signal
      %1973 = "equeue.memcpy"(%1972, %122, %127, %111, %c0_1667) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_1728 = "equeue.launch"(%1973, %126, %127, %157) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1729 = "equeue.launch"(%1973, %156, %157, %187) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1730 = "equeue.launch"(%1973, %186, %187, %217) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1731 = "equeue.launch"(%1973, %216, %217, %247) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1974 = "equeue.control_and"(%done_1731, %1973) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1975 = "equeue.memcpy"(%1972, %122, %133, %113, %c0_1667) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_1732 = "equeue.launch"(%1975, %132, %133, %163) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1733 = "equeue.launch"(%1975, %162, %163, %193) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1734 = "equeue.launch"(%1975, %192, %193, %223) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1735 = "equeue.launch"(%1975, %222, %223, %253) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1976 = "equeue.control_and"(%1975, %1974, %done_1735) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %1977 = "equeue.memcpy"(%1972, %122, %139, %115, %c0_1667) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_1736 = "equeue.launch"(%1977, %138, %139, %169) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1737 = "equeue.launch"(%1977, %168, %169, %199) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1738 = "equeue.launch"(%1977, %198, %199, %229) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1739 = "equeue.launch"(%1977, %228, %229, %259) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1978 = "equeue.control_and"(%1977, %1976, %done_1739) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %1979 = "equeue.memcpy"(%1972, %122, %145, %117, %c0_1667) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_1740 = "equeue.launch"(%1979, %144, %145, %175) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1741 = "equeue.launch"(%1979, %174, %175, %205) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1742 = "equeue.launch"(%1979, %204, %205, %235) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1743 = "equeue.launch"(%1979, %234, %235, %265) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1980 = "equeue.control_and"(%1979, %1978, %done_1743) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %1981 = "equeue.memcpy"(%1972, %122, %151, %119, %c0_1667) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_1744 = "equeue.launch"(%1981, %150, %151, %181) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1745 = "equeue.launch"(%1981, %180, %181, %211) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1746 = "equeue.launch"(%1981, %210, %211, %241) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1747 = "equeue.launch"(%1981, %240, %241, %271) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1982 = "equeue.control_and"(%1981, %1980, %done_1747) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1982) : (!equeue.signal) -> ()
      %1983 = "equeue.control_start"() : () -> !equeue.signal
      %1984 = "equeue.memcpy"(%1983, %121, %129, %102) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32) -> !equeue.signal
      %1985 = "equeue.memcpy"(%1983, %121, %159, %104) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32) -> !equeue.signal
      %1986 = "equeue.control_and"(%1984, %1985) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1987 = "equeue.memcpy"(%1983, %121, %189, %106) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32) -> !equeue.signal
      %1988 = "equeue.control_and"(%1986, %1987) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1989 = "equeue.memcpy"(%1983, %121, %219, %108) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32) -> !equeue.signal
      %1990 = "equeue.control_and"(%1988, %1989) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %1991 = "equeue.memcpy"(%1983, %121, %249, %110) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32) -> !equeue.signal
      %1992 = "equeue.control_and"(%1990, %1991) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%1992) : (!equeue.signal) -> ()
      %1993 = "equeue.control_start"() : () -> !equeue.signal
      %done_1748 = "equeue.launch"(%1993, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1749 = "equeue.launch"(%1993, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1994 = "equeue.control_and"(%done_1748, %done_1749) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1750 = "equeue.launch"(%1993, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1995 = "equeue.control_and"(%1994, %done_1750) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1751 = "equeue.launch"(%1993, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1996 = "equeue.control_and"(%1995, %done_1751) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1752 = "equeue.launch"(%1993, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %1997 = "equeue.control_and"(%1996, %done_1752) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1753 = "equeue.launch"(%1993, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1998 = "equeue.control_and"(%1997, %done_1753) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1754 = "equeue.launch"(%1993, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %1999 = "equeue.control_and"(%1998, %done_1754) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1755 = "equeue.launch"(%1993, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2000 = "equeue.control_and"(%1999, %done_1755) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1756 = "equeue.launch"(%1993, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2001 = "equeue.control_and"(%2000, %done_1756) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1757 = "equeue.launch"(%1993, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2002 = "equeue.control_and"(%2001, %done_1757) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1758 = "equeue.launch"(%1993, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2003 = "equeue.control_and"(%2002, %done_1758) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1759 = "equeue.launch"(%1993, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2004 = "equeue.control_and"(%2003, %done_1759) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1760 = "equeue.launch"(%1993, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2005 = "equeue.control_and"(%2004, %done_1760) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1761 = "equeue.launch"(%1993, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2006 = "equeue.control_and"(%2005, %done_1761) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1762 = "equeue.launch"(%1993, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2007 = "equeue.control_and"(%2006, %done_1762) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1763 = "equeue.launch"(%1993, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2008 = "equeue.control_and"(%2007, %done_1763) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1764 = "equeue.launch"(%1993, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2009 = "equeue.control_and"(%2008, %done_1764) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1765 = "equeue.launch"(%1993, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2010 = "equeue.control_and"(%2009, %done_1765) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1766 = "equeue.launch"(%1993, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2011 = "equeue.control_and"(%2010, %done_1766) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1767 = "equeue.launch"(%1993, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2012 = "equeue.control_and"(%2011, %done_1767) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1768 = "equeue.launch"(%1993, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2013 = "equeue.control_and"(%2012, %done_1768) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1769 = "equeue.launch"(%1993, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2014 = "equeue.control_and"(%2013, %done_1769) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1770 = "equeue.launch"(%1993, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2015 = "equeue.control_and"(%2014, %done_1770) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1771 = "equeue.launch"(%1993, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2016 = "equeue.control_and"(%2015, %done_1771) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1772 = "equeue.launch"(%1993, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2017 = "equeue.control_and"(%2016, %done_1772) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2017) : (!equeue.signal) -> ()
      %2018 = "equeue.control_start"() : () -> !equeue.signal
      %2019 = "equeue.memcpy"(%2018, %121, %129, %102, %c0_1667) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      "equeue.await"(%2019) : (!equeue.signal) -> ()
      %2020 = "equeue.control_start"() : () -> !equeue.signal
      %done_1773 = "equeue.launch"(%2020, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1774 = "equeue.launch"(%2020, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2021 = "equeue.control_and"(%done_1773, %done_1774) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1775 = "equeue.launch"(%2020, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2022 = "equeue.control_and"(%2021, %done_1775) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1776 = "equeue.launch"(%2020, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2023 = "equeue.control_and"(%2022, %done_1776) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1777 = "equeue.launch"(%2020, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2024 = "equeue.control_and"(%2023, %done_1777) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1778 = "equeue.launch"(%2020, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2025 = "equeue.control_and"(%2024, %done_1778) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1779 = "equeue.launch"(%2020, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2026 = "equeue.control_and"(%2025, %done_1779) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1780 = "equeue.launch"(%2020, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2027 = "equeue.control_and"(%2026, %done_1780) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1781 = "equeue.launch"(%2020, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2028 = "equeue.control_and"(%2027, %done_1781) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1782 = "equeue.launch"(%2020, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2029 = "equeue.control_and"(%2028, %done_1782) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1783 = "equeue.launch"(%2020, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2030 = "equeue.control_and"(%2029, %done_1783) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1784 = "equeue.launch"(%2020, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2031 = "equeue.control_and"(%2030, %done_1784) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1785 = "equeue.launch"(%2020, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2032 = "equeue.control_and"(%2031, %done_1785) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1786 = "equeue.launch"(%2020, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2033 = "equeue.control_and"(%2032, %done_1786) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1787 = "equeue.launch"(%2020, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2034 = "equeue.control_and"(%2033, %done_1787) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1788 = "equeue.launch"(%2020, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2035 = "equeue.control_and"(%2034, %done_1788) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1789 = "equeue.launch"(%2020, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2036 = "equeue.control_and"(%2035, %done_1789) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1790 = "equeue.launch"(%2020, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2037 = "equeue.control_and"(%2036, %done_1790) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1791 = "equeue.launch"(%2020, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2038 = "equeue.control_and"(%2037, %done_1791) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1792 = "equeue.launch"(%2020, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2039 = "equeue.control_and"(%2038, %done_1792) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1793 = "equeue.launch"(%2020, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2040 = "equeue.control_and"(%2039, %done_1793) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1794 = "equeue.launch"(%2020, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2041 = "equeue.control_and"(%2040, %done_1794) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1795 = "equeue.launch"(%2020, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2042 = "equeue.control_and"(%2041, %done_1795) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1796 = "equeue.launch"(%2020, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2043 = "equeue.control_and"(%2042, %done_1796) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1797 = "equeue.launch"(%2020, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2044 = "equeue.control_and"(%2043, %done_1797) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2044) : (!equeue.signal) -> ()
      %2045 = "equeue.control_start"() : () -> !equeue.signal
      %2046 = "equeue.memcpy"(%2045, %121, %129, %102, %c0_1667) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      "equeue.await"(%2046) : (!equeue.signal) -> ()
      %2047 = "equeue.control_start"() : () -> !equeue.signal
      %done_1798 = "equeue.launch"(%2047, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1799 = "equeue.launch"(%2047, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2048 = "equeue.control_and"(%done_1798, %done_1799) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1800 = "equeue.launch"(%2047, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2049 = "equeue.control_and"(%2048, %done_1800) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1801 = "equeue.launch"(%2047, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2050 = "equeue.control_and"(%2049, %done_1801) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1802 = "equeue.launch"(%2047, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2051 = "equeue.control_and"(%2050, %done_1802) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1803 = "equeue.launch"(%2047, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2052 = "equeue.control_and"(%2051, %done_1803) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1804 = "equeue.launch"(%2047, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2053 = "equeue.control_and"(%2052, %done_1804) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1805 = "equeue.launch"(%2047, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2054 = "equeue.control_and"(%2053, %done_1805) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1806 = "equeue.launch"(%2047, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2055 = "equeue.control_and"(%2054, %done_1806) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1807 = "equeue.launch"(%2047, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2056 = "equeue.control_and"(%2055, %done_1807) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1808 = "equeue.launch"(%2047, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2057 = "equeue.control_and"(%2056, %done_1808) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1809 = "equeue.launch"(%2047, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2058 = "equeue.control_and"(%2057, %done_1809) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1810 = "equeue.launch"(%2047, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2059 = "equeue.control_and"(%2058, %done_1810) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1811 = "equeue.launch"(%2047, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2060 = "equeue.control_and"(%2059, %done_1811) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1812 = "equeue.launch"(%2047, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2061 = "equeue.control_and"(%2060, %done_1812) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1813 = "equeue.launch"(%2047, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2062 = "equeue.control_and"(%2061, %done_1813) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1814 = "equeue.launch"(%2047, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2063 = "equeue.control_and"(%2062, %done_1814) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1815 = "equeue.launch"(%2047, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2064 = "equeue.control_and"(%2063, %done_1815) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1816 = "equeue.launch"(%2047, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2065 = "equeue.control_and"(%2064, %done_1816) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1817 = "equeue.launch"(%2047, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2066 = "equeue.control_and"(%2065, %done_1817) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1818 = "equeue.launch"(%2047, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2067 = "equeue.control_and"(%2066, %done_1818) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1819 = "equeue.launch"(%2047, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2068 = "equeue.control_and"(%2067, %done_1819) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1820 = "equeue.launch"(%2047, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2069 = "equeue.control_and"(%2068, %done_1820) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1821 = "equeue.launch"(%2047, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2070 = "equeue.control_and"(%2069, %done_1821) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1822 = "equeue.launch"(%2047, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2071 = "equeue.control_and"(%2070, %done_1822) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2071) : (!equeue.signal) -> ()
      %2072 = "equeue.control_start"() : () -> !equeue.signal
      %2073 = "equeue.memcpy"(%2072, %121, %129, %102, %c0_1667) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      "equeue.await"(%2073) : (!equeue.signal) -> ()
      %2074 = "equeue.control_start"() : () -> !equeue.signal
      %done_1823 = "equeue.launch"(%2074, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1824 = "equeue.launch"(%2074, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2075 = "equeue.control_and"(%done_1823, %done_1824) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1825 = "equeue.launch"(%2074, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2076 = "equeue.control_and"(%2075, %done_1825) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1826 = "equeue.launch"(%2074, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2077 = "equeue.control_and"(%2076, %done_1826) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1827 = "equeue.launch"(%2074, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2078 = "equeue.control_and"(%2077, %done_1827) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1828 = "equeue.launch"(%2074, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2079 = "equeue.control_and"(%2078, %done_1828) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1829 = "equeue.launch"(%2074, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2080 = "equeue.control_and"(%2079, %done_1829) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1830 = "equeue.launch"(%2074, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2081 = "equeue.control_and"(%2080, %done_1830) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1831 = "equeue.launch"(%2074, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2082 = "equeue.control_and"(%2081, %done_1831) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1832 = "equeue.launch"(%2074, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2083 = "equeue.control_and"(%2082, %done_1832) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1833 = "equeue.launch"(%2074, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2084 = "equeue.control_and"(%2083, %done_1833) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1834 = "equeue.launch"(%2074, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2085 = "equeue.control_and"(%2084, %done_1834) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1835 = "equeue.launch"(%2074, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2086 = "equeue.control_and"(%2085, %done_1835) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1836 = "equeue.launch"(%2074, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2087 = "equeue.control_and"(%2086, %done_1836) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1837 = "equeue.launch"(%2074, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2088 = "equeue.control_and"(%2087, %done_1837) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1838 = "equeue.launch"(%2074, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2089 = "equeue.control_and"(%2088, %done_1838) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1839 = "equeue.launch"(%2074, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2090 = "equeue.control_and"(%2089, %done_1839) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1840 = "equeue.launch"(%2074, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2091 = "equeue.control_and"(%2090, %done_1840) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1841 = "equeue.launch"(%2074, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2092 = "equeue.control_and"(%2091, %done_1841) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1842 = "equeue.launch"(%2074, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2093 = "equeue.control_and"(%2092, %done_1842) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1843 = "equeue.launch"(%2074, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2094 = "equeue.control_and"(%2093, %done_1843) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1844 = "equeue.launch"(%2074, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2095 = "equeue.control_and"(%2094, %done_1844) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1845 = "equeue.launch"(%2074, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2096 = "equeue.control_and"(%2095, %done_1845) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1846 = "equeue.launch"(%2074, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2097 = "equeue.control_and"(%2096, %done_1846) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1847 = "equeue.launch"(%2074, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2098 = "equeue.control_and"(%2097, %done_1847) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2098) : (!equeue.signal) -> ()
      %2099 = "equeue.control_start"() : () -> !equeue.signal
      %2100 = "equeue.memcpy"(%2099, %121, %129, %102, %c0_1667) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      "equeue.await"(%2100) : (!equeue.signal) -> ()
      %2101 = "equeue.control_start"() : () -> !equeue.signal
      %done_1848 = "equeue.launch"(%2101, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1849 = "equeue.launch"(%2101, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2102 = "equeue.control_and"(%done_1848, %done_1849) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1850 = "equeue.launch"(%2101, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2103 = "equeue.control_and"(%2102, %done_1850) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1851 = "equeue.launch"(%2101, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2104 = "equeue.control_and"(%2103, %done_1851) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1852 = "equeue.launch"(%2101, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2105 = "equeue.control_and"(%2104, %done_1852) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1853 = "equeue.launch"(%2101, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2106 = "equeue.control_and"(%2105, %done_1853) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1854 = "equeue.launch"(%2101, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2107 = "equeue.control_and"(%2106, %done_1854) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1855 = "equeue.launch"(%2101, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2108 = "equeue.control_and"(%2107, %done_1855) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1856 = "equeue.launch"(%2101, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2109 = "equeue.control_and"(%2108, %done_1856) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1857 = "equeue.launch"(%2101, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2110 = "equeue.control_and"(%2109, %done_1857) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1858 = "equeue.launch"(%2101, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2111 = "equeue.control_and"(%2110, %done_1858) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1859 = "equeue.launch"(%2101, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2112 = "equeue.control_and"(%2111, %done_1859) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1860 = "equeue.launch"(%2101, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2113 = "equeue.control_and"(%2112, %done_1860) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1861 = "equeue.launch"(%2101, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2114 = "equeue.control_and"(%2113, %done_1861) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1862 = "equeue.launch"(%2101, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2115 = "equeue.control_and"(%2114, %done_1862) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1863 = "equeue.launch"(%2101, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2116 = "equeue.control_and"(%2115, %done_1863) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1864 = "equeue.launch"(%2101, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2117 = "equeue.control_and"(%2116, %done_1864) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1865 = "equeue.launch"(%2101, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2118 = "equeue.control_and"(%2117, %done_1865) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1866 = "equeue.launch"(%2101, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2119 = "equeue.control_and"(%2118, %done_1866) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1867 = "equeue.launch"(%2101, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2120 = "equeue.control_and"(%2119, %done_1867) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1868 = "equeue.launch"(%2101, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2121 = "equeue.control_and"(%2120, %done_1868) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1869 = "equeue.launch"(%2101, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2122 = "equeue.control_and"(%2121, %done_1869) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1870 = "equeue.launch"(%2101, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2123 = "equeue.control_and"(%2122, %done_1870) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1871 = "equeue.launch"(%2101, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2124 = "equeue.control_and"(%2123, %done_1871) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1872 = "equeue.launch"(%2101, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2125 = "equeue.control_and"(%2124, %done_1872) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2125) : (!equeue.signal) -> ()
      %2126 = "equeue.control_start"() : () -> !equeue.signal
      %2127 = "equeue.memcpy"(%2126, %121, %129, %102, %c0_1667) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      "equeue.await"(%2127) : (!equeue.signal) -> ()
      %2128 = "equeue.control_start"() : () -> !equeue.signal
      %done_1873 = "equeue.launch"(%2128, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1874 = "equeue.launch"(%2128, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2129 = "equeue.control_and"(%done_1873, %done_1874) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1875 = "equeue.launch"(%2128, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2130 = "equeue.control_and"(%2129, %done_1875) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1876 = "equeue.launch"(%2128, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2131 = "equeue.control_and"(%2130, %done_1876) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1877 = "equeue.launch"(%2128, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2132 = "equeue.control_and"(%2131, %done_1877) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1878 = "equeue.launch"(%2128, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2133 = "equeue.control_and"(%2132, %done_1878) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1879 = "equeue.launch"(%2128, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2134 = "equeue.control_and"(%2133, %done_1879) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1880 = "equeue.launch"(%2128, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2135 = "equeue.control_and"(%2134, %done_1880) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1881 = "equeue.launch"(%2128, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2136 = "equeue.control_and"(%2135, %done_1881) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1882 = "equeue.launch"(%2128, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2137 = "equeue.control_and"(%2136, %done_1882) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1883 = "equeue.launch"(%2128, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2138 = "equeue.control_and"(%2137, %done_1883) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1884 = "equeue.launch"(%2128, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2139 = "equeue.control_and"(%2138, %done_1884) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1885 = "equeue.launch"(%2128, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2140 = "equeue.control_and"(%2139, %done_1885) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1886 = "equeue.launch"(%2128, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2141 = "equeue.control_and"(%2140, %done_1886) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1887 = "equeue.launch"(%2128, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2142 = "equeue.control_and"(%2141, %done_1887) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1888 = "equeue.launch"(%2128, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2143 = "equeue.control_and"(%2142, %done_1888) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1889 = "equeue.launch"(%2128, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2144 = "equeue.control_and"(%2143, %done_1889) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1890 = "equeue.launch"(%2128, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2145 = "equeue.control_and"(%2144, %done_1890) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1891 = "equeue.launch"(%2128, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2146 = "equeue.control_and"(%2145, %done_1891) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1892 = "equeue.launch"(%2128, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2147 = "equeue.control_and"(%2146, %done_1892) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1893 = "equeue.launch"(%2128, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2148 = "equeue.control_and"(%2147, %done_1893) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1894 = "equeue.launch"(%2128, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2149 = "equeue.control_and"(%2148, %done_1894) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1895 = "equeue.launch"(%2128, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2150 = "equeue.control_and"(%2149, %done_1895) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1896 = "equeue.launch"(%2128, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2151 = "equeue.control_and"(%2150, %done_1896) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1897 = "equeue.launch"(%2128, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2152 = "equeue.control_and"(%2151, %done_1897) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2152) : (!equeue.signal) -> ()
      %2153 = "equeue.control_start"() : () -> !equeue.signal
      %2154 = "equeue.memcpy"(%2153, %121, %129, %102, %c0_1667) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      "equeue.await"(%2154) : (!equeue.signal) -> ()
      %2155 = "equeue.control_start"() : () -> !equeue.signal
      %done_1898 = "equeue.launch"(%2155, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1899 = "equeue.launch"(%2155, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2156 = "equeue.control_and"(%done_1898, %done_1899) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1900 = "equeue.launch"(%2155, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2157 = "equeue.control_and"(%2156, %done_1900) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1901 = "equeue.launch"(%2155, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2158 = "equeue.control_and"(%2157, %done_1901) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1902 = "equeue.launch"(%2155, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2159 = "equeue.control_and"(%2158, %done_1902) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1903 = "equeue.launch"(%2155, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2160 = "equeue.control_and"(%2159, %done_1903) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1904 = "equeue.launch"(%2155, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2161 = "equeue.control_and"(%2160, %done_1904) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1905 = "equeue.launch"(%2155, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2162 = "equeue.control_and"(%2161, %done_1905) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1906 = "equeue.launch"(%2155, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2163 = "equeue.control_and"(%2162, %done_1906) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1907 = "equeue.launch"(%2155, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2164 = "equeue.control_and"(%2163, %done_1907) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1908 = "equeue.launch"(%2155, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2165 = "equeue.control_and"(%2164, %done_1908) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1909 = "equeue.launch"(%2155, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2166 = "equeue.control_and"(%2165, %done_1909) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1910 = "equeue.launch"(%2155, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2167 = "equeue.control_and"(%2166, %done_1910) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1911 = "equeue.launch"(%2155, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2168 = "equeue.control_and"(%2167, %done_1911) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1912 = "equeue.launch"(%2155, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2169 = "equeue.control_and"(%2168, %done_1912) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1913 = "equeue.launch"(%2155, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2170 = "equeue.control_and"(%2169, %done_1913) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1914 = "equeue.launch"(%2155, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2171 = "equeue.control_and"(%2170, %done_1914) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1915 = "equeue.launch"(%2155, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2172 = "equeue.control_and"(%2171, %done_1915) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1916 = "equeue.launch"(%2155, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2173 = "equeue.control_and"(%2172, %done_1916) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1917 = "equeue.launch"(%2155, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2174 = "equeue.control_and"(%2173, %done_1917) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1918 = "equeue.launch"(%2155, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2175 = "equeue.control_and"(%2174, %done_1918) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1919 = "equeue.launch"(%2155, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2176 = "equeue.control_and"(%2175, %done_1919) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1920 = "equeue.launch"(%2155, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2177 = "equeue.control_and"(%2176, %done_1920) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1921 = "equeue.launch"(%2155, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2178 = "equeue.control_and"(%2177, %done_1921) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1922 = "equeue.launch"(%2155, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2179 = "equeue.control_and"(%2178, %done_1922) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2179) : (!equeue.signal) -> ()
      %2180 = "equeue.control_start"() : () -> !equeue.signal
      %2181 = "equeue.memcpy"(%2180, %121, %129, %102, %c0_1667) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      "equeue.await"(%2181) : (!equeue.signal) -> ()
      %2182 = "equeue.control_start"() : () -> !equeue.signal
      %done_1923 = "equeue.launch"(%2182, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1924 = "equeue.launch"(%2182, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2183 = "equeue.control_and"(%done_1923, %done_1924) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1925 = "equeue.launch"(%2182, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2184 = "equeue.control_and"(%2183, %done_1925) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1926 = "equeue.launch"(%2182, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2185 = "equeue.control_and"(%2184, %done_1926) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1927 = "equeue.launch"(%2182, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2186 = "equeue.control_and"(%2185, %done_1927) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1928 = "equeue.launch"(%2182, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2187 = "equeue.control_and"(%2186, %done_1928) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1929 = "equeue.launch"(%2182, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2188 = "equeue.control_and"(%2187, %done_1929) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1930 = "equeue.launch"(%2182, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2189 = "equeue.control_and"(%2188, %done_1930) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1931 = "equeue.launch"(%2182, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2190 = "equeue.control_and"(%2189, %done_1931) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1932 = "equeue.launch"(%2182, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2191 = "equeue.control_and"(%2190, %done_1932) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1933 = "equeue.launch"(%2182, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2192 = "equeue.control_and"(%2191, %done_1933) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1934 = "equeue.launch"(%2182, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2193 = "equeue.control_and"(%2192, %done_1934) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1935 = "equeue.launch"(%2182, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2194 = "equeue.control_and"(%2193, %done_1935) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1936 = "equeue.launch"(%2182, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2195 = "equeue.control_and"(%2194, %done_1936) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1937 = "equeue.launch"(%2182, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2196 = "equeue.control_and"(%2195, %done_1937) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1938 = "equeue.launch"(%2182, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2197 = "equeue.control_and"(%2196, %done_1938) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1939 = "equeue.launch"(%2182, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2198 = "equeue.control_and"(%2197, %done_1939) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1940 = "equeue.launch"(%2182, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2199 = "equeue.control_and"(%2198, %done_1940) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1941 = "equeue.launch"(%2182, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2200 = "equeue.control_and"(%2199, %done_1941) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1942 = "equeue.launch"(%2182, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2201 = "equeue.control_and"(%2200, %done_1942) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1943 = "equeue.launch"(%2182, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2202 = "equeue.control_and"(%2201, %done_1943) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1944 = "equeue.launch"(%2182, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2203 = "equeue.control_and"(%2202, %done_1944) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1945 = "equeue.launch"(%2182, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2204 = "equeue.control_and"(%2203, %done_1945) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1946 = "equeue.launch"(%2182, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2205 = "equeue.control_and"(%2204, %done_1946) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1947 = "equeue.launch"(%2182, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2206 = "equeue.control_and"(%2205, %done_1947) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2206) : (!equeue.signal) -> ()
      %2207 = "equeue.control_start"() : () -> !equeue.signal
      %2208 = "equeue.memcpy"(%2207, %121, %129, %102, %c0_1667) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      "equeue.await"(%2208) : (!equeue.signal) -> ()
      %2209 = "equeue.control_start"() : () -> !equeue.signal
      %done_1948 = "equeue.launch"(%2209, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1949 = "equeue.launch"(%2209, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2210 = "equeue.control_and"(%done_1948, %done_1949) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1950 = "equeue.launch"(%2209, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2211 = "equeue.control_and"(%2210, %done_1950) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1951 = "equeue.launch"(%2209, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2212 = "equeue.control_and"(%2211, %done_1951) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1952 = "equeue.launch"(%2209, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2213 = "equeue.control_and"(%2212, %done_1952) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1953 = "equeue.launch"(%2209, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2214 = "equeue.control_and"(%2213, %done_1953) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1954 = "equeue.launch"(%2209, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2215 = "equeue.control_and"(%2214, %done_1954) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1955 = "equeue.launch"(%2209, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2216 = "equeue.control_and"(%2215, %done_1955) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1956 = "equeue.launch"(%2209, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2217 = "equeue.control_and"(%2216, %done_1956) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1957 = "equeue.launch"(%2209, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2218 = "equeue.control_and"(%2217, %done_1957) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1958 = "equeue.launch"(%2209, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2219 = "equeue.control_and"(%2218, %done_1958) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1959 = "equeue.launch"(%2209, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2220 = "equeue.control_and"(%2219, %done_1959) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1960 = "equeue.launch"(%2209, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2221 = "equeue.control_and"(%2220, %done_1960) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1961 = "equeue.launch"(%2209, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2222 = "equeue.control_and"(%2221, %done_1961) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1962 = "equeue.launch"(%2209, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2223 = "equeue.control_and"(%2222, %done_1962) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1963 = "equeue.launch"(%2209, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2224 = "equeue.control_and"(%2223, %done_1963) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1964 = "equeue.launch"(%2209, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2225 = "equeue.control_and"(%2224, %done_1964) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1965 = "equeue.launch"(%2209, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2226 = "equeue.control_and"(%2225, %done_1965) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1966 = "equeue.launch"(%2209, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2227 = "equeue.control_and"(%2226, %done_1966) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1967 = "equeue.launch"(%2209, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2228 = "equeue.control_and"(%2227, %done_1967) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1968 = "equeue.launch"(%2209, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2229 = "equeue.control_and"(%2228, %done_1968) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1969 = "equeue.launch"(%2209, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2230 = "equeue.control_and"(%2229, %done_1969) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1970 = "equeue.launch"(%2209, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2231 = "equeue.control_and"(%2230, %done_1970) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1971 = "equeue.launch"(%2209, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2232 = "equeue.control_and"(%2231, %done_1971) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1972 = "equeue.launch"(%2209, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2233 = "equeue.control_and"(%2232, %done_1972) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2233) : (!equeue.signal) -> ()
      %2234 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%2234) : (!equeue.signal) -> ()
      %2235 = "equeue.control_start"() : () -> !equeue.signal
      %done_1973 = "equeue.launch"(%2235, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1974 = "equeue.launch"(%2235, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2236 = "equeue.control_and"(%done_1973, %done_1974) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1975 = "equeue.launch"(%2235, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2237 = "equeue.control_and"(%2236, %done_1975) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1976 = "equeue.launch"(%2235, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2238 = "equeue.control_and"(%2237, %done_1976) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1977 = "equeue.launch"(%2235, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2239 = "equeue.control_and"(%2238, %done_1977) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1978 = "equeue.launch"(%2235, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2240 = "equeue.control_and"(%2239, %done_1978) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1979 = "equeue.launch"(%2235, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2241 = "equeue.control_and"(%2240, %done_1979) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1980 = "equeue.launch"(%2235, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2242 = "equeue.control_and"(%2241, %done_1980) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1981 = "equeue.launch"(%2235, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2243 = "equeue.control_and"(%2242, %done_1981) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1982 = "equeue.launch"(%2235, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2244 = "equeue.control_and"(%2243, %done_1982) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1983 = "equeue.launch"(%2235, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2245 = "equeue.control_and"(%2244, %done_1983) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1984 = "equeue.launch"(%2235, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2246 = "equeue.control_and"(%2245, %done_1984) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1985 = "equeue.launch"(%2235, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2247 = "equeue.control_and"(%2246, %done_1985) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1986 = "equeue.launch"(%2235, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2248 = "equeue.control_and"(%2247, %done_1986) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1987 = "equeue.launch"(%2235, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2249 = "equeue.control_and"(%2248, %done_1987) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1988 = "equeue.launch"(%2235, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2250 = "equeue.control_and"(%2249, %done_1988) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1989 = "equeue.launch"(%2235, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2251 = "equeue.control_and"(%2250, %done_1989) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1990 = "equeue.launch"(%2235, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2252 = "equeue.control_and"(%2251, %done_1990) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1991 = "equeue.launch"(%2235, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2253 = "equeue.control_and"(%2252, %done_1991) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1992 = "equeue.launch"(%2235, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2254 = "equeue.control_and"(%2253, %done_1992) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1993 = "equeue.launch"(%2235, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2255 = "equeue.control_and"(%2254, %done_1993) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1994 = "equeue.launch"(%2235, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2256 = "equeue.control_and"(%2255, %done_1994) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1995 = "equeue.launch"(%2235, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2257 = "equeue.control_and"(%2256, %done_1995) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1996 = "equeue.launch"(%2235, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2258 = "equeue.control_and"(%2257, %done_1996) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_1997 = "equeue.launch"(%2235, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2259 = "equeue.control_and"(%2258, %done_1997) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2259) : (!equeue.signal) -> ()
      %2260 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%2260) : (!equeue.signal) -> ()
      %2261 = "equeue.control_start"() : () -> !equeue.signal
      %done_1998 = "equeue.launch"(%2261, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_1999 = "equeue.launch"(%2261, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2262 = "equeue.control_and"(%done_1998, %done_1999) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2000 = "equeue.launch"(%2261, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2263 = "equeue.control_and"(%2262, %done_2000) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2001 = "equeue.launch"(%2261, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2264 = "equeue.control_and"(%2263, %done_2001) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2002 = "equeue.launch"(%2261, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2265 = "equeue.control_and"(%2264, %done_2002) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2003 = "equeue.launch"(%2261, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2266 = "equeue.control_and"(%2265, %done_2003) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2004 = "equeue.launch"(%2261, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2267 = "equeue.control_and"(%2266, %done_2004) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2005 = "equeue.launch"(%2261, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2268 = "equeue.control_and"(%2267, %done_2005) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2006 = "equeue.launch"(%2261, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2269 = "equeue.control_and"(%2268, %done_2006) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2007 = "equeue.launch"(%2261, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2270 = "equeue.control_and"(%2269, %done_2007) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2008 = "equeue.launch"(%2261, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2271 = "equeue.control_and"(%2270, %done_2008) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2009 = "equeue.launch"(%2261, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2272 = "equeue.control_and"(%2271, %done_2009) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2010 = "equeue.launch"(%2261, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2273 = "equeue.control_and"(%2272, %done_2010) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2011 = "equeue.launch"(%2261, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2274 = "equeue.control_and"(%2273, %done_2011) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2012 = "equeue.launch"(%2261, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2275 = "equeue.control_and"(%2274, %done_2012) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2013 = "equeue.launch"(%2261, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2276 = "equeue.control_and"(%2275, %done_2013) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2014 = "equeue.launch"(%2261, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2277 = "equeue.control_and"(%2276, %done_2014) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2015 = "equeue.launch"(%2261, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2278 = "equeue.control_and"(%2277, %done_2015) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2016 = "equeue.launch"(%2261, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2279 = "equeue.control_and"(%2278, %done_2016) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2017 = "equeue.launch"(%2261, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2280 = "equeue.control_and"(%2279, %done_2017) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2018 = "equeue.launch"(%2261, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2281 = "equeue.control_and"(%2280, %done_2018) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2019 = "equeue.launch"(%2261, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2282 = "equeue.control_and"(%2281, %done_2019) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2020 = "equeue.launch"(%2261, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2283 = "equeue.control_and"(%2282, %done_2020) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2021 = "equeue.launch"(%2261, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2284 = "equeue.control_and"(%2283, %done_2021) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2022 = "equeue.launch"(%2261, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2285 = "equeue.control_and"(%2284, %done_2022) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2285) : (!equeue.signal) -> ()
      %2286 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%2286) : (!equeue.signal) -> ()
      %2287 = "equeue.control_start"() : () -> !equeue.signal
      %done_2023 = "equeue.launch"(%2287, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2024 = "equeue.launch"(%2287, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2288 = "equeue.control_and"(%done_2023, %done_2024) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2025 = "equeue.launch"(%2287, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2289 = "equeue.control_and"(%2288, %done_2025) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2026 = "equeue.launch"(%2287, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2290 = "equeue.control_and"(%2289, %done_2026) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2027 = "equeue.launch"(%2287, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2291 = "equeue.control_and"(%2290, %done_2027) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2028 = "equeue.launch"(%2287, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2292 = "equeue.control_and"(%2291, %done_2028) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2029 = "equeue.launch"(%2287, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2293 = "equeue.control_and"(%2292, %done_2029) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2030 = "equeue.launch"(%2287, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2294 = "equeue.control_and"(%2293, %done_2030) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2031 = "equeue.launch"(%2287, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2295 = "equeue.control_and"(%2294, %done_2031) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2032 = "equeue.launch"(%2287, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2296 = "equeue.control_and"(%2295, %done_2032) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2033 = "equeue.launch"(%2287, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2297 = "equeue.control_and"(%2296, %done_2033) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2034 = "equeue.launch"(%2287, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2298 = "equeue.control_and"(%2297, %done_2034) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2035 = "equeue.launch"(%2287, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2299 = "equeue.control_and"(%2298, %done_2035) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2036 = "equeue.launch"(%2287, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2300 = "equeue.control_and"(%2299, %done_2036) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2037 = "equeue.launch"(%2287, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2301 = "equeue.control_and"(%2300, %done_2037) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2038 = "equeue.launch"(%2287, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2302 = "equeue.control_and"(%2301, %done_2038) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2039 = "equeue.launch"(%2287, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2303 = "equeue.control_and"(%2302, %done_2039) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2040 = "equeue.launch"(%2287, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2304 = "equeue.control_and"(%2303, %done_2040) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2041 = "equeue.launch"(%2287, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2305 = "equeue.control_and"(%2304, %done_2041) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2042 = "equeue.launch"(%2287, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2306 = "equeue.control_and"(%2305, %done_2042) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2043 = "equeue.launch"(%2287, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2307 = "equeue.control_and"(%2306, %done_2043) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2044 = "equeue.launch"(%2287, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2308 = "equeue.control_and"(%2307, %done_2044) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2045 = "equeue.launch"(%2287, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2309 = "equeue.control_and"(%2308, %done_2045) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2046 = "equeue.launch"(%2287, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2310 = "equeue.control_and"(%2309, %done_2046) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2047 = "equeue.launch"(%2287, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2311 = "equeue.control_and"(%2310, %done_2047) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2311) : (!equeue.signal) -> ()
      %2312 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%2312) : (!equeue.signal) -> ()
      %2313 = "equeue.control_start"() : () -> !equeue.signal
      %done_2048 = "equeue.launch"(%2313, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2049 = "equeue.launch"(%2313, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2314 = "equeue.control_and"(%done_2048, %done_2049) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2050 = "equeue.launch"(%2313, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2315 = "equeue.control_and"(%2314, %done_2050) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2051 = "equeue.launch"(%2313, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2316 = "equeue.control_and"(%2315, %done_2051) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2052 = "equeue.launch"(%2313, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2317 = "equeue.control_and"(%2316, %done_2052) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2053 = "equeue.launch"(%2313, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2318 = "equeue.control_and"(%2317, %done_2053) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2054 = "equeue.launch"(%2313, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2319 = "equeue.control_and"(%2318, %done_2054) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2055 = "equeue.launch"(%2313, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2320 = "equeue.control_and"(%2319, %done_2055) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2056 = "equeue.launch"(%2313, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2321 = "equeue.control_and"(%2320, %done_2056) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2057 = "equeue.launch"(%2313, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2322 = "equeue.control_and"(%2321, %done_2057) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2058 = "equeue.launch"(%2313, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2323 = "equeue.control_and"(%2322, %done_2058) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2059 = "equeue.launch"(%2313, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2324 = "equeue.control_and"(%2323, %done_2059) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2060 = "equeue.launch"(%2313, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2325 = "equeue.control_and"(%2324, %done_2060) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2061 = "equeue.launch"(%2313, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2326 = "equeue.control_and"(%2325, %done_2061) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2062 = "equeue.launch"(%2313, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2327 = "equeue.control_and"(%2326, %done_2062) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2063 = "equeue.launch"(%2313, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2328 = "equeue.control_and"(%2327, %done_2063) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2064 = "equeue.launch"(%2313, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2329 = "equeue.control_and"(%2328, %done_2064) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2065 = "equeue.launch"(%2313, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2330 = "equeue.control_and"(%2329, %done_2065) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2066 = "equeue.launch"(%2313, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2331 = "equeue.control_and"(%2330, %done_2066) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2067 = "equeue.launch"(%2313, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2332 = "equeue.control_and"(%2331, %done_2067) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2068 = "equeue.launch"(%2313, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2333 = "equeue.control_and"(%2332, %done_2068) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2069 = "equeue.launch"(%2313, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2334 = "equeue.control_and"(%2333, %done_2069) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2070 = "equeue.launch"(%2313, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2335 = "equeue.control_and"(%2334, %done_2070) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2071 = "equeue.launch"(%2313, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2336 = "equeue.control_and"(%2335, %done_2071) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2072 = "equeue.launch"(%2313, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2337 = "equeue.control_and"(%2336, %done_2072) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2337) : (!equeue.signal) -> ()
      %2338 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%2338) : (!equeue.signal) -> ()
      %2339 = "equeue.control_start"() : () -> !equeue.signal
      %done_2073 = "equeue.launch"(%2339, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2074 = "equeue.launch"(%2339, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2340 = "equeue.control_and"(%done_2073, %done_2074) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2075 = "equeue.launch"(%2339, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2341 = "equeue.control_and"(%2340, %done_2075) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2076 = "equeue.launch"(%2339, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2342 = "equeue.control_and"(%2341, %done_2076) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2077 = "equeue.launch"(%2339, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2343 = "equeue.control_and"(%2342, %done_2077) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2078 = "equeue.launch"(%2339, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2344 = "equeue.control_and"(%2343, %done_2078) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2079 = "equeue.launch"(%2339, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2345 = "equeue.control_and"(%2344, %done_2079) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2080 = "equeue.launch"(%2339, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2346 = "equeue.control_and"(%2345, %done_2080) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2081 = "equeue.launch"(%2339, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2347 = "equeue.control_and"(%2346, %done_2081) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2082 = "equeue.launch"(%2339, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2348 = "equeue.control_and"(%2347, %done_2082) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2083 = "equeue.launch"(%2339, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2349 = "equeue.control_and"(%2348, %done_2083) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2084 = "equeue.launch"(%2339, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2350 = "equeue.control_and"(%2349, %done_2084) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2085 = "equeue.launch"(%2339, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2351 = "equeue.control_and"(%2350, %done_2085) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2086 = "equeue.launch"(%2339, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2352 = "equeue.control_and"(%2351, %done_2086) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2087 = "equeue.launch"(%2339, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2353 = "equeue.control_and"(%2352, %done_2087) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2088 = "equeue.launch"(%2339, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2354 = "equeue.control_and"(%2353, %done_2088) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2089 = "equeue.launch"(%2339, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2355 = "equeue.control_and"(%2354, %done_2089) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2090 = "equeue.launch"(%2339, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2356 = "equeue.control_and"(%2355, %done_2090) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2091 = "equeue.launch"(%2339, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2357 = "equeue.control_and"(%2356, %done_2091) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2092 = "equeue.launch"(%2339, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2358 = "equeue.control_and"(%2357, %done_2092) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2093 = "equeue.launch"(%2339, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2359 = "equeue.control_and"(%2358, %done_2093) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2094 = "equeue.launch"(%2339, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2360 = "equeue.control_and"(%2359, %done_2094) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2095 = "equeue.launch"(%2339, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2361 = "equeue.control_and"(%2360, %done_2095) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2096 = "equeue.launch"(%2339, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2362 = "equeue.control_and"(%2361, %done_2096) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2097 = "equeue.launch"(%2339, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2363 = "equeue.control_and"(%2362, %done_2097) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2363) : (!equeue.signal) -> ()
      %2364 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%2364) : (!equeue.signal) -> ()
      %2365 = "equeue.control_start"() : () -> !equeue.signal
      %done_2098 = "equeue.launch"(%2365, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2099 = "equeue.launch"(%2365, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2366 = "equeue.control_and"(%done_2098, %done_2099) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2100 = "equeue.launch"(%2365, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2367 = "equeue.control_and"(%2366, %done_2100) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2101 = "equeue.launch"(%2365, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2368 = "equeue.control_and"(%2367, %done_2101) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2102 = "equeue.launch"(%2365, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2369 = "equeue.control_and"(%2368, %done_2102) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2103 = "equeue.launch"(%2365, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2370 = "equeue.control_and"(%2369, %done_2103) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2104 = "equeue.launch"(%2365, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2371 = "equeue.control_and"(%2370, %done_2104) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2105 = "equeue.launch"(%2365, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2372 = "equeue.control_and"(%2371, %done_2105) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2106 = "equeue.launch"(%2365, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2373 = "equeue.control_and"(%2372, %done_2106) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2107 = "equeue.launch"(%2365, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2374 = "equeue.control_and"(%2373, %done_2107) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2108 = "equeue.launch"(%2365, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2375 = "equeue.control_and"(%2374, %done_2108) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2109 = "equeue.launch"(%2365, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2376 = "equeue.control_and"(%2375, %done_2109) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2110 = "equeue.launch"(%2365, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2377 = "equeue.control_and"(%2376, %done_2110) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2111 = "equeue.launch"(%2365, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2378 = "equeue.control_and"(%2377, %done_2111) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2112 = "equeue.launch"(%2365, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2379 = "equeue.control_and"(%2378, %done_2112) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2113 = "equeue.launch"(%2365, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2380 = "equeue.control_and"(%2379, %done_2113) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2114 = "equeue.launch"(%2365, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2381 = "equeue.control_and"(%2380, %done_2114) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2115 = "equeue.launch"(%2365, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2382 = "equeue.control_and"(%2381, %done_2115) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2116 = "equeue.launch"(%2365, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2383 = "equeue.control_and"(%2382, %done_2116) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2117 = "equeue.launch"(%2365, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2384 = "equeue.control_and"(%2383, %done_2117) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2118 = "equeue.launch"(%2365, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2385 = "equeue.control_and"(%2384, %done_2118) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2119 = "equeue.launch"(%2365, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2386 = "equeue.control_and"(%2385, %done_2119) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2120 = "equeue.launch"(%2365, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2387 = "equeue.control_and"(%2386, %done_2120) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2121 = "equeue.launch"(%2365, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2388 = "equeue.control_and"(%2387, %done_2121) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2122 = "equeue.launch"(%2365, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2389 = "equeue.control_and"(%2388, %done_2122) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2389) : (!equeue.signal) -> ()
      %2390 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%2390) : (!equeue.signal) -> ()
      %2391 = "equeue.control_start"() : () -> !equeue.signal
      %done_2123 = "equeue.launch"(%2391, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2124 = "equeue.launch"(%2391, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2392 = "equeue.control_and"(%done_2123, %done_2124) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2125 = "equeue.launch"(%2391, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2393 = "equeue.control_and"(%2392, %done_2125) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2126 = "equeue.launch"(%2391, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2394 = "equeue.control_and"(%2393, %done_2126) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2127 = "equeue.launch"(%2391, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2395 = "equeue.control_and"(%2394, %done_2127) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2128 = "equeue.launch"(%2391, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2396 = "equeue.control_and"(%2395, %done_2128) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2129 = "equeue.launch"(%2391, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2397 = "equeue.control_and"(%2396, %done_2129) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2130 = "equeue.launch"(%2391, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2398 = "equeue.control_and"(%2397, %done_2130) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2131 = "equeue.launch"(%2391, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2399 = "equeue.control_and"(%2398, %done_2131) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2132 = "equeue.launch"(%2391, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2400 = "equeue.control_and"(%2399, %done_2132) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2133 = "equeue.launch"(%2391, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2401 = "equeue.control_and"(%2400, %done_2133) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2134 = "equeue.launch"(%2391, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2402 = "equeue.control_and"(%2401, %done_2134) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2135 = "equeue.launch"(%2391, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2403 = "equeue.control_and"(%2402, %done_2135) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2136 = "equeue.launch"(%2391, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2404 = "equeue.control_and"(%2403, %done_2136) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2137 = "equeue.launch"(%2391, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        %3252 = addf %3251, %3250 : f32
        "equeue.write"(%3252, %arg9) {bank = 2 : i64} : (f32, memref<5x3x3xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2405 = "equeue.control_and"(%2404, %done_2137) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2138 = "equeue.launch"(%2391, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2406 = "equeue.control_and"(%2405, %done_2138) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2139 = "equeue.launch"(%2391, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2407 = "equeue.control_and"(%2406, %done_2139) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2140 = "equeue.launch"(%2391, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2408 = "equeue.control_and"(%2407, %done_2140) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2141 = "equeue.launch"(%2391, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2409 = "equeue.control_and"(%2408, %done_2141) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2142 = "equeue.launch"(%2391, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        %3252 = addf %3251, %3250 : f32
        "equeue.write"(%3252, %arg9) {bank = 3 : i64} : (f32, memref<5x3x3xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2410 = "equeue.control_and"(%2409, %done_2142) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2143 = "equeue.launch"(%2391, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2411 = "equeue.control_and"(%2410, %done_2143) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2144 = "equeue.launch"(%2391, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2412 = "equeue.control_and"(%2411, %done_2144) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2145 = "equeue.launch"(%2391, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2413 = "equeue.control_and"(%2412, %done_2145) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2146 = "equeue.launch"(%2391, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2414 = "equeue.control_and"(%2413, %done_2146) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2147 = "equeue.launch"(%2391, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        %3252 = addf %3251, %3250 : f32
        "equeue.write"(%3252, %arg8) {bank = 4 : i64} : (f32, memref<5x3x3xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2415 = "equeue.control_and"(%2414, %done_2147) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2415) : (!equeue.signal) -> ()
      %2416 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%2416) : (!equeue.signal) -> ()
      %2417 = "equeue.control_start"() : () -> !equeue.signal
      %done_2148 = "equeue.launch"(%2417, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2149 = "equeue.launch"(%2417, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2418 = "equeue.control_and"(%done_2148, %done_2149) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2150 = "equeue.launch"(%2417, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2419 = "equeue.control_and"(%2418, %done_2150) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2151 = "equeue.launch"(%2417, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2420 = "equeue.control_and"(%2419, %done_2151) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2152 = "equeue.launch"(%2417, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2421 = "equeue.control_and"(%2420, %done_2152) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2153 = "equeue.launch"(%2417, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2422 = "equeue.control_and"(%2421, %done_2153) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2154 = "equeue.launch"(%2417, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2423 = "equeue.control_and"(%2422, %done_2154) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2155 = "equeue.launch"(%2417, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2424 = "equeue.control_and"(%2423, %done_2155) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2156 = "equeue.launch"(%2417, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2425 = "equeue.control_and"(%2424, %done_2156) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2157 = "equeue.launch"(%2417, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2426 = "equeue.control_and"(%2425, %done_2157) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2158 = "equeue.launch"(%2417, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2427 = "equeue.control_and"(%2426, %done_2158) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2159 = "equeue.launch"(%2417, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2428 = "equeue.control_and"(%2427, %done_2159) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2160 = "equeue.launch"(%2417, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2429 = "equeue.control_and"(%2428, %done_2160) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2161 = "equeue.launch"(%2417, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2430 = "equeue.control_and"(%2429, %done_2161) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2162 = "equeue.launch"(%2417, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2431 = "equeue.control_and"(%2430, %done_2162) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2163 = "equeue.launch"(%2417, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2432 = "equeue.control_and"(%2431, %done_2163) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2164 = "equeue.launch"(%2417, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2433 = "equeue.control_and"(%2432, %done_2164) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2165 = "equeue.launch"(%2417, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2434 = "equeue.control_and"(%2433, %done_2165) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2166 = "equeue.launch"(%2417, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2435 = "equeue.control_and"(%2434, %done_2166) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2167 = "equeue.launch"(%2417, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2436 = "equeue.control_and"(%2435, %done_2167) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2168 = "equeue.launch"(%2417, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2437 = "equeue.control_and"(%2436, %done_2168) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2169 = "equeue.launch"(%2417, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2438 = "equeue.control_and"(%2437, %done_2169) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2170 = "equeue.launch"(%2417, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2439 = "equeue.control_and"(%2438, %done_2170) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2171 = "equeue.launch"(%2417, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2440 = "equeue.control_and"(%2439, %done_2171) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2172 = "equeue.launch"(%2417, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2441 = "equeue.control_and"(%2440, %done_2172) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2441) : (!equeue.signal) -> ()
      %2442 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%2442) : (!equeue.signal) -> ()
      %2443 = "equeue.control_start"() : () -> !equeue.signal
      %done_2173 = "equeue.launch"(%2443, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2174 = "equeue.launch"(%2443, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2444 = "equeue.control_and"(%done_2173, %done_2174) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2175 = "equeue.launch"(%2443, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2445 = "equeue.control_and"(%2444, %done_2175) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2176 = "equeue.launch"(%2443, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2446 = "equeue.control_and"(%2445, %done_2176) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2177 = "equeue.launch"(%2443, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2447 = "equeue.control_and"(%2446, %done_2177) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2178 = "equeue.launch"(%2443, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2448 = "equeue.control_and"(%2447, %done_2178) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2179 = "equeue.launch"(%2443, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2449 = "equeue.control_and"(%2448, %done_2179) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2180 = "equeue.launch"(%2443, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2450 = "equeue.control_and"(%2449, %done_2180) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2181 = "equeue.launch"(%2443, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2451 = "equeue.control_and"(%2450, %done_2181) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2182 = "equeue.launch"(%2443, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2452 = "equeue.control_and"(%2451, %done_2182) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2183 = "equeue.launch"(%2443, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2453 = "equeue.control_and"(%2452, %done_2183) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2184 = "equeue.launch"(%2443, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2454 = "equeue.control_and"(%2453, %done_2184) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2185 = "equeue.launch"(%2443, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2455 = "equeue.control_and"(%2454, %done_2185) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2186 = "equeue.launch"(%2443, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2456 = "equeue.control_and"(%2455, %done_2186) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2187 = "equeue.launch"(%2443, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2457 = "equeue.control_and"(%2456, %done_2187) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2188 = "equeue.launch"(%2443, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2458 = "equeue.control_and"(%2457, %done_2188) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2189 = "equeue.launch"(%2443, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2459 = "equeue.control_and"(%2458, %done_2189) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2190 = "equeue.launch"(%2443, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2460 = "equeue.control_and"(%2459, %done_2190) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2191 = "equeue.launch"(%2443, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2461 = "equeue.control_and"(%2460, %done_2191) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2192 = "equeue.launch"(%2443, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2462 = "equeue.control_and"(%2461, %done_2192) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2193 = "equeue.launch"(%2443, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2463 = "equeue.control_and"(%2462, %done_2193) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2194 = "equeue.launch"(%2443, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2464 = "equeue.control_and"(%2463, %done_2194) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2195 = "equeue.launch"(%2443, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2465 = "equeue.control_and"(%2464, %done_2195) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2196 = "equeue.launch"(%2443, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2466 = "equeue.control_and"(%2465, %done_2196) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2197 = "equeue.launch"(%2443, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2467 = "equeue.control_and"(%2466, %done_2197) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2467) : (!equeue.signal) -> ()
      %2468 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%2468) : (!equeue.signal) -> ()
      %2469 = "equeue.control_start"() : () -> !equeue.signal
      %done_2198 = "equeue.launch"(%2469, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2199 = "equeue.launch"(%2469, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2470 = "equeue.control_and"(%done_2198, %done_2199) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2200 = "equeue.launch"(%2469, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2471 = "equeue.control_and"(%2470, %done_2200) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2201 = "equeue.launch"(%2469, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2472 = "equeue.control_and"(%2471, %done_2201) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2202 = "equeue.launch"(%2469, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2473 = "equeue.control_and"(%2472, %done_2202) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2203 = "equeue.launch"(%2469, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2474 = "equeue.control_and"(%2473, %done_2203) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2204 = "equeue.launch"(%2469, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2475 = "equeue.control_and"(%2474, %done_2204) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2205 = "equeue.launch"(%2469, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2476 = "equeue.control_and"(%2475, %done_2205) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2206 = "equeue.launch"(%2469, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2477 = "equeue.control_and"(%2476, %done_2206) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2207 = "equeue.launch"(%2469, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2478 = "equeue.control_and"(%2477, %done_2207) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2208 = "equeue.launch"(%2469, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2479 = "equeue.control_and"(%2478, %done_2208) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2209 = "equeue.launch"(%2469, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2480 = "equeue.control_and"(%2479, %done_2209) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2210 = "equeue.launch"(%2469, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2481 = "equeue.control_and"(%2480, %done_2210) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2211 = "equeue.launch"(%2469, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2482 = "equeue.control_and"(%2481, %done_2211) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2212 = "equeue.launch"(%2469, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2483 = "equeue.control_and"(%2482, %done_2212) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2213 = "equeue.launch"(%2469, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2484 = "equeue.control_and"(%2483, %done_2213) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2214 = "equeue.launch"(%2469, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2485 = "equeue.control_and"(%2484, %done_2214) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2215 = "equeue.launch"(%2469, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2486 = "equeue.control_and"(%2485, %done_2215) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2216 = "equeue.launch"(%2469, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2487 = "equeue.control_and"(%2486, %done_2216) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2217 = "equeue.launch"(%2469, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2488 = "equeue.control_and"(%2487, %done_2217) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2218 = "equeue.launch"(%2469, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2489 = "equeue.control_and"(%2488, %done_2218) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2219 = "equeue.launch"(%2469, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2490 = "equeue.control_and"(%2489, %done_2219) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2220 = "equeue.launch"(%2469, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2491 = "equeue.control_and"(%2490, %done_2220) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2221 = "equeue.launch"(%2469, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2492 = "equeue.control_and"(%2491, %done_2221) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2222 = "equeue.launch"(%2469, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2493 = "equeue.control_and"(%2492, %done_2222) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2493) : (!equeue.signal) -> ()
      %c0_2223 = constant 0 : index
      %2494 = "equeue.control_start"() : () -> !equeue.signal
      %2495 = "equeue.memcpy"(%2494, %122, %127, %111, %c0_2223) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_2224 = "equeue.launch"(%2495, %126, %127, %157) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2225 = "equeue.launch"(%2495, %156, %157, %187) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2226 = "equeue.launch"(%2495, %186, %187, %217) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2227 = "equeue.launch"(%2495, %216, %217, %247) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2496 = "equeue.control_and"(%done_2227, %2495) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2497 = "equeue.memcpy"(%2494, %122, %133, %113, %c0_2223) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_2228 = "equeue.launch"(%2497, %132, %133, %163) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2229 = "equeue.launch"(%2497, %162, %163, %193) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2230 = "equeue.launch"(%2497, %192, %193, %223) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2231 = "equeue.launch"(%2497, %222, %223, %253) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2498 = "equeue.control_and"(%2497, %2496, %done_2231) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %2499 = "equeue.memcpy"(%2494, %122, %139, %115, %c0_2223) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_2232 = "equeue.launch"(%2499, %138, %139, %169) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2233 = "equeue.launch"(%2499, %168, %169, %199) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2234 = "equeue.launch"(%2499, %198, %199, %229) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2235 = "equeue.launch"(%2499, %228, %229, %259) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2500 = "equeue.control_and"(%2499, %2498, %done_2235) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %2501 = "equeue.memcpy"(%2494, %122, %145, %117, %c0_2223) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_2236 = "equeue.launch"(%2501, %144, %145, %175) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2237 = "equeue.launch"(%2501, %174, %175, %205) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2238 = "equeue.launch"(%2501, %204, %205, %235) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2239 = "equeue.launch"(%2501, %234, %235, %265) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2502 = "equeue.control_and"(%2501, %2500, %done_2239) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %2503 = "equeue.memcpy"(%2494, %122, %151, %119, %c0_2223) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_2240 = "equeue.launch"(%2503, %150, %151, %181) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2241 = "equeue.launch"(%2503, %180, %181, %211) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2242 = "equeue.launch"(%2503, %210, %211, %241) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2243 = "equeue.launch"(%2503, %240, %241, %271) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2504 = "equeue.control_and"(%2503, %2502, %done_2243) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2504) : (!equeue.signal) -> ()
      %2505 = "equeue.control_start"() : () -> !equeue.signal
      %2506 = "equeue.memcpy"(%2505, %122, %127, %111, %c0_2223) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_2244 = "equeue.launch"(%2506, %126, %127, %157) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2245 = "equeue.launch"(%2506, %156, %157, %187) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2246 = "equeue.launch"(%2506, %186, %187, %217) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2247 = "equeue.launch"(%2506, %216, %217, %247) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2507 = "equeue.control_and"(%done_2247, %2506) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2508 = "equeue.memcpy"(%2505, %122, %133, %113, %c0_2223) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_2248 = "equeue.launch"(%2508, %132, %133, %163) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2249 = "equeue.launch"(%2508, %162, %163, %193) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2250 = "equeue.launch"(%2508, %192, %193, %223) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2251 = "equeue.launch"(%2508, %222, %223, %253) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2509 = "equeue.control_and"(%2508, %2507, %done_2251) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %2510 = "equeue.memcpy"(%2505, %122, %139, %115, %c0_2223) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_2252 = "equeue.launch"(%2510, %138, %139, %169) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2253 = "equeue.launch"(%2510, %168, %169, %199) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2254 = "equeue.launch"(%2510, %198, %199, %229) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2255 = "equeue.launch"(%2510, %228, %229, %259) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2511 = "equeue.control_and"(%2510, %2509, %done_2255) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %2512 = "equeue.memcpy"(%2505, %122, %145, %117, %c0_2223) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_2256 = "equeue.launch"(%2512, %144, %145, %175) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2257 = "equeue.launch"(%2512, %174, %175, %205) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2258 = "equeue.launch"(%2512, %204, %205, %235) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2259 = "equeue.launch"(%2512, %234, %235, %265) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2513 = "equeue.control_and"(%2512, %2511, %done_2259) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %2514 = "equeue.memcpy"(%2505, %122, %151, %119, %c0_2223) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_2260 = "equeue.launch"(%2514, %150, %151, %181) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2261 = "equeue.launch"(%2514, %180, %181, %211) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2262 = "equeue.launch"(%2514, %210, %211, %241) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2263 = "equeue.launch"(%2514, %240, %241, %271) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2515 = "equeue.control_and"(%2514, %2513, %done_2263) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2515) : (!equeue.signal) -> ()
      %2516 = "equeue.control_start"() : () -> !equeue.signal
      %2517 = "equeue.memcpy"(%2516, %122, %127, %111, %c0_2223) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_2264 = "equeue.launch"(%2517, %126, %127, %157) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2265 = "equeue.launch"(%2517, %156, %157, %187) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2266 = "equeue.launch"(%2517, %186, %187, %217) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2267 = "equeue.launch"(%2517, %216, %217, %247) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2518 = "equeue.control_and"(%done_2267, %2517) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2519 = "equeue.memcpy"(%2516, %122, %133, %113, %c0_2223) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_2268 = "equeue.launch"(%2519, %132, %133, %163) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2269 = "equeue.launch"(%2519, %162, %163, %193) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2270 = "equeue.launch"(%2519, %192, %193, %223) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2271 = "equeue.launch"(%2519, %222, %223, %253) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2520 = "equeue.control_and"(%2519, %2518, %done_2271) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %2521 = "equeue.memcpy"(%2516, %122, %139, %115, %c0_2223) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_2272 = "equeue.launch"(%2521, %138, %139, %169) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2273 = "equeue.launch"(%2521, %168, %169, %199) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2274 = "equeue.launch"(%2521, %198, %199, %229) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2275 = "equeue.launch"(%2521, %228, %229, %259) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2522 = "equeue.control_and"(%2521, %2520, %done_2275) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %2523 = "equeue.memcpy"(%2516, %122, %145, %117, %c0_2223) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_2276 = "equeue.launch"(%2523, %144, %145, %175) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2277 = "equeue.launch"(%2523, %174, %175, %205) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2278 = "equeue.launch"(%2523, %204, %205, %235) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2279 = "equeue.launch"(%2523, %234, %235, %265) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2524 = "equeue.control_and"(%2523, %2522, %done_2279) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %2525 = "equeue.memcpy"(%2516, %122, %151, %119, %c0_2223) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_2280 = "equeue.launch"(%2525, %150, %151, %181) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2281 = "equeue.launch"(%2525, %180, %181, %211) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2282 = "equeue.launch"(%2525, %210, %211, %241) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2283 = "equeue.launch"(%2525, %240, %241, %271) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2526 = "equeue.control_and"(%2525, %2524, %done_2283) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2526) : (!equeue.signal) -> ()
      %2527 = "equeue.control_start"() : () -> !equeue.signal
      %2528 = "equeue.memcpy"(%2527, %122, %127, %111, %c0_2223) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_2284 = "equeue.launch"(%2528, %126, %127, %157) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2285 = "equeue.launch"(%2528, %156, %157, %187) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2286 = "equeue.launch"(%2528, %186, %187, %217) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2287 = "equeue.launch"(%2528, %216, %217, %247) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2529 = "equeue.control_and"(%done_2287, %2528) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2530 = "equeue.memcpy"(%2527, %122, %133, %113, %c0_2223) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_2288 = "equeue.launch"(%2530, %132, %133, %163) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2289 = "equeue.launch"(%2530, %162, %163, %193) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2290 = "equeue.launch"(%2530, %192, %193, %223) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2291 = "equeue.launch"(%2530, %222, %223, %253) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2531 = "equeue.control_and"(%2530, %2529, %done_2291) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %2532 = "equeue.memcpy"(%2527, %122, %139, %115, %c0_2223) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_2292 = "equeue.launch"(%2532, %138, %139, %169) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2293 = "equeue.launch"(%2532, %168, %169, %199) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2294 = "equeue.launch"(%2532, %198, %199, %229) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2295 = "equeue.launch"(%2532, %228, %229, %259) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2533 = "equeue.control_and"(%2532, %2531, %done_2295) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %2534 = "equeue.memcpy"(%2527, %122, %145, %117, %c0_2223) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_2296 = "equeue.launch"(%2534, %144, %145, %175) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2297 = "equeue.launch"(%2534, %174, %175, %205) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2298 = "equeue.launch"(%2534, %204, %205, %235) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2299 = "equeue.launch"(%2534, %234, %235, %265) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2535 = "equeue.control_and"(%2534, %2533, %done_2299) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %2536 = "equeue.memcpy"(%2527, %122, %151, %119, %c0_2223) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_2300 = "equeue.launch"(%2536, %150, %151, %181) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2301 = "equeue.launch"(%2536, %180, %181, %211) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2302 = "equeue.launch"(%2536, %210, %211, %241) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2303 = "equeue.launch"(%2536, %240, %241, %271) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2537 = "equeue.control_and"(%2536, %2535, %done_2303) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2537) : (!equeue.signal) -> ()
      %2538 = "equeue.control_start"() : () -> !equeue.signal
      %2539 = "equeue.memcpy"(%2538, %121, %129, %102) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32) -> !equeue.signal
      %2540 = "equeue.memcpy"(%2538, %121, %159, %104) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32) -> !equeue.signal
      %2541 = "equeue.control_and"(%2539, %2540) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2542 = "equeue.memcpy"(%2538, %121, %189, %106) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32) -> !equeue.signal
      %2543 = "equeue.control_and"(%2541, %2542) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2544 = "equeue.memcpy"(%2538, %121, %219, %108) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32) -> !equeue.signal
      %2545 = "equeue.control_and"(%2543, %2544) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %2546 = "equeue.memcpy"(%2538, %121, %249, %110) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32) -> !equeue.signal
      %2547 = "equeue.control_and"(%2545, %2546) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2547) : (!equeue.signal) -> ()
      %2548 = "equeue.control_start"() : () -> !equeue.signal
      %done_2304 = "equeue.launch"(%2548, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2305 = "equeue.launch"(%2548, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2549 = "equeue.control_and"(%done_2304, %done_2305) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2306 = "equeue.launch"(%2548, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2550 = "equeue.control_and"(%2549, %done_2306) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2307 = "equeue.launch"(%2548, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2551 = "equeue.control_and"(%2550, %done_2307) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2308 = "equeue.launch"(%2548, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2552 = "equeue.control_and"(%2551, %done_2308) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2309 = "equeue.launch"(%2548, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2553 = "equeue.control_and"(%2552, %done_2309) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2310 = "equeue.launch"(%2548, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2554 = "equeue.control_and"(%2553, %done_2310) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2311 = "equeue.launch"(%2548, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2555 = "equeue.control_and"(%2554, %done_2311) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2312 = "equeue.launch"(%2548, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2556 = "equeue.control_and"(%2555, %done_2312) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2313 = "equeue.launch"(%2548, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2557 = "equeue.control_and"(%2556, %done_2313) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2314 = "equeue.launch"(%2548, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2558 = "equeue.control_and"(%2557, %done_2314) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2315 = "equeue.launch"(%2548, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2559 = "equeue.control_and"(%2558, %done_2315) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2316 = "equeue.launch"(%2548, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2560 = "equeue.control_and"(%2559, %done_2316) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2317 = "equeue.launch"(%2548, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2561 = "equeue.control_and"(%2560, %done_2317) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2318 = "equeue.launch"(%2548, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2562 = "equeue.control_and"(%2561, %done_2318) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2319 = "equeue.launch"(%2548, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2563 = "equeue.control_and"(%2562, %done_2319) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2320 = "equeue.launch"(%2548, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2564 = "equeue.control_and"(%2563, %done_2320) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2321 = "equeue.launch"(%2548, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2565 = "equeue.control_and"(%2564, %done_2321) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2322 = "equeue.launch"(%2548, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2566 = "equeue.control_and"(%2565, %done_2322) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2323 = "equeue.launch"(%2548, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2567 = "equeue.control_and"(%2566, %done_2323) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2324 = "equeue.launch"(%2548, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2568 = "equeue.control_and"(%2567, %done_2324) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2325 = "equeue.launch"(%2548, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2569 = "equeue.control_and"(%2568, %done_2325) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2326 = "equeue.launch"(%2548, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2570 = "equeue.control_and"(%2569, %done_2326) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2327 = "equeue.launch"(%2548, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2571 = "equeue.control_and"(%2570, %done_2327) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2328 = "equeue.launch"(%2548, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2572 = "equeue.control_and"(%2571, %done_2328) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2572) : (!equeue.signal) -> ()
      %2573 = "equeue.control_start"() : () -> !equeue.signal
      %2574 = "equeue.memcpy"(%2573, %121, %129, %102, %c0_2223) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      "equeue.await"(%2574) : (!equeue.signal) -> ()
      %2575 = "equeue.control_start"() : () -> !equeue.signal
      %done_2329 = "equeue.launch"(%2575, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2330 = "equeue.launch"(%2575, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2576 = "equeue.control_and"(%done_2329, %done_2330) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2331 = "equeue.launch"(%2575, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2577 = "equeue.control_and"(%2576, %done_2331) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2332 = "equeue.launch"(%2575, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2578 = "equeue.control_and"(%2577, %done_2332) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2333 = "equeue.launch"(%2575, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2579 = "equeue.control_and"(%2578, %done_2333) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2334 = "equeue.launch"(%2575, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2580 = "equeue.control_and"(%2579, %done_2334) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2335 = "equeue.launch"(%2575, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2581 = "equeue.control_and"(%2580, %done_2335) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2336 = "equeue.launch"(%2575, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2582 = "equeue.control_and"(%2581, %done_2336) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2337 = "equeue.launch"(%2575, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2583 = "equeue.control_and"(%2582, %done_2337) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2338 = "equeue.launch"(%2575, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2584 = "equeue.control_and"(%2583, %done_2338) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2339 = "equeue.launch"(%2575, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2585 = "equeue.control_and"(%2584, %done_2339) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2340 = "equeue.launch"(%2575, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2586 = "equeue.control_and"(%2585, %done_2340) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2341 = "equeue.launch"(%2575, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2587 = "equeue.control_and"(%2586, %done_2341) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2342 = "equeue.launch"(%2575, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2588 = "equeue.control_and"(%2587, %done_2342) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2343 = "equeue.launch"(%2575, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2589 = "equeue.control_and"(%2588, %done_2343) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2344 = "equeue.launch"(%2575, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2590 = "equeue.control_and"(%2589, %done_2344) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2345 = "equeue.launch"(%2575, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2591 = "equeue.control_and"(%2590, %done_2345) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2346 = "equeue.launch"(%2575, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2592 = "equeue.control_and"(%2591, %done_2346) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2347 = "equeue.launch"(%2575, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2593 = "equeue.control_and"(%2592, %done_2347) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2348 = "equeue.launch"(%2575, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2594 = "equeue.control_and"(%2593, %done_2348) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2349 = "equeue.launch"(%2575, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2595 = "equeue.control_and"(%2594, %done_2349) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2350 = "equeue.launch"(%2575, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2596 = "equeue.control_and"(%2595, %done_2350) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2351 = "equeue.launch"(%2575, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2597 = "equeue.control_and"(%2596, %done_2351) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2352 = "equeue.launch"(%2575, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2598 = "equeue.control_and"(%2597, %done_2352) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2353 = "equeue.launch"(%2575, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2599 = "equeue.control_and"(%2598, %done_2353) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2599) : (!equeue.signal) -> ()
      %2600 = "equeue.control_start"() : () -> !equeue.signal
      %2601 = "equeue.memcpy"(%2600, %121, %129, %102, %c0_2223) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      "equeue.await"(%2601) : (!equeue.signal) -> ()
      %2602 = "equeue.control_start"() : () -> !equeue.signal
      %done_2354 = "equeue.launch"(%2602, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2355 = "equeue.launch"(%2602, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2603 = "equeue.control_and"(%done_2354, %done_2355) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2356 = "equeue.launch"(%2602, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2604 = "equeue.control_and"(%2603, %done_2356) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2357 = "equeue.launch"(%2602, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2605 = "equeue.control_and"(%2604, %done_2357) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2358 = "equeue.launch"(%2602, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2606 = "equeue.control_and"(%2605, %done_2358) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2359 = "equeue.launch"(%2602, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2607 = "equeue.control_and"(%2606, %done_2359) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2360 = "equeue.launch"(%2602, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2608 = "equeue.control_and"(%2607, %done_2360) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2361 = "equeue.launch"(%2602, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2609 = "equeue.control_and"(%2608, %done_2361) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2362 = "equeue.launch"(%2602, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2610 = "equeue.control_and"(%2609, %done_2362) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2363 = "equeue.launch"(%2602, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2611 = "equeue.control_and"(%2610, %done_2363) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2364 = "equeue.launch"(%2602, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2612 = "equeue.control_and"(%2611, %done_2364) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2365 = "equeue.launch"(%2602, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2613 = "equeue.control_and"(%2612, %done_2365) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2366 = "equeue.launch"(%2602, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2614 = "equeue.control_and"(%2613, %done_2366) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2367 = "equeue.launch"(%2602, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2615 = "equeue.control_and"(%2614, %done_2367) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2368 = "equeue.launch"(%2602, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2616 = "equeue.control_and"(%2615, %done_2368) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2369 = "equeue.launch"(%2602, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2617 = "equeue.control_and"(%2616, %done_2369) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2370 = "equeue.launch"(%2602, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2618 = "equeue.control_and"(%2617, %done_2370) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2371 = "equeue.launch"(%2602, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2619 = "equeue.control_and"(%2618, %done_2371) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2372 = "equeue.launch"(%2602, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2620 = "equeue.control_and"(%2619, %done_2372) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2373 = "equeue.launch"(%2602, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2621 = "equeue.control_and"(%2620, %done_2373) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2374 = "equeue.launch"(%2602, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2622 = "equeue.control_and"(%2621, %done_2374) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2375 = "equeue.launch"(%2602, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2623 = "equeue.control_and"(%2622, %done_2375) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2376 = "equeue.launch"(%2602, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2624 = "equeue.control_and"(%2623, %done_2376) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2377 = "equeue.launch"(%2602, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2625 = "equeue.control_and"(%2624, %done_2377) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2378 = "equeue.launch"(%2602, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2626 = "equeue.control_and"(%2625, %done_2378) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2626) : (!equeue.signal) -> ()
      %2627 = "equeue.control_start"() : () -> !equeue.signal
      %2628 = "equeue.memcpy"(%2627, %121, %129, %102, %c0_2223) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      "equeue.await"(%2628) : (!equeue.signal) -> ()
      %2629 = "equeue.control_start"() : () -> !equeue.signal
      %done_2379 = "equeue.launch"(%2629, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2380 = "equeue.launch"(%2629, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2630 = "equeue.control_and"(%done_2379, %done_2380) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2381 = "equeue.launch"(%2629, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2631 = "equeue.control_and"(%2630, %done_2381) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2382 = "equeue.launch"(%2629, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2632 = "equeue.control_and"(%2631, %done_2382) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2383 = "equeue.launch"(%2629, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2633 = "equeue.control_and"(%2632, %done_2383) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2384 = "equeue.launch"(%2629, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2634 = "equeue.control_and"(%2633, %done_2384) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2385 = "equeue.launch"(%2629, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2635 = "equeue.control_and"(%2634, %done_2385) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2386 = "equeue.launch"(%2629, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2636 = "equeue.control_and"(%2635, %done_2386) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2387 = "equeue.launch"(%2629, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2637 = "equeue.control_and"(%2636, %done_2387) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2388 = "equeue.launch"(%2629, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2638 = "equeue.control_and"(%2637, %done_2388) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2389 = "equeue.launch"(%2629, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2639 = "equeue.control_and"(%2638, %done_2389) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2390 = "equeue.launch"(%2629, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2640 = "equeue.control_and"(%2639, %done_2390) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2391 = "equeue.launch"(%2629, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2641 = "equeue.control_and"(%2640, %done_2391) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2392 = "equeue.launch"(%2629, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2642 = "equeue.control_and"(%2641, %done_2392) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2393 = "equeue.launch"(%2629, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2643 = "equeue.control_and"(%2642, %done_2393) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2394 = "equeue.launch"(%2629, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2644 = "equeue.control_and"(%2643, %done_2394) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2395 = "equeue.launch"(%2629, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2645 = "equeue.control_and"(%2644, %done_2395) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2396 = "equeue.launch"(%2629, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2646 = "equeue.control_and"(%2645, %done_2396) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2397 = "equeue.launch"(%2629, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2647 = "equeue.control_and"(%2646, %done_2397) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2398 = "equeue.launch"(%2629, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2648 = "equeue.control_and"(%2647, %done_2398) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2399 = "equeue.launch"(%2629, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2649 = "equeue.control_and"(%2648, %done_2399) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2400 = "equeue.launch"(%2629, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2650 = "equeue.control_and"(%2649, %done_2400) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2401 = "equeue.launch"(%2629, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2651 = "equeue.control_and"(%2650, %done_2401) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2402 = "equeue.launch"(%2629, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2652 = "equeue.control_and"(%2651, %done_2402) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2403 = "equeue.launch"(%2629, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2653 = "equeue.control_and"(%2652, %done_2403) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2653) : (!equeue.signal) -> ()
      %2654 = "equeue.control_start"() : () -> !equeue.signal
      %2655 = "equeue.memcpy"(%2654, %121, %129, %102, %c0_2223) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      "equeue.await"(%2655) : (!equeue.signal) -> ()
      %2656 = "equeue.control_start"() : () -> !equeue.signal
      %done_2404 = "equeue.launch"(%2656, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2405 = "equeue.launch"(%2656, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2657 = "equeue.control_and"(%done_2404, %done_2405) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2406 = "equeue.launch"(%2656, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2658 = "equeue.control_and"(%2657, %done_2406) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2407 = "equeue.launch"(%2656, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2659 = "equeue.control_and"(%2658, %done_2407) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2408 = "equeue.launch"(%2656, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2660 = "equeue.control_and"(%2659, %done_2408) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2409 = "equeue.launch"(%2656, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2661 = "equeue.control_and"(%2660, %done_2409) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2410 = "equeue.launch"(%2656, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2662 = "equeue.control_and"(%2661, %done_2410) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2411 = "equeue.launch"(%2656, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2663 = "equeue.control_and"(%2662, %done_2411) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2412 = "equeue.launch"(%2656, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2664 = "equeue.control_and"(%2663, %done_2412) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2413 = "equeue.launch"(%2656, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2665 = "equeue.control_and"(%2664, %done_2413) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2414 = "equeue.launch"(%2656, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2666 = "equeue.control_and"(%2665, %done_2414) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2415 = "equeue.launch"(%2656, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2667 = "equeue.control_and"(%2666, %done_2415) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2416 = "equeue.launch"(%2656, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2668 = "equeue.control_and"(%2667, %done_2416) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2417 = "equeue.launch"(%2656, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2669 = "equeue.control_and"(%2668, %done_2417) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2418 = "equeue.launch"(%2656, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2670 = "equeue.control_and"(%2669, %done_2418) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2419 = "equeue.launch"(%2656, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2671 = "equeue.control_and"(%2670, %done_2419) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2420 = "equeue.launch"(%2656, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2672 = "equeue.control_and"(%2671, %done_2420) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2421 = "equeue.launch"(%2656, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2673 = "equeue.control_and"(%2672, %done_2421) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2422 = "equeue.launch"(%2656, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2674 = "equeue.control_and"(%2673, %done_2422) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2423 = "equeue.launch"(%2656, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2675 = "equeue.control_and"(%2674, %done_2423) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2424 = "equeue.launch"(%2656, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2676 = "equeue.control_and"(%2675, %done_2424) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2425 = "equeue.launch"(%2656, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2677 = "equeue.control_and"(%2676, %done_2425) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2426 = "equeue.launch"(%2656, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2678 = "equeue.control_and"(%2677, %done_2426) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2427 = "equeue.launch"(%2656, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2679 = "equeue.control_and"(%2678, %done_2427) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2428 = "equeue.launch"(%2656, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2680 = "equeue.control_and"(%2679, %done_2428) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2680) : (!equeue.signal) -> ()
      %2681 = "equeue.control_start"() : () -> !equeue.signal
      %2682 = "equeue.memcpy"(%2681, %121, %129, %102, %c0_2223) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      "equeue.await"(%2682) : (!equeue.signal) -> ()
      %2683 = "equeue.control_start"() : () -> !equeue.signal
      %done_2429 = "equeue.launch"(%2683, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2430 = "equeue.launch"(%2683, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2684 = "equeue.control_and"(%done_2429, %done_2430) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2431 = "equeue.launch"(%2683, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2685 = "equeue.control_and"(%2684, %done_2431) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2432 = "equeue.launch"(%2683, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2686 = "equeue.control_and"(%2685, %done_2432) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2433 = "equeue.launch"(%2683, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2687 = "equeue.control_and"(%2686, %done_2433) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2434 = "equeue.launch"(%2683, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2688 = "equeue.control_and"(%2687, %done_2434) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2435 = "equeue.launch"(%2683, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2689 = "equeue.control_and"(%2688, %done_2435) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2436 = "equeue.launch"(%2683, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2690 = "equeue.control_and"(%2689, %done_2436) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2437 = "equeue.launch"(%2683, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2691 = "equeue.control_and"(%2690, %done_2437) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2438 = "equeue.launch"(%2683, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2692 = "equeue.control_and"(%2691, %done_2438) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2439 = "equeue.launch"(%2683, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2693 = "equeue.control_and"(%2692, %done_2439) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2440 = "equeue.launch"(%2683, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2694 = "equeue.control_and"(%2693, %done_2440) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2441 = "equeue.launch"(%2683, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2695 = "equeue.control_and"(%2694, %done_2441) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2442 = "equeue.launch"(%2683, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2696 = "equeue.control_and"(%2695, %done_2442) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2443 = "equeue.launch"(%2683, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2697 = "equeue.control_and"(%2696, %done_2443) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2444 = "equeue.launch"(%2683, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2698 = "equeue.control_and"(%2697, %done_2444) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2445 = "equeue.launch"(%2683, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2699 = "equeue.control_and"(%2698, %done_2445) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2446 = "equeue.launch"(%2683, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2700 = "equeue.control_and"(%2699, %done_2446) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2447 = "equeue.launch"(%2683, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2701 = "equeue.control_and"(%2700, %done_2447) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2448 = "equeue.launch"(%2683, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2702 = "equeue.control_and"(%2701, %done_2448) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2449 = "equeue.launch"(%2683, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2703 = "equeue.control_and"(%2702, %done_2449) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2450 = "equeue.launch"(%2683, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2704 = "equeue.control_and"(%2703, %done_2450) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2451 = "equeue.launch"(%2683, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2705 = "equeue.control_and"(%2704, %done_2451) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2452 = "equeue.launch"(%2683, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2706 = "equeue.control_and"(%2705, %done_2452) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2453 = "equeue.launch"(%2683, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2707 = "equeue.control_and"(%2706, %done_2453) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2707) : (!equeue.signal) -> ()
      %2708 = "equeue.control_start"() : () -> !equeue.signal
      %2709 = "equeue.memcpy"(%2708, %121, %129, %102, %c0_2223) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      "equeue.await"(%2709) : (!equeue.signal) -> ()
      %2710 = "equeue.control_start"() : () -> !equeue.signal
      %done_2454 = "equeue.launch"(%2710, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2455 = "equeue.launch"(%2710, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2711 = "equeue.control_and"(%done_2454, %done_2455) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2456 = "equeue.launch"(%2710, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2712 = "equeue.control_and"(%2711, %done_2456) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2457 = "equeue.launch"(%2710, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2713 = "equeue.control_and"(%2712, %done_2457) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2458 = "equeue.launch"(%2710, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2714 = "equeue.control_and"(%2713, %done_2458) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2459 = "equeue.launch"(%2710, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2715 = "equeue.control_and"(%2714, %done_2459) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2460 = "equeue.launch"(%2710, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2716 = "equeue.control_and"(%2715, %done_2460) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2461 = "equeue.launch"(%2710, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2717 = "equeue.control_and"(%2716, %done_2461) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2462 = "equeue.launch"(%2710, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2718 = "equeue.control_and"(%2717, %done_2462) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2463 = "equeue.launch"(%2710, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2719 = "equeue.control_and"(%2718, %done_2463) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2464 = "equeue.launch"(%2710, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2720 = "equeue.control_and"(%2719, %done_2464) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2465 = "equeue.launch"(%2710, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2721 = "equeue.control_and"(%2720, %done_2465) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2466 = "equeue.launch"(%2710, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2722 = "equeue.control_and"(%2721, %done_2466) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2467 = "equeue.launch"(%2710, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2723 = "equeue.control_and"(%2722, %done_2467) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2468 = "equeue.launch"(%2710, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2724 = "equeue.control_and"(%2723, %done_2468) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2469 = "equeue.launch"(%2710, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2725 = "equeue.control_and"(%2724, %done_2469) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2470 = "equeue.launch"(%2710, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2726 = "equeue.control_and"(%2725, %done_2470) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2471 = "equeue.launch"(%2710, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2727 = "equeue.control_and"(%2726, %done_2471) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2472 = "equeue.launch"(%2710, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2728 = "equeue.control_and"(%2727, %done_2472) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2473 = "equeue.launch"(%2710, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2729 = "equeue.control_and"(%2728, %done_2473) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2474 = "equeue.launch"(%2710, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2730 = "equeue.control_and"(%2729, %done_2474) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2475 = "equeue.launch"(%2710, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2731 = "equeue.control_and"(%2730, %done_2475) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2476 = "equeue.launch"(%2710, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2732 = "equeue.control_and"(%2731, %done_2476) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2477 = "equeue.launch"(%2710, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2733 = "equeue.control_and"(%2732, %done_2477) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2478 = "equeue.launch"(%2710, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2734 = "equeue.control_and"(%2733, %done_2478) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2734) : (!equeue.signal) -> ()
      %2735 = "equeue.control_start"() : () -> !equeue.signal
      %2736 = "equeue.memcpy"(%2735, %121, %129, %102, %c0_2223) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      "equeue.await"(%2736) : (!equeue.signal) -> ()
      %2737 = "equeue.control_start"() : () -> !equeue.signal
      %done_2479 = "equeue.launch"(%2737, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2480 = "equeue.launch"(%2737, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2738 = "equeue.control_and"(%done_2479, %done_2480) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2481 = "equeue.launch"(%2737, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2739 = "equeue.control_and"(%2738, %done_2481) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2482 = "equeue.launch"(%2737, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2740 = "equeue.control_and"(%2739, %done_2482) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2483 = "equeue.launch"(%2737, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2741 = "equeue.control_and"(%2740, %done_2483) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2484 = "equeue.launch"(%2737, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2742 = "equeue.control_and"(%2741, %done_2484) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2485 = "equeue.launch"(%2737, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2743 = "equeue.control_and"(%2742, %done_2485) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2486 = "equeue.launch"(%2737, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2744 = "equeue.control_and"(%2743, %done_2486) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2487 = "equeue.launch"(%2737, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2745 = "equeue.control_and"(%2744, %done_2487) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2488 = "equeue.launch"(%2737, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2746 = "equeue.control_and"(%2745, %done_2488) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2489 = "equeue.launch"(%2737, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2747 = "equeue.control_and"(%2746, %done_2489) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2490 = "equeue.launch"(%2737, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2748 = "equeue.control_and"(%2747, %done_2490) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2491 = "equeue.launch"(%2737, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2749 = "equeue.control_and"(%2748, %done_2491) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2492 = "equeue.launch"(%2737, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2750 = "equeue.control_and"(%2749, %done_2492) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2493 = "equeue.launch"(%2737, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2751 = "equeue.control_and"(%2750, %done_2493) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2494 = "equeue.launch"(%2737, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2752 = "equeue.control_and"(%2751, %done_2494) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2495 = "equeue.launch"(%2737, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2753 = "equeue.control_and"(%2752, %done_2495) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2496 = "equeue.launch"(%2737, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2754 = "equeue.control_and"(%2753, %done_2496) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2497 = "equeue.launch"(%2737, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2755 = "equeue.control_and"(%2754, %done_2497) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2498 = "equeue.launch"(%2737, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2756 = "equeue.control_and"(%2755, %done_2498) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2499 = "equeue.launch"(%2737, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2757 = "equeue.control_and"(%2756, %done_2499) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2500 = "equeue.launch"(%2737, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2758 = "equeue.control_and"(%2757, %done_2500) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2501 = "equeue.launch"(%2737, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2759 = "equeue.control_and"(%2758, %done_2501) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2502 = "equeue.launch"(%2737, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2760 = "equeue.control_and"(%2759, %done_2502) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2503 = "equeue.launch"(%2737, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2761 = "equeue.control_and"(%2760, %done_2503) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2761) : (!equeue.signal) -> ()
      %2762 = "equeue.control_start"() : () -> !equeue.signal
      %2763 = "equeue.memcpy"(%2762, %121, %129, %102, %c0_2223) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      "equeue.await"(%2763) : (!equeue.signal) -> ()
      %2764 = "equeue.control_start"() : () -> !equeue.signal
      %done_2504 = "equeue.launch"(%2764, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2505 = "equeue.launch"(%2764, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2765 = "equeue.control_and"(%done_2504, %done_2505) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2506 = "equeue.launch"(%2764, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2766 = "equeue.control_and"(%2765, %done_2506) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2507 = "equeue.launch"(%2764, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2767 = "equeue.control_and"(%2766, %done_2507) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2508 = "equeue.launch"(%2764, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2768 = "equeue.control_and"(%2767, %done_2508) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2509 = "equeue.launch"(%2764, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2769 = "equeue.control_and"(%2768, %done_2509) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2510 = "equeue.launch"(%2764, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2770 = "equeue.control_and"(%2769, %done_2510) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2511 = "equeue.launch"(%2764, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2771 = "equeue.control_and"(%2770, %done_2511) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2512 = "equeue.launch"(%2764, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2772 = "equeue.control_and"(%2771, %done_2512) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2513 = "equeue.launch"(%2764, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2773 = "equeue.control_and"(%2772, %done_2513) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2514 = "equeue.launch"(%2764, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2774 = "equeue.control_and"(%2773, %done_2514) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2515 = "equeue.launch"(%2764, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2775 = "equeue.control_and"(%2774, %done_2515) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2516 = "equeue.launch"(%2764, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2776 = "equeue.control_and"(%2775, %done_2516) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2517 = "equeue.launch"(%2764, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2777 = "equeue.control_and"(%2776, %done_2517) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2518 = "equeue.launch"(%2764, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2778 = "equeue.control_and"(%2777, %done_2518) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2519 = "equeue.launch"(%2764, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2779 = "equeue.control_and"(%2778, %done_2519) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2520 = "equeue.launch"(%2764, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2780 = "equeue.control_and"(%2779, %done_2520) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2521 = "equeue.launch"(%2764, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2781 = "equeue.control_and"(%2780, %done_2521) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2522 = "equeue.launch"(%2764, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2782 = "equeue.control_and"(%2781, %done_2522) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2523 = "equeue.launch"(%2764, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2783 = "equeue.control_and"(%2782, %done_2523) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2524 = "equeue.launch"(%2764, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2784 = "equeue.control_and"(%2783, %done_2524) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2525 = "equeue.launch"(%2764, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2785 = "equeue.control_and"(%2784, %done_2525) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2526 = "equeue.launch"(%2764, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2786 = "equeue.control_and"(%2785, %done_2526) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2527 = "equeue.launch"(%2764, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2787 = "equeue.control_and"(%2786, %done_2527) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2528 = "equeue.launch"(%2764, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2788 = "equeue.control_and"(%2787, %done_2528) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2788) : (!equeue.signal) -> ()
      %2789 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%2789) : (!equeue.signal) -> ()
      %2790 = "equeue.control_start"() : () -> !equeue.signal
      %done_2529 = "equeue.launch"(%2790, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2530 = "equeue.launch"(%2790, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2791 = "equeue.control_and"(%done_2529, %done_2530) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2531 = "equeue.launch"(%2790, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2792 = "equeue.control_and"(%2791, %done_2531) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2532 = "equeue.launch"(%2790, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2793 = "equeue.control_and"(%2792, %done_2532) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2533 = "equeue.launch"(%2790, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2794 = "equeue.control_and"(%2793, %done_2533) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2534 = "equeue.launch"(%2790, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2795 = "equeue.control_and"(%2794, %done_2534) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2535 = "equeue.launch"(%2790, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2796 = "equeue.control_and"(%2795, %done_2535) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2536 = "equeue.launch"(%2790, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2797 = "equeue.control_and"(%2796, %done_2536) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2537 = "equeue.launch"(%2790, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2798 = "equeue.control_and"(%2797, %done_2537) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2538 = "equeue.launch"(%2790, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2799 = "equeue.control_and"(%2798, %done_2538) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2539 = "equeue.launch"(%2790, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2800 = "equeue.control_and"(%2799, %done_2539) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2540 = "equeue.launch"(%2790, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2801 = "equeue.control_and"(%2800, %done_2540) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2541 = "equeue.launch"(%2790, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2802 = "equeue.control_and"(%2801, %done_2541) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2542 = "equeue.launch"(%2790, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2803 = "equeue.control_and"(%2802, %done_2542) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2543 = "equeue.launch"(%2790, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2804 = "equeue.control_and"(%2803, %done_2543) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2544 = "equeue.launch"(%2790, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2805 = "equeue.control_and"(%2804, %done_2544) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2545 = "equeue.launch"(%2790, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2806 = "equeue.control_and"(%2805, %done_2545) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2546 = "equeue.launch"(%2790, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2807 = "equeue.control_and"(%2806, %done_2546) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2547 = "equeue.launch"(%2790, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2808 = "equeue.control_and"(%2807, %done_2547) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2548 = "equeue.launch"(%2790, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2809 = "equeue.control_and"(%2808, %done_2548) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2549 = "equeue.launch"(%2790, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2810 = "equeue.control_and"(%2809, %done_2549) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2550 = "equeue.launch"(%2790, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2811 = "equeue.control_and"(%2810, %done_2550) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2551 = "equeue.launch"(%2790, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2812 = "equeue.control_and"(%2811, %done_2551) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2552 = "equeue.launch"(%2790, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2813 = "equeue.control_and"(%2812, %done_2552) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2553 = "equeue.launch"(%2790, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2814 = "equeue.control_and"(%2813, %done_2553) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2814) : (!equeue.signal) -> ()
      %2815 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%2815) : (!equeue.signal) -> ()
      %2816 = "equeue.control_start"() : () -> !equeue.signal
      %done_2554 = "equeue.launch"(%2816, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2555 = "equeue.launch"(%2816, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2817 = "equeue.control_and"(%done_2554, %done_2555) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2556 = "equeue.launch"(%2816, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2818 = "equeue.control_and"(%2817, %done_2556) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2557 = "equeue.launch"(%2816, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2819 = "equeue.control_and"(%2818, %done_2557) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2558 = "equeue.launch"(%2816, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2820 = "equeue.control_and"(%2819, %done_2558) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2559 = "equeue.launch"(%2816, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2821 = "equeue.control_and"(%2820, %done_2559) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2560 = "equeue.launch"(%2816, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2822 = "equeue.control_and"(%2821, %done_2560) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2561 = "equeue.launch"(%2816, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2823 = "equeue.control_and"(%2822, %done_2561) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2562 = "equeue.launch"(%2816, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2824 = "equeue.control_and"(%2823, %done_2562) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2563 = "equeue.launch"(%2816, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2825 = "equeue.control_and"(%2824, %done_2563) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2564 = "equeue.launch"(%2816, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2826 = "equeue.control_and"(%2825, %done_2564) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2565 = "equeue.launch"(%2816, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2827 = "equeue.control_and"(%2826, %done_2565) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2566 = "equeue.launch"(%2816, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2828 = "equeue.control_and"(%2827, %done_2566) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2567 = "equeue.launch"(%2816, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2829 = "equeue.control_and"(%2828, %done_2567) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2568 = "equeue.launch"(%2816, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2830 = "equeue.control_and"(%2829, %done_2568) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2569 = "equeue.launch"(%2816, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2831 = "equeue.control_and"(%2830, %done_2569) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2570 = "equeue.launch"(%2816, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2832 = "equeue.control_and"(%2831, %done_2570) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2571 = "equeue.launch"(%2816, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2833 = "equeue.control_and"(%2832, %done_2571) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2572 = "equeue.launch"(%2816, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2834 = "equeue.control_and"(%2833, %done_2572) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2573 = "equeue.launch"(%2816, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2835 = "equeue.control_and"(%2834, %done_2573) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2574 = "equeue.launch"(%2816, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2836 = "equeue.control_and"(%2835, %done_2574) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2575 = "equeue.launch"(%2816, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2837 = "equeue.control_and"(%2836, %done_2575) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2576 = "equeue.launch"(%2816, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2838 = "equeue.control_and"(%2837, %done_2576) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2577 = "equeue.launch"(%2816, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2839 = "equeue.control_and"(%2838, %done_2577) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2578 = "equeue.launch"(%2816, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2840 = "equeue.control_and"(%2839, %done_2578) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2840) : (!equeue.signal) -> ()
      %2841 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%2841) : (!equeue.signal) -> ()
      %2842 = "equeue.control_start"() : () -> !equeue.signal
      %done_2579 = "equeue.launch"(%2842, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2580 = "equeue.launch"(%2842, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2843 = "equeue.control_and"(%done_2579, %done_2580) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2581 = "equeue.launch"(%2842, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2844 = "equeue.control_and"(%2843, %done_2581) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2582 = "equeue.launch"(%2842, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2845 = "equeue.control_and"(%2844, %done_2582) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2583 = "equeue.launch"(%2842, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2846 = "equeue.control_and"(%2845, %done_2583) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2584 = "equeue.launch"(%2842, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2847 = "equeue.control_and"(%2846, %done_2584) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2585 = "equeue.launch"(%2842, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2848 = "equeue.control_and"(%2847, %done_2585) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2586 = "equeue.launch"(%2842, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2849 = "equeue.control_and"(%2848, %done_2586) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2587 = "equeue.launch"(%2842, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2850 = "equeue.control_and"(%2849, %done_2587) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2588 = "equeue.launch"(%2842, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2851 = "equeue.control_and"(%2850, %done_2588) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2589 = "equeue.launch"(%2842, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2852 = "equeue.control_and"(%2851, %done_2589) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2590 = "equeue.launch"(%2842, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2853 = "equeue.control_and"(%2852, %done_2590) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2591 = "equeue.launch"(%2842, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2854 = "equeue.control_and"(%2853, %done_2591) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2592 = "equeue.launch"(%2842, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2855 = "equeue.control_and"(%2854, %done_2592) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2593 = "equeue.launch"(%2842, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2856 = "equeue.control_and"(%2855, %done_2593) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2594 = "equeue.launch"(%2842, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2857 = "equeue.control_and"(%2856, %done_2594) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2595 = "equeue.launch"(%2842, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2858 = "equeue.control_and"(%2857, %done_2595) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2596 = "equeue.launch"(%2842, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2859 = "equeue.control_and"(%2858, %done_2596) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2597 = "equeue.launch"(%2842, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2860 = "equeue.control_and"(%2859, %done_2597) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2598 = "equeue.launch"(%2842, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2861 = "equeue.control_and"(%2860, %done_2598) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2599 = "equeue.launch"(%2842, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2862 = "equeue.control_and"(%2861, %done_2599) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2600 = "equeue.launch"(%2842, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2863 = "equeue.control_and"(%2862, %done_2600) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2601 = "equeue.launch"(%2842, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2864 = "equeue.control_and"(%2863, %done_2601) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2602 = "equeue.launch"(%2842, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2865 = "equeue.control_and"(%2864, %done_2602) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2603 = "equeue.launch"(%2842, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2866 = "equeue.control_and"(%2865, %done_2603) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2866) : (!equeue.signal) -> ()
      %2867 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%2867) : (!equeue.signal) -> ()
      %2868 = "equeue.control_start"() : () -> !equeue.signal
      %done_2604 = "equeue.launch"(%2868, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2605 = "equeue.launch"(%2868, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2869 = "equeue.control_and"(%done_2604, %done_2605) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2606 = "equeue.launch"(%2868, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2870 = "equeue.control_and"(%2869, %done_2606) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2607 = "equeue.launch"(%2868, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2871 = "equeue.control_and"(%2870, %done_2607) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2608 = "equeue.launch"(%2868, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2872 = "equeue.control_and"(%2871, %done_2608) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2609 = "equeue.launch"(%2868, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2873 = "equeue.control_and"(%2872, %done_2609) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2610 = "equeue.launch"(%2868, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2874 = "equeue.control_and"(%2873, %done_2610) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2611 = "equeue.launch"(%2868, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2875 = "equeue.control_and"(%2874, %done_2611) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2612 = "equeue.launch"(%2868, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2876 = "equeue.control_and"(%2875, %done_2612) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2613 = "equeue.launch"(%2868, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2877 = "equeue.control_and"(%2876, %done_2613) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2614 = "equeue.launch"(%2868, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2878 = "equeue.control_and"(%2877, %done_2614) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2615 = "equeue.launch"(%2868, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2879 = "equeue.control_and"(%2878, %done_2615) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2616 = "equeue.launch"(%2868, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2880 = "equeue.control_and"(%2879, %done_2616) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2617 = "equeue.launch"(%2868, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2881 = "equeue.control_and"(%2880, %done_2617) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2618 = "equeue.launch"(%2868, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2882 = "equeue.control_and"(%2881, %done_2618) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2619 = "equeue.launch"(%2868, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2883 = "equeue.control_and"(%2882, %done_2619) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2620 = "equeue.launch"(%2868, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2884 = "equeue.control_and"(%2883, %done_2620) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2621 = "equeue.launch"(%2868, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2885 = "equeue.control_and"(%2884, %done_2621) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2622 = "equeue.launch"(%2868, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2886 = "equeue.control_and"(%2885, %done_2622) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2623 = "equeue.launch"(%2868, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2887 = "equeue.control_and"(%2886, %done_2623) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2624 = "equeue.launch"(%2868, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2888 = "equeue.control_and"(%2887, %done_2624) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2625 = "equeue.launch"(%2868, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2889 = "equeue.control_and"(%2888, %done_2625) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2626 = "equeue.launch"(%2868, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2890 = "equeue.control_and"(%2889, %done_2626) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2627 = "equeue.launch"(%2868, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2891 = "equeue.control_and"(%2890, %done_2627) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2628 = "equeue.launch"(%2868, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2892 = "equeue.control_and"(%2891, %done_2628) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2892) : (!equeue.signal) -> ()
      %2893 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%2893) : (!equeue.signal) -> ()
      %2894 = "equeue.control_start"() : () -> !equeue.signal
      %done_2629 = "equeue.launch"(%2894, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2630 = "equeue.launch"(%2894, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2895 = "equeue.control_and"(%done_2629, %done_2630) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2631 = "equeue.launch"(%2894, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2896 = "equeue.control_and"(%2895, %done_2631) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2632 = "equeue.launch"(%2894, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2897 = "equeue.control_and"(%2896, %done_2632) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2633 = "equeue.launch"(%2894, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2898 = "equeue.control_and"(%2897, %done_2633) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2634 = "equeue.launch"(%2894, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2899 = "equeue.control_and"(%2898, %done_2634) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2635 = "equeue.launch"(%2894, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2900 = "equeue.control_and"(%2899, %done_2635) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2636 = "equeue.launch"(%2894, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2901 = "equeue.control_and"(%2900, %done_2636) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2637 = "equeue.launch"(%2894, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2902 = "equeue.control_and"(%2901, %done_2637) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2638 = "equeue.launch"(%2894, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2903 = "equeue.control_and"(%2902, %done_2638) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2639 = "equeue.launch"(%2894, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2904 = "equeue.control_and"(%2903, %done_2639) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2640 = "equeue.launch"(%2894, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2905 = "equeue.control_and"(%2904, %done_2640) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2641 = "equeue.launch"(%2894, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2906 = "equeue.control_and"(%2905, %done_2641) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2642 = "equeue.launch"(%2894, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2907 = "equeue.control_and"(%2906, %done_2642) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2643 = "equeue.launch"(%2894, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2908 = "equeue.control_and"(%2907, %done_2643) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2644 = "equeue.launch"(%2894, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2909 = "equeue.control_and"(%2908, %done_2644) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2645 = "equeue.launch"(%2894, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2910 = "equeue.control_and"(%2909, %done_2645) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2646 = "equeue.launch"(%2894, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2911 = "equeue.control_and"(%2910, %done_2646) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2647 = "equeue.launch"(%2894, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2912 = "equeue.control_and"(%2911, %done_2647) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2648 = "equeue.launch"(%2894, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2913 = "equeue.control_and"(%2912, %done_2648) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2649 = "equeue.launch"(%2894, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2914 = "equeue.control_and"(%2913, %done_2649) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2650 = "equeue.launch"(%2894, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2915 = "equeue.control_and"(%2914, %done_2650) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2651 = "equeue.launch"(%2894, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2916 = "equeue.control_and"(%2915, %done_2651) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2652 = "equeue.launch"(%2894, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2917 = "equeue.control_and"(%2916, %done_2652) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2653 = "equeue.launch"(%2894, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2918 = "equeue.control_and"(%2917, %done_2653) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2918) : (!equeue.signal) -> ()
      %2919 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%2919) : (!equeue.signal) -> ()
      %2920 = "equeue.control_start"() : () -> !equeue.signal
      %done_2654 = "equeue.launch"(%2920, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2655 = "equeue.launch"(%2920, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2921 = "equeue.control_and"(%done_2654, %done_2655) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2656 = "equeue.launch"(%2920, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2922 = "equeue.control_and"(%2921, %done_2656) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2657 = "equeue.launch"(%2920, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2923 = "equeue.control_and"(%2922, %done_2657) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2658 = "equeue.launch"(%2920, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2924 = "equeue.control_and"(%2923, %done_2658) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2659 = "equeue.launch"(%2920, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2925 = "equeue.control_and"(%2924, %done_2659) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2660 = "equeue.launch"(%2920, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2926 = "equeue.control_and"(%2925, %done_2660) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2661 = "equeue.launch"(%2920, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2927 = "equeue.control_and"(%2926, %done_2661) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2662 = "equeue.launch"(%2920, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2928 = "equeue.control_and"(%2927, %done_2662) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2663 = "equeue.launch"(%2920, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2929 = "equeue.control_and"(%2928, %done_2663) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2664 = "equeue.launch"(%2920, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2930 = "equeue.control_and"(%2929, %done_2664) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2665 = "equeue.launch"(%2920, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2931 = "equeue.control_and"(%2930, %done_2665) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2666 = "equeue.launch"(%2920, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2932 = "equeue.control_and"(%2931, %done_2666) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2667 = "equeue.launch"(%2920, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2933 = "equeue.control_and"(%2932, %done_2667) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2668 = "equeue.launch"(%2920, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2934 = "equeue.control_and"(%2933, %done_2668) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2669 = "equeue.launch"(%2920, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2935 = "equeue.control_and"(%2934, %done_2669) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2670 = "equeue.launch"(%2920, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2936 = "equeue.control_and"(%2935, %done_2670) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2671 = "equeue.launch"(%2920, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2937 = "equeue.control_and"(%2936, %done_2671) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2672 = "equeue.launch"(%2920, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2938 = "equeue.control_and"(%2937, %done_2672) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2673 = "equeue.launch"(%2920, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2939 = "equeue.control_and"(%2938, %done_2673) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2674 = "equeue.launch"(%2920, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2940 = "equeue.control_and"(%2939, %done_2674) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2675 = "equeue.launch"(%2920, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2941 = "equeue.control_and"(%2940, %done_2675) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2676 = "equeue.launch"(%2920, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2942 = "equeue.control_and"(%2941, %done_2676) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2677 = "equeue.launch"(%2920, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2943 = "equeue.control_and"(%2942, %done_2677) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2678 = "equeue.launch"(%2920, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2944 = "equeue.control_and"(%2943, %done_2678) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2944) : (!equeue.signal) -> ()
      %2945 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%2945) : (!equeue.signal) -> ()
      %2946 = "equeue.control_start"() : () -> !equeue.signal
      %done_2679 = "equeue.launch"(%2946, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2680 = "equeue.launch"(%2946, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2947 = "equeue.control_and"(%done_2679, %done_2680) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2681 = "equeue.launch"(%2946, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2948 = "equeue.control_and"(%2947, %done_2681) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2682 = "equeue.launch"(%2946, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2949 = "equeue.control_and"(%2948, %done_2682) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2683 = "equeue.launch"(%2946, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2950 = "equeue.control_and"(%2949, %done_2683) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2684 = "equeue.launch"(%2946, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2951 = "equeue.control_and"(%2950, %done_2684) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2685 = "equeue.launch"(%2946, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2952 = "equeue.control_and"(%2951, %done_2685) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2686 = "equeue.launch"(%2946, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2953 = "equeue.control_and"(%2952, %done_2686) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2687 = "equeue.launch"(%2946, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2954 = "equeue.control_and"(%2953, %done_2687) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2688 = "equeue.launch"(%2946, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2955 = "equeue.control_and"(%2954, %done_2688) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2689 = "equeue.launch"(%2946, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2956 = "equeue.control_and"(%2955, %done_2689) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2690 = "equeue.launch"(%2946, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2957 = "equeue.control_and"(%2956, %done_2690) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2691 = "equeue.launch"(%2946, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2958 = "equeue.control_and"(%2957, %done_2691) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2692 = "equeue.launch"(%2946, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2959 = "equeue.control_and"(%2958, %done_2692) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2693 = "equeue.launch"(%2946, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        %3252 = addf %3251, %3250 : f32
        "equeue.write"(%3252, %arg9) {bank = 2 : i64} : (f32, memref<5x3x3xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2960 = "equeue.control_and"(%2959, %done_2693) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2694 = "equeue.launch"(%2946, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2961 = "equeue.control_and"(%2960, %done_2694) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2695 = "equeue.launch"(%2946, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2962 = "equeue.control_and"(%2961, %done_2695) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2696 = "equeue.launch"(%2946, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2963 = "equeue.control_and"(%2962, %done_2696) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2697 = "equeue.launch"(%2946, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2964 = "equeue.control_and"(%2963, %done_2697) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2698 = "equeue.launch"(%2946, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        %3252 = addf %3251, %3250 : f32
        "equeue.write"(%3252, %arg9) {bank = 3 : i64} : (f32, memref<5x3x3xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2965 = "equeue.control_and"(%2964, %done_2698) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2699 = "equeue.launch"(%2946, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2966 = "equeue.control_and"(%2965, %done_2699) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2700 = "equeue.launch"(%2946, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2967 = "equeue.control_and"(%2966, %done_2700) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2701 = "equeue.launch"(%2946, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2968 = "equeue.control_and"(%2967, %done_2701) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2702 = "equeue.launch"(%2946, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2969 = "equeue.control_and"(%2968, %done_2702) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2703 = "equeue.launch"(%2946, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        %3252 = addf %3251, %3250 : f32
        "equeue.write"(%3252, %arg8) {bank = 4 : i64} : (f32, memref<5x3x3xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2970 = "equeue.control_and"(%2969, %done_2703) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2970) : (!equeue.signal) -> ()
      %2971 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%2971) : (!equeue.signal) -> ()
      %2972 = "equeue.control_start"() : () -> !equeue.signal
      %done_2704 = "equeue.launch"(%2972, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2705 = "equeue.launch"(%2972, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2973 = "equeue.control_and"(%done_2704, %done_2705) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2706 = "equeue.launch"(%2972, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2974 = "equeue.control_and"(%2973, %done_2706) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2707 = "equeue.launch"(%2972, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2975 = "equeue.control_and"(%2974, %done_2707) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2708 = "equeue.launch"(%2972, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2976 = "equeue.control_and"(%2975, %done_2708) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2709 = "equeue.launch"(%2972, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2977 = "equeue.control_and"(%2976, %done_2709) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2710 = "equeue.launch"(%2972, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2978 = "equeue.control_and"(%2977, %done_2710) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2711 = "equeue.launch"(%2972, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2979 = "equeue.control_and"(%2978, %done_2711) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2712 = "equeue.launch"(%2972, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2980 = "equeue.control_and"(%2979, %done_2712) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2713 = "equeue.launch"(%2972, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2981 = "equeue.control_and"(%2980, %done_2713) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2714 = "equeue.launch"(%2972, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2982 = "equeue.control_and"(%2981, %done_2714) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2715 = "equeue.launch"(%2972, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2983 = "equeue.control_and"(%2982, %done_2715) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2716 = "equeue.launch"(%2972, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2984 = "equeue.control_and"(%2983, %done_2716) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2717 = "equeue.launch"(%2972, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2985 = "equeue.control_and"(%2984, %done_2717) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2718 = "equeue.launch"(%2972, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2986 = "equeue.control_and"(%2985, %done_2718) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2719 = "equeue.launch"(%2972, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2987 = "equeue.control_and"(%2986, %done_2719) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2720 = "equeue.launch"(%2972, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2988 = "equeue.control_and"(%2987, %done_2720) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2721 = "equeue.launch"(%2972, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2989 = "equeue.control_and"(%2988, %done_2721) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2722 = "equeue.launch"(%2972, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2990 = "equeue.control_and"(%2989, %done_2722) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2723 = "equeue.launch"(%2972, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2991 = "equeue.control_and"(%2990, %done_2723) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2724 = "equeue.launch"(%2972, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2992 = "equeue.control_and"(%2991, %done_2724) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2725 = "equeue.launch"(%2972, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2993 = "equeue.control_and"(%2992, %done_2725) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2726 = "equeue.launch"(%2972, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2994 = "equeue.control_and"(%2993, %done_2726) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2727 = "equeue.launch"(%2972, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2995 = "equeue.control_and"(%2994, %done_2727) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2728 = "equeue.launch"(%2972, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %2996 = "equeue.control_and"(%2995, %done_2728) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%2996) : (!equeue.signal) -> ()
      %2997 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%2997) : (!equeue.signal) -> ()
      %2998 = "equeue.control_start"() : () -> !equeue.signal
      %done_2729 = "equeue.launch"(%2998, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2730 = "equeue.launch"(%2998, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %2999 = "equeue.control_and"(%done_2729, %done_2730) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2731 = "equeue.launch"(%2998, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3000 = "equeue.control_and"(%2999, %done_2731) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2732 = "equeue.launch"(%2998, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3001 = "equeue.control_and"(%3000, %done_2732) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2733 = "equeue.launch"(%2998, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3002 = "equeue.control_and"(%3001, %done_2733) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2734 = "equeue.launch"(%2998, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3003 = "equeue.control_and"(%3002, %done_2734) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2735 = "equeue.launch"(%2998, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3004 = "equeue.control_and"(%3003, %done_2735) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2736 = "equeue.launch"(%2998, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3005 = "equeue.control_and"(%3004, %done_2736) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2737 = "equeue.launch"(%2998, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3006 = "equeue.control_and"(%3005, %done_2737) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2738 = "equeue.launch"(%2998, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3007 = "equeue.control_and"(%3006, %done_2738) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2739 = "equeue.launch"(%2998, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3008 = "equeue.control_and"(%3007, %done_2739) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2740 = "equeue.launch"(%2998, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3009 = "equeue.control_and"(%3008, %done_2740) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2741 = "equeue.launch"(%2998, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3010 = "equeue.control_and"(%3009, %done_2741) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2742 = "equeue.launch"(%2998, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3011 = "equeue.control_and"(%3010, %done_2742) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2743 = "equeue.launch"(%2998, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3012 = "equeue.control_and"(%3011, %done_2743) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2744 = "equeue.launch"(%2998, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3013 = "equeue.control_and"(%3012, %done_2744) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2745 = "equeue.launch"(%2998, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3014 = "equeue.control_and"(%3013, %done_2745) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2746 = "equeue.launch"(%2998, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3015 = "equeue.control_and"(%3014, %done_2746) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2747 = "equeue.launch"(%2998, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3016 = "equeue.control_and"(%3015, %done_2747) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2748 = "equeue.launch"(%2998, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3017 = "equeue.control_and"(%3016, %done_2748) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2749 = "equeue.launch"(%2998, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3018 = "equeue.control_and"(%3017, %done_2749) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2750 = "equeue.launch"(%2998, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3019 = "equeue.control_and"(%3018, %done_2750) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2751 = "equeue.launch"(%2998, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3020 = "equeue.control_and"(%3019, %done_2751) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2752 = "equeue.launch"(%2998, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3021 = "equeue.control_and"(%3020, %done_2752) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2753 = "equeue.launch"(%2998, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3022 = "equeue.control_and"(%3021, %done_2753) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%3022) : (!equeue.signal) -> ()
      %3023 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%3023) : (!equeue.signal) -> ()
      %3024 = "equeue.control_start"() : () -> !equeue.signal
      %done_2754 = "equeue.launch"(%3024, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2755 = "equeue.launch"(%3024, %156, %159, %157, %158, %165, %189, %188) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3025 = "equeue.control_and"(%done_2754, %done_2755) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2756 = "equeue.launch"(%3024, %186, %189, %187, %188, %195, %219, %218) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3026 = "equeue.control_and"(%3025, %done_2756) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2757 = "equeue.launch"(%3024, %216, %219, %217, %218, %225, %249, %248) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3027 = "equeue.control_and"(%3026, %done_2757) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2758 = "equeue.launch"(%3024, %246, %249, %247, %248, %255, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3028 = "equeue.control_and"(%3027, %done_2758) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2759 = "equeue.launch"(%3024, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3029 = "equeue.control_and"(%3028, %done_2759) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2760 = "equeue.launch"(%3024, %162, %165, %163, %164, %171, %195, %194) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3030 = "equeue.control_and"(%3029, %done_2760) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2761 = "equeue.launch"(%3024, %192, %195, %193, %194, %201, %225, %224) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3031 = "equeue.control_and"(%3030, %done_2761) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2762 = "equeue.launch"(%3024, %222, %225, %223, %224, %231, %255, %254) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3032 = "equeue.control_and"(%3031, %done_2762) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2763 = "equeue.launch"(%3024, %252, %255, %253, %254, %261, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3033 = "equeue.control_and"(%3032, %done_2763) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2764 = "equeue.launch"(%3024, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3034 = "equeue.control_and"(%3033, %done_2764) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2765 = "equeue.launch"(%3024, %168, %171, %169, %170, %177, %201, %200) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3035 = "equeue.control_and"(%3034, %done_2765) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2766 = "equeue.launch"(%3024, %198, %201, %199, %200, %207, %231, %230) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3036 = "equeue.control_and"(%3035, %done_2766) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2767 = "equeue.launch"(%3024, %228, %231, %229, %230, %237, %261, %260) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3037 = "equeue.control_and"(%3036, %done_2767) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2768 = "equeue.launch"(%3024, %258, %261, %259, %260, %267, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3038 = "equeue.control_and"(%3037, %done_2768) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2769 = "equeue.launch"(%3024, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3039 = "equeue.control_and"(%3038, %done_2769) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2770 = "equeue.launch"(%3024, %174, %177, %175, %176, %183, %207, %206) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3040 = "equeue.control_and"(%3039, %done_2770) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2771 = "equeue.launch"(%3024, %204, %207, %205, %206, %213, %237, %236) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3041 = "equeue.control_and"(%3040, %done_2771) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2772 = "equeue.launch"(%3024, %234, %237, %235, %236, %243, %267, %266) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3042 = "equeue.control_and"(%3041, %done_2772) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2773 = "equeue.launch"(%3024, %264, %267, %265, %266, %273, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3043 = "equeue.control_and"(%3042, %done_2773) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2774 = "equeue.launch"(%3024, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3044 = "equeue.control_and"(%3043, %done_2774) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2775 = "equeue.launch"(%3024, %180, %183, %181, %182, %213, %212) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3045 = "equeue.control_and"(%3044, %done_2775) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2776 = "equeue.launch"(%3024, %210, %213, %211, %212, %243, %242) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3046 = "equeue.control_and"(%3045, %done_2776) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2777 = "equeue.launch"(%3024, %240, %243, %241, %242, %273, %272) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3047 = "equeue.control_and"(%3046, %done_2777) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2778 = "equeue.launch"(%3024, %270, %273, %271, %272, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3048 = "equeue.control_and"(%3047, %done_2778) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%3048) : (!equeue.signal) -> ()
      %c0_2779 = constant 0 : index
      %3049 = "equeue.control_start"() : () -> !equeue.signal
      %3050 = "equeue.memcpy"(%3049, %122, %127, %111, %c0_2779) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_2780 = "equeue.launch"(%3050, %126, %127, %157) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3051 = "equeue.control_and"(%done_2780, %3050) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %3052 = "equeue.memcpy"(%3049, %122, %133, %113, %c0_2779) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_2781 = "equeue.launch"(%3052, %132, %133, %163) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3053 = "equeue.control_and"(%3052, %3051, %done_2781) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %3054 = "equeue.memcpy"(%3049, %122, %139, %115, %c0_2779) {dest_bank = 0 : i64, src_bank = 2 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_2782 = "equeue.launch"(%3054, %138, %139, %169) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3055 = "equeue.control_and"(%3054, %3053, %done_2782) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %3056 = "equeue.memcpy"(%3049, %122, %145, %117, %c0_2779) {dest_bank = 0 : i64, src_bank = 3 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_2783 = "equeue.launch"(%3056, %144, %145, %175) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3057 = "equeue.control_and"(%3056, %3055, %done_2783) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      %3058 = "equeue.memcpy"(%3049, %122, %151, %119, %c0_2779) {dest_bank = 0 : i64, src_bank = 4 : i64} : (!equeue.signal, memref<5x3x7x3xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      %done_2784 = "equeue.launch"(%3058, %150, %151, %181) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg6) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3059 = "equeue.control_and"(%3058, %3057, %done_2784) : (!equeue.signal, !equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%3059) : (!equeue.signal) -> ()
      %3060 = "equeue.control_start"() : () -> !equeue.signal
      %3061 = "equeue.memcpy"(%3060, %121, %129, %102) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32) -> !equeue.signal
      %3062 = "equeue.memcpy"(%3060, %121, %159, %104) {dest_bank = 0 : i64, src_bank = 1 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32) -> !equeue.signal
      %3063 = "equeue.control_and"(%3061, %3062) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%3063) : (!equeue.signal) -> ()
      %3064 = "equeue.control_start"() : () -> !equeue.signal
      %done_2785 = "equeue.launch"(%3064, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2786 = "equeue.launch"(%3064, %156, %159, %157, %158, %165, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3065 = "equeue.control_and"(%done_2785, %done_2786) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2787 = "equeue.launch"(%3064, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3066 = "equeue.control_and"(%3065, %done_2787) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2788 = "equeue.launch"(%3064, %162, %165, %163, %164, %171, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3067 = "equeue.control_and"(%3066, %done_2788) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2789 = "equeue.launch"(%3064, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3068 = "equeue.control_and"(%3067, %done_2789) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2790 = "equeue.launch"(%3064, %168, %171, %169, %170, %177, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3069 = "equeue.control_and"(%3068, %done_2790) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2791 = "equeue.launch"(%3064, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3070 = "equeue.control_and"(%3069, %done_2791) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2792 = "equeue.launch"(%3064, %174, %177, %175, %176, %183, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3071 = "equeue.control_and"(%3070, %done_2792) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2793 = "equeue.launch"(%3064, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3072 = "equeue.control_and"(%3071, %done_2793) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2794 = "equeue.launch"(%3064, %180, %183, %181, %182, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3073 = "equeue.control_and"(%3072, %done_2794) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%3073) : (!equeue.signal) -> ()
      %3074 = "equeue.control_start"() : () -> !equeue.signal
      %3075 = "equeue.memcpy"(%3074, %121, %129, %102, %c0_2779) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      "equeue.await"(%3075) : (!equeue.signal) -> ()
      %3076 = "equeue.control_start"() : () -> !equeue.signal
      %done_2795 = "equeue.launch"(%3076, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2796 = "equeue.launch"(%3076, %156, %159, %157, %158, %165, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3077 = "equeue.control_and"(%done_2795, %done_2796) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2797 = "equeue.launch"(%3076, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3078 = "equeue.control_and"(%3077, %done_2797) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2798 = "equeue.launch"(%3076, %162, %165, %163, %164, %171, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3079 = "equeue.control_and"(%3078, %done_2798) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2799 = "equeue.launch"(%3076, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3080 = "equeue.control_and"(%3079, %done_2799) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2800 = "equeue.launch"(%3076, %168, %171, %169, %170, %177, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3081 = "equeue.control_and"(%3080, %done_2800) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2801 = "equeue.launch"(%3076, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3082 = "equeue.control_and"(%3081, %done_2801) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2802 = "equeue.launch"(%3076, %174, %177, %175, %176, %183, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3083 = "equeue.control_and"(%3082, %done_2802) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2803 = "equeue.launch"(%3076, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3084 = "equeue.control_and"(%3083, %done_2803) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2804 = "equeue.launch"(%3076, %180, %183, %181, %182, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3085 = "equeue.control_and"(%3084, %done_2804) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%3085) : (!equeue.signal) -> ()
      %3086 = "equeue.control_start"() : () -> !equeue.signal
      %3087 = "equeue.memcpy"(%3086, %121, %129, %102, %c0_2779) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      "equeue.await"(%3087) : (!equeue.signal) -> ()
      %3088 = "equeue.control_start"() : () -> !equeue.signal
      %done_2805 = "equeue.launch"(%3088, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2806 = "equeue.launch"(%3088, %156, %159, %157, %158, %165, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3089 = "equeue.control_and"(%done_2805, %done_2806) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2807 = "equeue.launch"(%3088, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3090 = "equeue.control_and"(%3089, %done_2807) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2808 = "equeue.launch"(%3088, %162, %165, %163, %164, %171, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3091 = "equeue.control_and"(%3090, %done_2808) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2809 = "equeue.launch"(%3088, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3092 = "equeue.control_and"(%3091, %done_2809) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2810 = "equeue.launch"(%3088, %168, %171, %169, %170, %177, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3093 = "equeue.control_and"(%3092, %done_2810) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2811 = "equeue.launch"(%3088, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3094 = "equeue.control_and"(%3093, %done_2811) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2812 = "equeue.launch"(%3088, %174, %177, %175, %176, %183, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3095 = "equeue.control_and"(%3094, %done_2812) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2813 = "equeue.launch"(%3088, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3096 = "equeue.control_and"(%3095, %done_2813) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2814 = "equeue.launch"(%3088, %180, %183, %181, %182, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3097 = "equeue.control_and"(%3096, %done_2814) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%3097) : (!equeue.signal) -> ()
      %3098 = "equeue.control_start"() : () -> !equeue.signal
      %3099 = "equeue.memcpy"(%3098, %121, %129, %102, %c0_2779) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      "equeue.await"(%3099) : (!equeue.signal) -> ()
      %3100 = "equeue.control_start"() : () -> !equeue.signal
      %done_2815 = "equeue.launch"(%3100, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2816 = "equeue.launch"(%3100, %156, %159, %157, %158, %165, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3101 = "equeue.control_and"(%done_2815, %done_2816) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2817 = "equeue.launch"(%3100, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3102 = "equeue.control_and"(%3101, %done_2817) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2818 = "equeue.launch"(%3100, %162, %165, %163, %164, %171, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3103 = "equeue.control_and"(%3102, %done_2818) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2819 = "equeue.launch"(%3100, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3104 = "equeue.control_and"(%3103, %done_2819) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2820 = "equeue.launch"(%3100, %168, %171, %169, %170, %177, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3105 = "equeue.control_and"(%3104, %done_2820) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2821 = "equeue.launch"(%3100, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3106 = "equeue.control_and"(%3105, %done_2821) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2822 = "equeue.launch"(%3100, %174, %177, %175, %176, %183, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3107 = "equeue.control_and"(%3106, %done_2822) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2823 = "equeue.launch"(%3100, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3108 = "equeue.control_and"(%3107, %done_2823) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2824 = "equeue.launch"(%3100, %180, %183, %181, %182, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3109 = "equeue.control_and"(%3108, %done_2824) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%3109) : (!equeue.signal) -> ()
      %3110 = "equeue.control_start"() : () -> !equeue.signal
      %3111 = "equeue.memcpy"(%3110, %121, %129, %102, %c0_2779) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      "equeue.await"(%3111) : (!equeue.signal) -> ()
      %3112 = "equeue.control_start"() : () -> !equeue.signal
      %done_2825 = "equeue.launch"(%3112, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2826 = "equeue.launch"(%3112, %156, %159, %157, %158, %165, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3113 = "equeue.control_and"(%done_2825, %done_2826) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2827 = "equeue.launch"(%3112, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3114 = "equeue.control_and"(%3113, %done_2827) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2828 = "equeue.launch"(%3112, %162, %165, %163, %164, %171, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3115 = "equeue.control_and"(%3114, %done_2828) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2829 = "equeue.launch"(%3112, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3116 = "equeue.control_and"(%3115, %done_2829) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2830 = "equeue.launch"(%3112, %168, %171, %169, %170, %177, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3117 = "equeue.control_and"(%3116, %done_2830) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2831 = "equeue.launch"(%3112, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3118 = "equeue.control_and"(%3117, %done_2831) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2832 = "equeue.launch"(%3112, %174, %177, %175, %176, %183, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3119 = "equeue.control_and"(%3118, %done_2832) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2833 = "equeue.launch"(%3112, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3120 = "equeue.control_and"(%3119, %done_2833) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2834 = "equeue.launch"(%3112, %180, %183, %181, %182, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3121 = "equeue.control_and"(%3120, %done_2834) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%3121) : (!equeue.signal) -> ()
      %3122 = "equeue.control_start"() : () -> !equeue.signal
      %3123 = "equeue.memcpy"(%3122, %121, %129, %102, %c0_2779) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      "equeue.await"(%3123) : (!equeue.signal) -> ()
      %3124 = "equeue.control_start"() : () -> !equeue.signal
      %done_2835 = "equeue.launch"(%3124, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2836 = "equeue.launch"(%3124, %156, %159, %157, %158, %165, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3125 = "equeue.control_and"(%done_2835, %done_2836) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2837 = "equeue.launch"(%3124, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3126 = "equeue.control_and"(%3125, %done_2837) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2838 = "equeue.launch"(%3124, %162, %165, %163, %164, %171, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3127 = "equeue.control_and"(%3126, %done_2838) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2839 = "equeue.launch"(%3124, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3128 = "equeue.control_and"(%3127, %done_2839) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2840 = "equeue.launch"(%3124, %168, %171, %169, %170, %177, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3129 = "equeue.control_and"(%3128, %done_2840) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2841 = "equeue.launch"(%3124, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3130 = "equeue.control_and"(%3129, %done_2841) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2842 = "equeue.launch"(%3124, %174, %177, %175, %176, %183, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3131 = "equeue.control_and"(%3130, %done_2842) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2843 = "equeue.launch"(%3124, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3132 = "equeue.control_and"(%3131, %done_2843) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2844 = "equeue.launch"(%3124, %180, %183, %181, %182, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3133 = "equeue.control_and"(%3132, %done_2844) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%3133) : (!equeue.signal) -> ()
      %3134 = "equeue.control_start"() : () -> !equeue.signal
      %3135 = "equeue.memcpy"(%3134, %121, %129, %102, %c0_2779) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      "equeue.await"(%3135) : (!equeue.signal) -> ()
      %3136 = "equeue.control_start"() : () -> !equeue.signal
      %done_2845 = "equeue.launch"(%3136, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2846 = "equeue.launch"(%3136, %156, %159, %157, %158, %165, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3137 = "equeue.control_and"(%done_2845, %done_2846) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2847 = "equeue.launch"(%3136, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3138 = "equeue.control_and"(%3137, %done_2847) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2848 = "equeue.launch"(%3136, %162, %165, %163, %164, %171, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3139 = "equeue.control_and"(%3138, %done_2848) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2849 = "equeue.launch"(%3136, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3140 = "equeue.control_and"(%3139, %done_2849) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2850 = "equeue.launch"(%3136, %168, %171, %169, %170, %177, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3141 = "equeue.control_and"(%3140, %done_2850) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2851 = "equeue.launch"(%3136, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3142 = "equeue.control_and"(%3141, %done_2851) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2852 = "equeue.launch"(%3136, %174, %177, %175, %176, %183, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3143 = "equeue.control_and"(%3142, %done_2852) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2853 = "equeue.launch"(%3136, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3144 = "equeue.control_and"(%3143, %done_2853) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2854 = "equeue.launch"(%3136, %180, %183, %181, %182, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3145 = "equeue.control_and"(%3144, %done_2854) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%3145) : (!equeue.signal) -> ()
      %3146 = "equeue.control_start"() : () -> !equeue.signal
      %3147 = "equeue.memcpy"(%3146, %121, %129, %102, %c0_2779) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      "equeue.await"(%3147) : (!equeue.signal) -> ()
      %3148 = "equeue.control_start"() : () -> !equeue.signal
      %done_2855 = "equeue.launch"(%3148, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2856 = "equeue.launch"(%3148, %156, %159, %157, %158, %165, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3149 = "equeue.control_and"(%done_2855, %done_2856) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2857 = "equeue.launch"(%3148, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3150 = "equeue.control_and"(%3149, %done_2857) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2858 = "equeue.launch"(%3148, %162, %165, %163, %164, %171, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3151 = "equeue.control_and"(%3150, %done_2858) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2859 = "equeue.launch"(%3148, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3152 = "equeue.control_and"(%3151, %done_2859) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2860 = "equeue.launch"(%3148, %168, %171, %169, %170, %177, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3153 = "equeue.control_and"(%3152, %done_2860) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2861 = "equeue.launch"(%3148, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3154 = "equeue.control_and"(%3153, %done_2861) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2862 = "equeue.launch"(%3148, %174, %177, %175, %176, %183, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3155 = "equeue.control_and"(%3154, %done_2862) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2863 = "equeue.launch"(%3148, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3156 = "equeue.control_and"(%3155, %done_2863) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2864 = "equeue.launch"(%3148, %180, %183, %181, %182, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3157 = "equeue.control_and"(%3156, %done_2864) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%3157) : (!equeue.signal) -> ()
      %3158 = "equeue.control_start"() : () -> !equeue.signal
      %3159 = "equeue.memcpy"(%3158, %121, %129, %102, %c0_2779) {dest_bank = 0 : i64, src_bank = 0 : i64} : (!equeue.signal, memref<3x7x7xf32>, memref<1xf32>, i32, index) -> !equeue.signal
      "equeue.await"(%3159) : (!equeue.signal) -> ()
      %3160 = "equeue.control_start"() : () -> !equeue.signal
      %done_2865 = "equeue.launch"(%3160, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2866 = "equeue.launch"(%3160, %156, %159, %157, %158, %165, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3161 = "equeue.control_and"(%done_2865, %done_2866) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2867 = "equeue.launch"(%3160, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3162 = "equeue.control_and"(%3161, %done_2867) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2868 = "equeue.launch"(%3160, %162, %165, %163, %164, %171, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3163 = "equeue.control_and"(%3162, %done_2868) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2869 = "equeue.launch"(%3160, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3164 = "equeue.control_and"(%3163, %done_2869) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2870 = "equeue.launch"(%3160, %168, %171, %169, %170, %177, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3165 = "equeue.control_and"(%3164, %done_2870) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2871 = "equeue.launch"(%3160, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3166 = "equeue.control_and"(%3165, %done_2871) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2872 = "equeue.launch"(%3160, %174, %177, %175, %176, %183, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3167 = "equeue.control_and"(%3166, %done_2872) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2873 = "equeue.launch"(%3160, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3168 = "equeue.control_and"(%3167, %done_2873) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2874 = "equeue.launch"(%3160, %180, %183, %181, %182, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3169 = "equeue.control_and"(%3168, %done_2874) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%3169) : (!equeue.signal) -> ()
      %3170 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%3170) : (!equeue.signal) -> ()
      %3171 = "equeue.control_start"() : () -> !equeue.signal
      %done_2875 = "equeue.launch"(%3171, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2876 = "equeue.launch"(%3171, %156, %159, %157, %158, %165, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3172 = "equeue.control_and"(%done_2875, %done_2876) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2877 = "equeue.launch"(%3171, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3173 = "equeue.control_and"(%3172, %done_2877) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2878 = "equeue.launch"(%3171, %162, %165, %163, %164, %171, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3174 = "equeue.control_and"(%3173, %done_2878) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2879 = "equeue.launch"(%3171, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3175 = "equeue.control_and"(%3174, %done_2879) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2880 = "equeue.launch"(%3171, %168, %171, %169, %170, %177, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3176 = "equeue.control_and"(%3175, %done_2880) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2881 = "equeue.launch"(%3171, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3177 = "equeue.control_and"(%3176, %done_2881) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2882 = "equeue.launch"(%3171, %174, %177, %175, %176, %183, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3178 = "equeue.control_and"(%3177, %done_2882) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2883 = "equeue.launch"(%3171, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3179 = "equeue.control_and"(%3178, %done_2883) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2884 = "equeue.launch"(%3171, %180, %183, %181, %182, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3180 = "equeue.control_and"(%3179, %done_2884) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%3180) : (!equeue.signal) -> ()
      %3181 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%3181) : (!equeue.signal) -> ()
      %3182 = "equeue.control_start"() : () -> !equeue.signal
      %done_2885 = "equeue.launch"(%3182, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2886 = "equeue.launch"(%3182, %156, %159, %157, %158, %165, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3183 = "equeue.control_and"(%done_2885, %done_2886) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2887 = "equeue.launch"(%3182, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3184 = "equeue.control_and"(%3183, %done_2887) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2888 = "equeue.launch"(%3182, %162, %165, %163, %164, %171, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3185 = "equeue.control_and"(%3184, %done_2888) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2889 = "equeue.launch"(%3182, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3186 = "equeue.control_and"(%3185, %done_2889) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2890 = "equeue.launch"(%3182, %168, %171, %169, %170, %177, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3187 = "equeue.control_and"(%3186, %done_2890) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2891 = "equeue.launch"(%3182, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3188 = "equeue.control_and"(%3187, %done_2891) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2892 = "equeue.launch"(%3182, %174, %177, %175, %176, %183, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3189 = "equeue.control_and"(%3188, %done_2892) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2893 = "equeue.launch"(%3182, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3190 = "equeue.control_and"(%3189, %done_2893) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2894 = "equeue.launch"(%3182, %180, %183, %181, %182, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3191 = "equeue.control_and"(%3190, %done_2894) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%3191) : (!equeue.signal) -> ()
      %3192 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%3192) : (!equeue.signal) -> ()
      %3193 = "equeue.control_start"() : () -> !equeue.signal
      %done_2895 = "equeue.launch"(%3193, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2896 = "equeue.launch"(%3193, %156, %159, %157, %158, %165, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3194 = "equeue.control_and"(%done_2895, %done_2896) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2897 = "equeue.launch"(%3193, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3195 = "equeue.control_and"(%3194, %done_2897) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2898 = "equeue.launch"(%3193, %162, %165, %163, %164, %171, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3196 = "equeue.control_and"(%3195, %done_2898) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2899 = "equeue.launch"(%3193, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3197 = "equeue.control_and"(%3196, %done_2899) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2900 = "equeue.launch"(%3193, %168, %171, %169, %170, %177, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3198 = "equeue.control_and"(%3197, %done_2900) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2901 = "equeue.launch"(%3193, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3199 = "equeue.control_and"(%3198, %done_2901) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2902 = "equeue.launch"(%3193, %174, %177, %175, %176, %183, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3200 = "equeue.control_and"(%3199, %done_2902) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2903 = "equeue.launch"(%3193, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3201 = "equeue.control_and"(%3200, %done_2903) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2904 = "equeue.launch"(%3193, %180, %183, %181, %182, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3202 = "equeue.control_and"(%3201, %done_2904) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%3202) : (!equeue.signal) -> ()
      %3203 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%3203) : (!equeue.signal) -> ()
      %3204 = "equeue.control_start"() : () -> !equeue.signal
      %done_2905 = "equeue.launch"(%3204, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2906 = "equeue.launch"(%3204, %156, %159, %157, %158, %165, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3205 = "equeue.control_and"(%done_2905, %done_2906) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2907 = "equeue.launch"(%3204, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3206 = "equeue.control_and"(%3205, %done_2907) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2908 = "equeue.launch"(%3204, %162, %165, %163, %164, %171, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3207 = "equeue.control_and"(%3206, %done_2908) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2909 = "equeue.launch"(%3204, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3208 = "equeue.control_and"(%3207, %done_2909) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2910 = "equeue.launch"(%3204, %168, %171, %169, %170, %177, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3209 = "equeue.control_and"(%3208, %done_2910) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2911 = "equeue.launch"(%3204, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3210 = "equeue.control_and"(%3209, %done_2911) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2912 = "equeue.launch"(%3204, %174, %177, %175, %176, %183, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3211 = "equeue.control_and"(%3210, %done_2912) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2913 = "equeue.launch"(%3204, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3212 = "equeue.control_and"(%3211, %done_2913) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2914 = "equeue.launch"(%3204, %180, %183, %181, %182, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3213 = "equeue.control_and"(%3212, %done_2914) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%3213) : (!equeue.signal) -> ()
      %3214 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%3214) : (!equeue.signal) -> ()
      %3215 = "equeue.control_start"() : () -> !equeue.signal
      %done_2915 = "equeue.launch"(%3215, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2916 = "equeue.launch"(%3215, %156, %159, %157, %158, %165, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3216 = "equeue.control_and"(%done_2915, %done_2916) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2917 = "equeue.launch"(%3215, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3217 = "equeue.control_and"(%3216, %done_2917) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2918 = "equeue.launch"(%3215, %162, %165, %163, %164, %171, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3218 = "equeue.control_and"(%3217, %done_2918) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2919 = "equeue.launch"(%3215, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3219 = "equeue.control_and"(%3218, %done_2919) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2920 = "equeue.launch"(%3215, %168, %171, %169, %170, %177, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3220 = "equeue.control_and"(%3219, %done_2920) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2921 = "equeue.launch"(%3215, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3221 = "equeue.control_and"(%3220, %done_2921) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2922 = "equeue.launch"(%3215, %174, %177, %175, %176, %183, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3222 = "equeue.control_and"(%3221, %done_2922) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2923 = "equeue.launch"(%3215, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3223 = "equeue.control_and"(%3222, %done_2923) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2924 = "equeue.launch"(%3215, %180, %183, %181, %182, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3224 = "equeue.control_and"(%3223, %done_2924) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%3224) : (!equeue.signal) -> ()
      %3225 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%3225) : (!equeue.signal) -> ()
      %3226 = "equeue.control_start"() : () -> !equeue.signal
      %done_2925 = "equeue.launch"(%3226, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2926 = "equeue.launch"(%3226, %156, %159, %157, %158, %165, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3227 = "equeue.control_and"(%done_2925, %done_2926) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2927 = "equeue.launch"(%3226, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3228 = "equeue.control_and"(%3227, %done_2927) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2928 = "equeue.launch"(%3226, %162, %165, %163, %164, %171, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3229 = "equeue.control_and"(%3228, %done_2928) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2929 = "equeue.launch"(%3226, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3230 = "equeue.control_and"(%3229, %done_2929) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2930 = "equeue.launch"(%3226, %168, %171, %169, %170, %177, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3231 = "equeue.control_and"(%3230, %done_2930) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2931 = "equeue.launch"(%3226, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3232 = "equeue.control_and"(%3231, %done_2931) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2932 = "equeue.launch"(%3226, %174, %177, %175, %176, %183, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3233 = "equeue.control_and"(%3232, %done_2932) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2933 = "equeue.launch"(%3226, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3234 = "equeue.control_and"(%3233, %done_2933) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2934 = "equeue.launch"(%3226, %180, %183, %181, %182, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3235 = "equeue.control_and"(%3234, %done_2934) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%3235) : (!equeue.signal) -> ()
      %3236 = "equeue.control_start"() : () -> !equeue.signal
      "equeue.await"(%3236) : (!equeue.signal) -> ()
      %3237 = "equeue.control_start"() : () -> !equeue.signal
      %done_2935 = "equeue.launch"(%3237, %126, %129, %127, %128, %135, %159, %158) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %done_2936 = "equeue.launch"(%3237, %156, %159, %157, %158, %165, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3238 = "equeue.control_and"(%done_2935, %done_2936) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2937 = "equeue.launch"(%3237, %132, %135, %133, %134, %141, %165, %164) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3239 = "equeue.control_and"(%3238, %done_2937) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2938 = "equeue.launch"(%3237, %162, %165, %163, %164, %171, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3240 = "equeue.control_and"(%3239, %done_2938) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2939 = "equeue.launch"(%3237, %138, %141, %139, %140, %147, %171, %170) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3241 = "equeue.control_and"(%3240, %done_2939) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2940 = "equeue.launch"(%3237, %168, %171, %169, %170, %177, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3242 = "equeue.control_and"(%3241, %done_2940) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2941 = "equeue.launch"(%3237, %144, %147, %145, %146, %153, %177, %176) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>, %arg10: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.write"(%3247, %arg9) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg10) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3243 = "equeue.control_and"(%3242, %done_2941) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2942 = "equeue.launch"(%3237, %174, %177, %175, %176, %183, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3244 = "equeue.control_and"(%3243, %done_2942) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2943 = "equeue.launch"(%3237, %150, %153, %151, %152, %183, %182) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<1xf32>, %arg9: memref<1xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        "equeue.write"(%3247, %arg8) {bank = 0 : i64} : (f32, memref<1xf32>) -> ()
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.write"(%3251, %arg9) {bank = 2 : i64} : (f32, memref<1xf32>) -> ()
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<1xf32>) -> !equeue.signal
      %3245 = "equeue.control_and"(%3244, %done_2943) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      %done_2944 = "equeue.launch"(%3237, %180, %183, %181, %182, %123) ( {
      ^bb0(%arg5: memref<1xf32>, %arg6: memref<1xf32>, %arg7: memref<1xf32>, %arg8: memref<5x3x3xf32>):  // no predecessors
        %3247 = "equeue.read"(%arg5) {bank = 0 : i64} : (memref<1xf32>) -> f32
        %3248 = "equeue.read"(%arg6) {bank = 1 : i64} : (memref<1xf32>) -> f32
        %3249 = mulf %3247, %3248 : f32
        %3250 = "equeue.read"(%arg7) {bank = 2 : i64} : (memref<1xf32>) -> f32
        %3251 = addf %3249, %3250 : f32
        "equeue.return"() : () -> ()
      }) : (!equeue.signal, i32, memref<1xf32>, memref<1xf32>, memref<1xf32>, memref<5x3x3xf32>) -> !equeue.signal
      %3246 = "equeue.control_and"(%3245, %done_2944) : (!equeue.signal, !equeue.signal) -> !equeue.signal
      "equeue.await"(%3246) : (!equeue.signal) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, memref<3x7x7xf32>, memref<5x3x7x3xf32>) -> !equeue.signal
    return
  }
}
