

module {
  func @graph(%arg0: tensor<512xi32>) {
    %0 = "equeue.create_mem"() {banks = 1 : i64, data_bit = 32 : i64, shape = dense<512> : tensor<1xi64>, type = "SINK"} : () -> i32
    %1 = "equeue.alloc"(%0) {data_bit = 32 : i64, shape = dense<512> : tensor<1xi64>} : (i32) -> memref<512xf32>
    %2 = "equeue.create_mem"() {banks = 1 : i64, data_bit = 32 : i64, shape = dense<481> : tensor<1xi64>, type = "SINK"} : () -> i32
    %3 = "equeue.alloc"(%2) {data_bit = 32 : i64, shape = dense<481> : tensor<1xi64>} : (i32) -> memref<481xf32>
    %4 = "equeue.connection"() {bandwidth = 32 : i64, type = "Streaming"} : () -> i32
    %5 = "equeue.create_comp_field"(%4) {names = "stream0 "} : (i32) -> i32
    %6 = "equeue.connection"() {bandwidth = 32 : i64, type = "Streaming"} : () -> i32
    "equeue.add_comp_field"(%5, %6) {names = "stream1 "} : (i32, i32) -> ()
    %7 = "equeue.connection"() {bandwidth = 32 : i64, type = "Streaming"} : () -> i32
    "equeue.add_comp_field"(%5, %7) {names = "stream2 "} : (i32, i32) -> ()
    %8 = "equeue.connection"() {bandwidth = 32 : i64, type = "Streaming"} : () -> i32
    "equeue.add_comp_field"(%5, %8) {names = "stream3 "} : (i32, i32) -> ()
    %9 = "equeue.connection"() {bandwidth = 32 : i64, type = "Streaming"} : () -> i32
    "equeue.add_comp_field"(%5, %9) {names = "stream4 "} : (i32, i32) -> ()
    %10 = "equeue.connection"() {bandwidth = 32 : i64, type = "Streaming"} : () -> i32
    "equeue.add_comp_field"(%5, %10) {names = "stream5 "} : (i32, i32) -> ()
    %11 = "equeue.connection"() {bandwidth = 32 : i64, type = "Streaming"} : () -> i32
    "equeue.add_comp_field"(%5, %11) {names = "stream6 "} : (i32, i32) -> ()
    %12 = "equeue.connection"() {bandwidth = 32 : i64, type = "Streaming"} : () -> i32
    "equeue.add_comp_field"(%5, %12) {names = "stream7 "} : (i32, i32) -> ()
    %13 = "equeue.connection"() {bandwidth = 32 : i64, type = "Streaming"} : () -> i32
    "equeue.add_comp_field"(%5, %13) {names = "stream8 "} : (i32, i32) -> ()
    %14 = "equeue.connection"() {bandwidth = 32 : i64, type = "Streaming"} : () -> i32
    "equeue.add_comp_field"(%5, %14) {names = "stream9 "} : (i32, i32) -> ()
    %15 = "equeue.connection"() {bandwidth = 32 : i64, type = "Streaming"} : () -> i32
    "equeue.add_comp_field"(%5, %15) {names = "stream10 "} : (i32, i32) -> ()
    %16 = "equeue.connection"() {bandwidth = 32 : i64, type = "Streaming"} : () -> i32
    "equeue.add_comp_field"(%5, %16) {names = "stream11 "} : (i32, i32) -> ()
    %17 = "equeue.connection"() {bandwidth = 32 : i64, type = "Streaming"} : () -> i32
    "equeue.add_comp_field"(%5, %17) {names = "stream12 "} : (i32, i32) -> ()
    %18 = "equeue.connection"() {bandwidth = 32 : i64, type = "Streaming"} : () -> i32
    "equeue.add_comp_field"(%5, %18) {names = "stream13 "} : (i32, i32) -> ()
    %19 = "equeue.connection"() {bandwidth = 32 : i64, type = "Streaming"} : () -> i32
    "equeue.add_comp_field"(%5, %19) {names = "stream14 "} : (i32, i32) -> ()
    %20 = "equeue.connection"() {bandwidth = 32 : i64, type = "Streaming"} : () -> i32
    "equeue.add_comp_field"(%5, %20) {names = "stream15 "} : (i32, i32) -> ()
    %21 = "equeue.connection"() {bandwidth = 32 : i64, type = "Streaming"} : () -> i32
    "equeue.add_comp_field"(%5, %21) {names = "stream16 "} : (i32, i32) -> ()
    %22 = "equeue.connection"() {bandwidth = 32 : i64, type = "Streaming"} : () -> i32
    "equeue.add_comp_field"(%5, %22) {names = "stream17 "} : (i32, i32) -> ()
    %23 = "equeue.connection"() {bandwidth = 32 : i64, type = "Streaming"} : () -> i32
    "equeue.add_comp_field"(%5, %23) {names = "stream18 "} : (i32, i32) -> ()
    %24 = "equeue.connection"() {bandwidth = 32 : i64, type = "Streaming"} : () -> i32
    "equeue.add_comp_field"(%5, %24) {names = "stream19 "} : (i32, i32) -> ()
    %25 = "equeue.connection"() {bandwidth = 32 : i64, type = "Streaming"} : () -> i32
    "equeue.add_comp_field"(%5, %25) {names = "stream20 "} : (i32, i32) -> ()
    %26 = "equeue.connection"() {bandwidth = 32 : i64, type = "Streaming"} : () -> i32
    "equeue.add_comp_field"(%5, %26) {names = "stream21 "} : (i32, i32) -> ()
    %27 = "equeue.connection"() {bandwidth = 32 : i64, type = "Streaming"} : () -> i32
    "equeue.add_comp_field"(%5, %27) {names = "stream22 "} : (i32, i32) -> ()
    %28 = "equeue.connection"() {bandwidth = 32 : i64, type = "Streaming"} : () -> i32
    "equeue.add_comp_field"(%5, %28) {names = "stream23 "} : (i32, i32) -> ()
    %29 = "equeue.connection"() {bandwidth = 32 : i64, type = "Streaming"} : () -> i32
    "equeue.add_comp_field"(%5, %29) {names = "stream24 "} : (i32, i32) -> ()
    %30 = "equeue.connection"() {bandwidth = 32 : i64, type = "Streaming"} : () -> i32
    "equeue.add_comp_field"(%5, %30) {names = "stream25 "} : (i32, i32) -> ()
    %31 = "equeue.connection"() {bandwidth = 32 : i64, type = "Streaming"} : () -> i32
    "equeue.add_comp_field"(%5, %31) {names = "stream26 "} : (i32, i32) -> ()
    %32 = "equeue.connection"() {bandwidth = 32 : i64, type = "Streaming"} : () -> i32
    "equeue.add_comp_field"(%5, %32) {names = "stream27 "} : (i32, i32) -> ()
    %33 = "equeue.connection"() {bandwidth = 32 : i64, type = "Streaming"} : () -> i32
    "equeue.add_comp_field"(%5, %33) {names = "stream28 "} : (i32, i32) -> ()
    %34 = "equeue.connection"() {bandwidth = 32 : i64, type = "Streaming"} : () -> i32
    "equeue.add_comp_field"(%5, %34) {names = "stream29 "} : (i32, i32) -> ()
    %35 = "equeue.connection"() {bandwidth = 32 : i64, type = "Streaming"} : () -> i32
    "equeue.add_comp_field"(%5, %35) {names = "stream30 "} : (i32, i32) -> ()
    %36 = "equeue.connection"() {bandwidth = 32 : i64, type = "Streaming"} : () -> i32
    "equeue.add_comp_field"(%5, %36) {names = "stream31 "} : (i32, i32) -> ()
    %37 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
    "equeue.write"(%arg0, %1, %37) {bank = 0 : i64, size = dense<512> : tensor<1xi64>} : (tensor<512xi32>, memref<512xf32>, i32) -> ()
    %38 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
    "equeue.write"(%arg0, %1, %38) {bank = 0 : i64, size = dense<512> : tensor<1xi64>} : (tensor<512xi32>, memref<512xf32>, i32) -> ()
    %39 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
    "equeue.write"(%arg0, %1, %39) {bank = 0 : i64, size = dense<512> : tensor<1xi64>} : (tensor<512xi32>, memref<512xf32>, i32) -> ()
    %40 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
    "equeue.write"(%arg0, %1, %40) {bank = 0 : i64, size = dense<512> : tensor<1xi64>} : (tensor<512xi32>, memref<512xf32>, i32) -> ()
    %41 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
    "equeue.write"(%arg0, %1, %41) {bank = 0 : i64, size = dense<512> : tensor<1xi64>} : (tensor<512xi32>, memref<512xf32>, i32) -> ()
    %42 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
    "equeue.write"(%arg0, %1, %42) {bank = 0 : i64, size = dense<512> : tensor<1xi64>} : (tensor<512xi32>, memref<512xf32>, i32) -> ()
    %43 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
    "equeue.write"(%arg0, %1, %43) {bank = 0 : i64, size = dense<512> : tensor<1xi64>} : (tensor<512xi32>, memref<512xf32>, i32) -> ()
    %44 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
    "equeue.write"(%arg0, %1, %44) {bank = 0 : i64, size = dense<512> : tensor<1xi64>} : (tensor<512xi32>, memref<512xf32>, i32) -> ()
    %45 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
    "equeue.write"(%arg0, %1, %45) {bank = 0 : i64, size = dense<512> : tensor<1xi64>} : (tensor<512xi32>, memref<512xf32>, i32) -> ()
    %46 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
    "equeue.write"(%arg0, %1, %46) {bank = 0 : i64, size = dense<512> : tensor<1xi64>} : (tensor<512xi32>, memref<512xf32>, i32) -> ()
    %47 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
    "equeue.write"(%arg0, %1, %47) {bank = 0 : i64, size = dense<512> : tensor<1xi64>} : (tensor<512xi32>, memref<512xf32>, i32) -> ()
    %48 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
    "equeue.write"(%arg0, %1, %48) {bank = 0 : i64, size = dense<512> : tensor<1xi64>} : (tensor<512xi32>, memref<512xf32>, i32) -> ()
    %49 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
    "equeue.write"(%arg0, %1, %49) {bank = 0 : i64, size = dense<512> : tensor<1xi64>} : (tensor<512xi32>, memref<512xf32>, i32) -> ()
    %50 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
    "equeue.write"(%arg0, %1, %50) {bank = 0 : i64, size = dense<512> : tensor<1xi64>} : (tensor<512xi32>, memref<512xf32>, i32) -> ()
    %51 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
    "equeue.write"(%arg0, %1, %51) {bank = 0 : i64, size = dense<512> : tensor<1xi64>} : (tensor<512xi32>, memref<512xf32>, i32) -> ()
    %52 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
    "equeue.write"(%arg0, %1, %52) {bank = 0 : i64, size = dense<512> : tensor<1xi64>} : (tensor<512xi32>, memref<512xf32>, i32) -> ()
    %53 = "equeue.create_proc"() {type = "AIEngine"} : () -> i32
    %54 = "equeue.create_dma"() : () -> i32
    %55 = "equeue.create_dma"() : () -> i32
    %56 = "equeue.create_mem"() {banks = 1 : i64, data_bit = 32 : i64, shape = dense<16> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %57 = "equeue.create_mem"() {banks = 1 : i64, data_bit = 32 : i64, shape = dense<8> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %58 = "equeue.create_mem"() {banks = 1 : i64, data_bit = 32 : i64, shape = dense<4> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %59 = "equeue.create_comp_field"(%53, %56, %57, %58, %54, %55) {names = "proc data taps acc dma0 dma1 "} : (i32, i32, i32, i32, i32, i32) -> i32
    %60 = "equeue.create_proc"() {type = "AIEngine"} : () -> i32
    %61 = "equeue.create_dma"() : () -> i32
    %62 = "equeue.create_dma"() : () -> i32
    %63 = "equeue.create_mem"() {banks = 1 : i64, data_bit = 32 : i64, shape = dense<16> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %64 = "equeue.create_mem"() {banks = 1 : i64, data_bit = 32 : i64, shape = dense<8> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %65 = "equeue.create_mem"() {banks = 1 : i64, data_bit = 32 : i64, shape = dense<4> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %66 = "equeue.create_comp_field"(%60, %63, %64, %65, %61, %62) {names = "proc data taps acc dma0 dma1 "} : (i32, i32, i32, i32, i32, i32) -> i32
    %67 = "equeue.create_proc"() {type = "AIEngine"} : () -> i32
    %68 = "equeue.create_dma"() : () -> i32
    %69 = "equeue.create_dma"() : () -> i32
    %70 = "equeue.create_mem"() {banks = 1 : i64, data_bit = 32 : i64, shape = dense<16> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %71 = "equeue.create_mem"() {banks = 1 : i64, data_bit = 32 : i64, shape = dense<8> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %72 = "equeue.create_mem"() {banks = 1 : i64, data_bit = 32 : i64, shape = dense<4> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %73 = "equeue.create_comp_field"(%67, %70, %71, %72, %68, %69) {names = "proc data taps acc dma0 dma1 "} : (i32, i32, i32, i32, i32, i32) -> i32
    %74 = "equeue.create_proc"() {type = "AIEngine"} : () -> i32
    %75 = "equeue.create_dma"() : () -> i32
    %76 = "equeue.create_dma"() : () -> i32
    %77 = "equeue.create_mem"() {banks = 1 : i64, data_bit = 32 : i64, shape = dense<16> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %78 = "equeue.create_mem"() {banks = 1 : i64, data_bit = 32 : i64, shape = dense<8> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %79 = "equeue.create_mem"() {banks = 1 : i64, data_bit = 32 : i64, shape = dense<4> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %80 = "equeue.create_comp_field"(%74, %77, %78, %79, %75, %76) {names = "proc data taps acc dma0 dma1 "} : (i32, i32, i32, i32, i32, i32) -> i32
    %81 = "equeue.create_proc"() {type = "AIEngine"} : () -> i32
    %82 = "equeue.create_dma"() : () -> i32
    %83 = "equeue.create_dma"() : () -> i32
    %84 = "equeue.create_mem"() {banks = 1 : i64, data_bit = 32 : i64, shape = dense<16> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %85 = "equeue.create_mem"() {banks = 1 : i64, data_bit = 32 : i64, shape = dense<8> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %86 = "equeue.create_mem"() {banks = 1 : i64, data_bit = 32 : i64, shape = dense<4> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %87 = "equeue.create_comp_field"(%81, %84, %85, %86, %82, %83) {names = "proc data taps acc dma0 dma1 "} : (i32, i32, i32, i32, i32, i32) -> i32
    %88 = "equeue.create_proc"() {type = "AIEngine"} : () -> i32
    %89 = "equeue.create_dma"() : () -> i32
    %90 = "equeue.create_dma"() : () -> i32
    %91 = "equeue.create_mem"() {banks = 1 : i64, data_bit = 32 : i64, shape = dense<16> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %92 = "equeue.create_mem"() {banks = 1 : i64, data_bit = 32 : i64, shape = dense<8> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %93 = "equeue.create_mem"() {banks = 1 : i64, data_bit = 32 : i64, shape = dense<4> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %94 = "equeue.create_comp_field"(%88, %91, %92, %93, %89, %90) {names = "proc data taps acc dma0 dma1 "} : (i32, i32, i32, i32, i32, i32) -> i32
    %95 = "equeue.create_proc"() {type = "AIEngine"} : () -> i32
    %96 = "equeue.create_dma"() : () -> i32
    %97 = "equeue.create_dma"() : () -> i32
    %98 = "equeue.create_mem"() {banks = 1 : i64, data_bit = 32 : i64, shape = dense<16> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %99 = "equeue.create_mem"() {banks = 1 : i64, data_bit = 32 : i64, shape = dense<8> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %100 = "equeue.create_mem"() {banks = 1 : i64, data_bit = 32 : i64, shape = dense<4> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %101 = "equeue.create_comp_field"(%95, %98, %99, %100, %96, %97) {names = "proc data taps acc dma0 dma1 "} : (i32, i32, i32, i32, i32, i32) -> i32
    %102 = "equeue.create_proc"() {type = "AIEngine"} : () -> i32
    %103 = "equeue.create_dma"() : () -> i32
    %104 = "equeue.create_dma"() : () -> i32
    %105 = "equeue.create_mem"() {banks = 1 : i64, data_bit = 32 : i64, shape = dense<16> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %106 = "equeue.create_mem"() {banks = 1 : i64, data_bit = 32 : i64, shape = dense<8> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %107 = "equeue.create_mem"() {banks = 1 : i64, data_bit = 32 : i64, shape = dense<4> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %108 = "equeue.create_comp_field"(%102, %105, %106, %107, %103, %104) {names = "proc data taps acc dma0 dma1 "} : (i32, i32, i32, i32, i32, i32) -> i32
    %109 = "equeue.create_proc"() {type = "AIEngine"} : () -> i32
    %110 = "equeue.create_dma"() : () -> i32
    %111 = "equeue.create_dma"() : () -> i32
    %112 = "equeue.create_mem"() {banks = 1 : i64, data_bit = 32 : i64, shape = dense<16> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %113 = "equeue.create_mem"() {banks = 1 : i64, data_bit = 32 : i64, shape = dense<8> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %114 = "equeue.create_mem"() {banks = 1 : i64, data_bit = 32 : i64, shape = dense<4> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %115 = "equeue.create_comp_field"(%109, %112, %113, %114, %110, %111) {names = "proc data taps acc dma0 dma1 "} : (i32, i32, i32, i32, i32, i32) -> i32
    %116 = "equeue.create_proc"() {type = "AIEngine"} : () -> i32
    %117 = "equeue.create_dma"() : () -> i32
    %118 = "equeue.create_dma"() : () -> i32
    %119 = "equeue.create_mem"() {banks = 1 : i64, data_bit = 32 : i64, shape = dense<16> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %120 = "equeue.create_mem"() {banks = 1 : i64, data_bit = 32 : i64, shape = dense<8> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %121 = "equeue.create_mem"() {banks = 1 : i64, data_bit = 32 : i64, shape = dense<4> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %122 = "equeue.create_comp_field"(%116, %119, %120, %121, %117, %118) {names = "proc data taps acc dma0 dma1 "} : (i32, i32, i32, i32, i32, i32) -> i32
    %123 = "equeue.create_proc"() {type = "AIEngine"} : () -> i32
    %124 = "equeue.create_dma"() : () -> i32
    %125 = "equeue.create_dma"() : () -> i32
    %126 = "equeue.create_mem"() {banks = 1 : i64, data_bit = 32 : i64, shape = dense<16> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %127 = "equeue.create_mem"() {banks = 1 : i64, data_bit = 32 : i64, shape = dense<8> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %128 = "equeue.create_mem"() {banks = 1 : i64, data_bit = 32 : i64, shape = dense<4> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %129 = "equeue.create_comp_field"(%123, %126, %127, %128, %124, %125) {names = "proc data taps acc dma0 dma1 "} : (i32, i32, i32, i32, i32, i32) -> i32
    %130 = "equeue.create_proc"() {type = "AIEngine"} : () -> i32
    %131 = "equeue.create_dma"() : () -> i32
    %132 = "equeue.create_dma"() : () -> i32
    %133 = "equeue.create_mem"() {banks = 1 : i64, data_bit = 32 : i64, shape = dense<16> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %134 = "equeue.create_mem"() {banks = 1 : i64, data_bit = 32 : i64, shape = dense<8> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %135 = "equeue.create_mem"() {banks = 1 : i64, data_bit = 32 : i64, shape = dense<4> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %136 = "equeue.create_comp_field"(%130, %133, %134, %135, %131, %132) {names = "proc data taps acc dma0 dma1 "} : (i32, i32, i32, i32, i32, i32) -> i32
    %137 = "equeue.create_proc"() {type = "AIEngine"} : () -> i32
    %138 = "equeue.create_dma"() : () -> i32
    %139 = "equeue.create_dma"() : () -> i32
    %140 = "equeue.create_mem"() {banks = 1 : i64, data_bit = 32 : i64, shape = dense<16> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %141 = "equeue.create_mem"() {banks = 1 : i64, data_bit = 32 : i64, shape = dense<8> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %142 = "equeue.create_mem"() {banks = 1 : i64, data_bit = 32 : i64, shape = dense<4> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %143 = "equeue.create_comp_field"(%137, %140, %141, %142, %138, %139) {names = "proc data taps acc dma0 dma1 "} : (i32, i32, i32, i32, i32, i32) -> i32
    %144 = "equeue.create_proc"() {type = "AIEngine"} : () -> i32
    %145 = "equeue.create_dma"() : () -> i32
    %146 = "equeue.create_dma"() : () -> i32
    %147 = "equeue.create_mem"() {banks = 1 : i64, data_bit = 32 : i64, shape = dense<16> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %148 = "equeue.create_mem"() {banks = 1 : i64, data_bit = 32 : i64, shape = dense<8> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %149 = "equeue.create_mem"() {banks = 1 : i64, data_bit = 32 : i64, shape = dense<4> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %150 = "equeue.create_comp_field"(%144, %147, %148, %149, %145, %146) {names = "proc data taps acc dma0 dma1 "} : (i32, i32, i32, i32, i32, i32) -> i32
    %151 = "equeue.create_proc"() {type = "AIEngine"} : () -> i32
    %152 = "equeue.create_dma"() : () -> i32
    %153 = "equeue.create_dma"() : () -> i32
    %154 = "equeue.create_mem"() {banks = 1 : i64, data_bit = 32 : i64, shape = dense<16> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %155 = "equeue.create_mem"() {banks = 1 : i64, data_bit = 32 : i64, shape = dense<8> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %156 = "equeue.create_mem"() {banks = 1 : i64, data_bit = 32 : i64, shape = dense<4> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %157 = "equeue.create_comp_field"(%151, %154, %155, %156, %152, %153) {names = "proc data taps acc dma0 dma1 "} : (i32, i32, i32, i32, i32, i32) -> i32
    %158 = "equeue.create_proc"() {type = "AIEngine"} : () -> i32
    %159 = "equeue.create_dma"() : () -> i32
    %160 = "equeue.create_dma"() : () -> i32
    %161 = "equeue.create_mem"() {banks = 1 : i64, data_bit = 32 : i64, shape = dense<16> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %162 = "equeue.create_mem"() {banks = 1 : i64, data_bit = 32 : i64, shape = dense<8> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %163 = "equeue.create_mem"() {banks = 1 : i64, data_bit = 32 : i64, shape = dense<4> : tensor<1xi64>, type = "RegisterFile"} : () -> i32
    %164 = "equeue.create_comp_field"(%158, %161, %162, %163, %159, %160) {names = "proc data taps acc dma0 dma1 "} : (i32, i32, i32, i32, i32, i32) -> i32
    %165 = "equeue.control_start"() : () -> !equeue.signal
    %166 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %done = "equeue.launch"(%165, %166, %59) ( {
    ^bb0(%arg1: i32):  // no predecessors
      %4278 = "equeue.get_comp_field"(%arg1) {name = "data"} : (i32) -> i32
      %4279 = "equeue.alloc"(%4278) {data_bit = 32 : i64, shape = dense<16> : tensor<1xi64>} : (i32) -> memref<16xf32>
      %4280 = "equeue.get_comp_field"(%arg1) {name = "taps"} : (i32) -> i32
      %4281 = "equeue.alloc"(%4280) {data_bit = 32 : i64, shape = dense<8> : tensor<1xi64>} : (i32) -> memref<8xf32>
      %4282 = "equeue.get_comp_field"(%arg1) {name = "acc"} : (i32) -> i32
      %4283 = "equeue.alloc"(%4282) {data_bit = 32 : i64, shape = dense<4> : tensor<1xi64>} : (i32) -> memref<4xf32>
      "equeue.add_comp_field"(%arg1, %4279, %4281, %4283) {names = "ifmap filter ofmap "} : (i32, memref<16xf32>, memref<8xf32>, memref<4xf32>) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32) -> !equeue.signal
    "equeue.await"(%done) : (!equeue.signal) -> ()
    %167 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %done_0 = "equeue.launch"(%165, %167, %66) ( {
    ^bb0(%arg1: i32):  // no predecessors
      %4278 = "equeue.get_comp_field"(%arg1) {name = "data"} : (i32) -> i32
      %4279 = "equeue.alloc"(%4278) {data_bit = 32 : i64, shape = dense<16> : tensor<1xi64>} : (i32) -> memref<16xf32>
      %4280 = "equeue.get_comp_field"(%arg1) {name = "taps"} : (i32) -> i32
      %4281 = "equeue.alloc"(%4280) {data_bit = 32 : i64, shape = dense<8> : tensor<1xi64>} : (i32) -> memref<8xf32>
      %4282 = "equeue.get_comp_field"(%arg1) {name = "acc"} : (i32) -> i32
      %4283 = "equeue.alloc"(%4282) {data_bit = 32 : i64, shape = dense<4> : tensor<1xi64>} : (i32) -> memref<4xf32>
      "equeue.add_comp_field"(%arg1, %4279, %4281, %4283) {names = "ifmap filter ofmap "} : (i32, memref<16xf32>, memref<8xf32>, memref<4xf32>) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32) -> !equeue.signal
    "equeue.await"(%done_0) : (!equeue.signal) -> ()
    %168 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %done_1 = "equeue.launch"(%165, %168, %73) ( {
    ^bb0(%arg1: i32):  // no predecessors
      %4278 = "equeue.get_comp_field"(%arg1) {name = "data"} : (i32) -> i32
      %4279 = "equeue.alloc"(%4278) {data_bit = 32 : i64, shape = dense<16> : tensor<1xi64>} : (i32) -> memref<16xf32>
      %4280 = "equeue.get_comp_field"(%arg1) {name = "taps"} : (i32) -> i32
      %4281 = "equeue.alloc"(%4280) {data_bit = 32 : i64, shape = dense<8> : tensor<1xi64>} : (i32) -> memref<8xf32>
      %4282 = "equeue.get_comp_field"(%arg1) {name = "acc"} : (i32) -> i32
      %4283 = "equeue.alloc"(%4282) {data_bit = 32 : i64, shape = dense<4> : tensor<1xi64>} : (i32) -> memref<4xf32>
      "equeue.add_comp_field"(%arg1, %4279, %4281, %4283) {names = "ifmap filter ofmap "} : (i32, memref<16xf32>, memref<8xf32>, memref<4xf32>) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32) -> !equeue.signal
    "equeue.await"(%done_1) : (!equeue.signal) -> ()
    %169 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %done_2 = "equeue.launch"(%165, %169, %80) ( {
    ^bb0(%arg1: i32):  // no predecessors
      %4278 = "equeue.get_comp_field"(%arg1) {name = "data"} : (i32) -> i32
      %4279 = "equeue.alloc"(%4278) {data_bit = 32 : i64, shape = dense<16> : tensor<1xi64>} : (i32) -> memref<16xf32>
      %4280 = "equeue.get_comp_field"(%arg1) {name = "taps"} : (i32) -> i32
      %4281 = "equeue.alloc"(%4280) {data_bit = 32 : i64, shape = dense<8> : tensor<1xi64>} : (i32) -> memref<8xf32>
      %4282 = "equeue.get_comp_field"(%arg1) {name = "acc"} : (i32) -> i32
      %4283 = "equeue.alloc"(%4282) {data_bit = 32 : i64, shape = dense<4> : tensor<1xi64>} : (i32) -> memref<4xf32>
      "equeue.add_comp_field"(%arg1, %4279, %4281, %4283) {names = "ifmap filter ofmap "} : (i32, memref<16xf32>, memref<8xf32>, memref<4xf32>) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32) -> !equeue.signal
    "equeue.await"(%done_2) : (!equeue.signal) -> ()
    %170 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %done_3 = "equeue.launch"(%165, %170, %87) ( {
    ^bb0(%arg1: i32):  // no predecessors
      %4278 = "equeue.get_comp_field"(%arg1) {name = "data"} : (i32) -> i32
      %4279 = "equeue.alloc"(%4278) {data_bit = 32 : i64, shape = dense<16> : tensor<1xi64>} : (i32) -> memref<16xf32>
      %4280 = "equeue.get_comp_field"(%arg1) {name = "taps"} : (i32) -> i32
      %4281 = "equeue.alloc"(%4280) {data_bit = 32 : i64, shape = dense<8> : tensor<1xi64>} : (i32) -> memref<8xf32>
      %4282 = "equeue.get_comp_field"(%arg1) {name = "acc"} : (i32) -> i32
      %4283 = "equeue.alloc"(%4282) {data_bit = 32 : i64, shape = dense<4> : tensor<1xi64>} : (i32) -> memref<4xf32>
      "equeue.add_comp_field"(%arg1, %4279, %4281, %4283) {names = "ifmap filter ofmap "} : (i32, memref<16xf32>, memref<8xf32>, memref<4xf32>) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32) -> !equeue.signal
    "equeue.await"(%done_3) : (!equeue.signal) -> ()
    %171 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %done_4 = "equeue.launch"(%165, %171, %94) ( {
    ^bb0(%arg1: i32):  // no predecessors
      %4278 = "equeue.get_comp_field"(%arg1) {name = "data"} : (i32) -> i32
      %4279 = "equeue.alloc"(%4278) {data_bit = 32 : i64, shape = dense<16> : tensor<1xi64>} : (i32) -> memref<16xf32>
      %4280 = "equeue.get_comp_field"(%arg1) {name = "taps"} : (i32) -> i32
      %4281 = "equeue.alloc"(%4280) {data_bit = 32 : i64, shape = dense<8> : tensor<1xi64>} : (i32) -> memref<8xf32>
      %4282 = "equeue.get_comp_field"(%arg1) {name = "acc"} : (i32) -> i32
      %4283 = "equeue.alloc"(%4282) {data_bit = 32 : i64, shape = dense<4> : tensor<1xi64>} : (i32) -> memref<4xf32>
      "equeue.add_comp_field"(%arg1, %4279, %4281, %4283) {names = "ifmap filter ofmap "} : (i32, memref<16xf32>, memref<8xf32>, memref<4xf32>) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32) -> !equeue.signal
    "equeue.await"(%done_4) : (!equeue.signal) -> ()
    %172 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %done_5 = "equeue.launch"(%165, %172, %101) ( {
    ^bb0(%arg1: i32):  // no predecessors
      %4278 = "equeue.get_comp_field"(%arg1) {name = "data"} : (i32) -> i32
      %4279 = "equeue.alloc"(%4278) {data_bit = 32 : i64, shape = dense<16> : tensor<1xi64>} : (i32) -> memref<16xf32>
      %4280 = "equeue.get_comp_field"(%arg1) {name = "taps"} : (i32) -> i32
      %4281 = "equeue.alloc"(%4280) {data_bit = 32 : i64, shape = dense<8> : tensor<1xi64>} : (i32) -> memref<8xf32>
      %4282 = "equeue.get_comp_field"(%arg1) {name = "acc"} : (i32) -> i32
      %4283 = "equeue.alloc"(%4282) {data_bit = 32 : i64, shape = dense<4> : tensor<1xi64>} : (i32) -> memref<4xf32>
      "equeue.add_comp_field"(%arg1, %4279, %4281, %4283) {names = "ifmap filter ofmap "} : (i32, memref<16xf32>, memref<8xf32>, memref<4xf32>) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32) -> !equeue.signal
    "equeue.await"(%done_5) : (!equeue.signal) -> ()
    %173 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %done_6 = "equeue.launch"(%165, %173, %108) ( {
    ^bb0(%arg1: i32):  // no predecessors
      %4278 = "equeue.get_comp_field"(%arg1) {name = "data"} : (i32) -> i32
      %4279 = "equeue.alloc"(%4278) {data_bit = 32 : i64, shape = dense<16> : tensor<1xi64>} : (i32) -> memref<16xf32>
      %4280 = "equeue.get_comp_field"(%arg1) {name = "taps"} : (i32) -> i32
      %4281 = "equeue.alloc"(%4280) {data_bit = 32 : i64, shape = dense<8> : tensor<1xi64>} : (i32) -> memref<8xf32>
      %4282 = "equeue.get_comp_field"(%arg1) {name = "acc"} : (i32) -> i32
      %4283 = "equeue.alloc"(%4282) {data_bit = 32 : i64, shape = dense<4> : tensor<1xi64>} : (i32) -> memref<4xf32>
      "equeue.add_comp_field"(%arg1, %4279, %4281, %4283) {names = "ifmap filter ofmap "} : (i32, memref<16xf32>, memref<8xf32>, memref<4xf32>) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32) -> !equeue.signal
    "equeue.await"(%done_6) : (!equeue.signal) -> ()
    %174 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %done_7 = "equeue.launch"(%165, %174, %115) ( {
    ^bb0(%arg1: i32):  // no predecessors
      %4278 = "equeue.get_comp_field"(%arg1) {name = "data"} : (i32) -> i32
      %4279 = "equeue.alloc"(%4278) {data_bit = 32 : i64, shape = dense<16> : tensor<1xi64>} : (i32) -> memref<16xf32>
      %4280 = "equeue.get_comp_field"(%arg1) {name = "taps"} : (i32) -> i32
      %4281 = "equeue.alloc"(%4280) {data_bit = 32 : i64, shape = dense<8> : tensor<1xi64>} : (i32) -> memref<8xf32>
      %4282 = "equeue.get_comp_field"(%arg1) {name = "acc"} : (i32) -> i32
      %4283 = "equeue.alloc"(%4282) {data_bit = 32 : i64, shape = dense<4> : tensor<1xi64>} : (i32) -> memref<4xf32>
      "equeue.add_comp_field"(%arg1, %4279, %4281, %4283) {names = "ifmap filter ofmap "} : (i32, memref<16xf32>, memref<8xf32>, memref<4xf32>) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32) -> !equeue.signal
    "equeue.await"(%done_7) : (!equeue.signal) -> ()
    %175 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %done_8 = "equeue.launch"(%165, %175, %122) ( {
    ^bb0(%arg1: i32):  // no predecessors
      %4278 = "equeue.get_comp_field"(%arg1) {name = "data"} : (i32) -> i32
      %4279 = "equeue.alloc"(%4278) {data_bit = 32 : i64, shape = dense<16> : tensor<1xi64>} : (i32) -> memref<16xf32>
      %4280 = "equeue.get_comp_field"(%arg1) {name = "taps"} : (i32) -> i32
      %4281 = "equeue.alloc"(%4280) {data_bit = 32 : i64, shape = dense<8> : tensor<1xi64>} : (i32) -> memref<8xf32>
      %4282 = "equeue.get_comp_field"(%arg1) {name = "acc"} : (i32) -> i32
      %4283 = "equeue.alloc"(%4282) {data_bit = 32 : i64, shape = dense<4> : tensor<1xi64>} : (i32) -> memref<4xf32>
      "equeue.add_comp_field"(%arg1, %4279, %4281, %4283) {names = "ifmap filter ofmap "} : (i32, memref<16xf32>, memref<8xf32>, memref<4xf32>) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32) -> !equeue.signal
    "equeue.await"(%done_8) : (!equeue.signal) -> ()
    %176 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %done_9 = "equeue.launch"(%165, %176, %129) ( {
    ^bb0(%arg1: i32):  // no predecessors
      %4278 = "equeue.get_comp_field"(%arg1) {name = "data"} : (i32) -> i32
      %4279 = "equeue.alloc"(%4278) {data_bit = 32 : i64, shape = dense<16> : tensor<1xi64>} : (i32) -> memref<16xf32>
      %4280 = "equeue.get_comp_field"(%arg1) {name = "taps"} : (i32) -> i32
      %4281 = "equeue.alloc"(%4280) {data_bit = 32 : i64, shape = dense<8> : tensor<1xi64>} : (i32) -> memref<8xf32>
      %4282 = "equeue.get_comp_field"(%arg1) {name = "acc"} : (i32) -> i32
      %4283 = "equeue.alloc"(%4282) {data_bit = 32 : i64, shape = dense<4> : tensor<1xi64>} : (i32) -> memref<4xf32>
      "equeue.add_comp_field"(%arg1, %4279, %4281, %4283) {names = "ifmap filter ofmap "} : (i32, memref<16xf32>, memref<8xf32>, memref<4xf32>) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32) -> !equeue.signal
    "equeue.await"(%done_9) : (!equeue.signal) -> ()
    %177 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %done_10 = "equeue.launch"(%165, %177, %136) ( {
    ^bb0(%arg1: i32):  // no predecessors
      %4278 = "equeue.get_comp_field"(%arg1) {name = "data"} : (i32) -> i32
      %4279 = "equeue.alloc"(%4278) {data_bit = 32 : i64, shape = dense<16> : tensor<1xi64>} : (i32) -> memref<16xf32>
      %4280 = "equeue.get_comp_field"(%arg1) {name = "taps"} : (i32) -> i32
      %4281 = "equeue.alloc"(%4280) {data_bit = 32 : i64, shape = dense<8> : tensor<1xi64>} : (i32) -> memref<8xf32>
      %4282 = "equeue.get_comp_field"(%arg1) {name = "acc"} : (i32) -> i32
      %4283 = "equeue.alloc"(%4282) {data_bit = 32 : i64, shape = dense<4> : tensor<1xi64>} : (i32) -> memref<4xf32>
      "equeue.add_comp_field"(%arg1, %4279, %4281, %4283) {names = "ifmap filter ofmap "} : (i32, memref<16xf32>, memref<8xf32>, memref<4xf32>) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32) -> !equeue.signal
    "equeue.await"(%done_10) : (!equeue.signal) -> ()
    %178 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %done_11 = "equeue.launch"(%165, %178, %143) ( {
    ^bb0(%arg1: i32):  // no predecessors
      %4278 = "equeue.get_comp_field"(%arg1) {name = "data"} : (i32) -> i32
      %4279 = "equeue.alloc"(%4278) {data_bit = 32 : i64, shape = dense<16> : tensor<1xi64>} : (i32) -> memref<16xf32>
      %4280 = "equeue.get_comp_field"(%arg1) {name = "taps"} : (i32) -> i32
      %4281 = "equeue.alloc"(%4280) {data_bit = 32 : i64, shape = dense<8> : tensor<1xi64>} : (i32) -> memref<8xf32>
      %4282 = "equeue.get_comp_field"(%arg1) {name = "acc"} : (i32) -> i32
      %4283 = "equeue.alloc"(%4282) {data_bit = 32 : i64, shape = dense<4> : tensor<1xi64>} : (i32) -> memref<4xf32>
      "equeue.add_comp_field"(%arg1, %4279, %4281, %4283) {names = "ifmap filter ofmap "} : (i32, memref<16xf32>, memref<8xf32>, memref<4xf32>) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32) -> !equeue.signal
    "equeue.await"(%done_11) : (!equeue.signal) -> ()
    %179 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %done_12 = "equeue.launch"(%165, %179, %150) ( {
    ^bb0(%arg1: i32):  // no predecessors
      %4278 = "equeue.get_comp_field"(%arg1) {name = "data"} : (i32) -> i32
      %4279 = "equeue.alloc"(%4278) {data_bit = 32 : i64, shape = dense<16> : tensor<1xi64>} : (i32) -> memref<16xf32>
      %4280 = "equeue.get_comp_field"(%arg1) {name = "taps"} : (i32) -> i32
      %4281 = "equeue.alloc"(%4280) {data_bit = 32 : i64, shape = dense<8> : tensor<1xi64>} : (i32) -> memref<8xf32>
      %4282 = "equeue.get_comp_field"(%arg1) {name = "acc"} : (i32) -> i32
      %4283 = "equeue.alloc"(%4282) {data_bit = 32 : i64, shape = dense<4> : tensor<1xi64>} : (i32) -> memref<4xf32>
      "equeue.add_comp_field"(%arg1, %4279, %4281, %4283) {names = "ifmap filter ofmap "} : (i32, memref<16xf32>, memref<8xf32>, memref<4xf32>) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32) -> !equeue.signal
    "equeue.await"(%done_12) : (!equeue.signal) -> ()
    %180 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %done_13 = "equeue.launch"(%165, %180, %157) ( {
    ^bb0(%arg1: i32):  // no predecessors
      %4278 = "equeue.get_comp_field"(%arg1) {name = "data"} : (i32) -> i32
      %4279 = "equeue.alloc"(%4278) {data_bit = 32 : i64, shape = dense<16> : tensor<1xi64>} : (i32) -> memref<16xf32>
      %4280 = "equeue.get_comp_field"(%arg1) {name = "taps"} : (i32) -> i32
      %4281 = "equeue.alloc"(%4280) {data_bit = 32 : i64, shape = dense<8> : tensor<1xi64>} : (i32) -> memref<8xf32>
      %4282 = "equeue.get_comp_field"(%arg1) {name = "acc"} : (i32) -> i32
      %4283 = "equeue.alloc"(%4282) {data_bit = 32 : i64, shape = dense<4> : tensor<1xi64>} : (i32) -> memref<4xf32>
      "equeue.add_comp_field"(%arg1, %4279, %4281, %4283) {names = "ifmap filter ofmap "} : (i32, memref<16xf32>, memref<8xf32>, memref<4xf32>) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32) -> !equeue.signal
    "equeue.await"(%done_13) : (!equeue.signal) -> ()
    %181 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_14 = "equeue.launch"(%165, %181, %164) ( {
    ^bb0(%arg1: i32):  // no predecessors
      %4278 = "equeue.get_comp_field"(%arg1) {name = "data"} : (i32) -> i32
      %4279 = "equeue.alloc"(%4278) {data_bit = 32 : i64, shape = dense<16> : tensor<1xi64>} : (i32) -> memref<16xf32>
      %4280 = "equeue.get_comp_field"(%arg1) {name = "taps"} : (i32) -> i32
      %4281 = "equeue.alloc"(%4280) {data_bit = 32 : i64, shape = dense<8> : tensor<1xi64>} : (i32) -> memref<8xf32>
      %4282 = "equeue.get_comp_field"(%arg1) {name = "acc"} : (i32) -> i32
      %4283 = "equeue.alloc"(%4282) {data_bit = 32 : i64, shape = dense<4> : tensor<1xi64>} : (i32) -> memref<4xf32>
      "equeue.add_comp_field"(%arg1, %4279, %4281, %4283) {names = "ifmap filter ofmap "} : (i32, memref<16xf32>, memref<8xf32>, memref<4xf32>) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32) -> !equeue.signal
    "equeue.await"(%done_14) : (!equeue.signal) -> ()
    %182 = "equeue.control_start"() : () -> !equeue.signal
    %183 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %184 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_15 = "equeue.launch"(%182, %183, %5, %59, %1, %184) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %185 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %186 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_16 = "equeue.launch"(%182, %185, %5, %66, %59, %1, %186) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %187 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %188 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_17 = "equeue.launch"(%182, %187, %5, %73, %66, %1, %188) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %189 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %190 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_18 = "equeue.launch"(%182, %189, %5, %80, %73, %1, %190) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %191 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %192 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_19 = "equeue.launch"(%182, %191, %5, %87, %80, %1, %192) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %193 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %194 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_20 = "equeue.launch"(%182, %193, %5, %94, %87, %1, %194) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %195 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %196 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_21 = "equeue.launch"(%182, %195, %5, %101, %94, %1, %196) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %197 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %198 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_22 = "equeue.launch"(%182, %197, %5, %108, %101, %1, %198) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %199 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %200 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_23 = "equeue.launch"(%182, %199, %5, %115, %108, %1, %200) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %201 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %202 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_24 = "equeue.launch"(%182, %201, %5, %122, %115, %1, %202) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %203 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %204 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_25 = "equeue.launch"(%182, %203, %5, %129, %122, %1, %204) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %205 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %206 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_26 = "equeue.launch"(%182, %205, %5, %136, %129, %1, %206) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %207 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %208 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_27 = "equeue.launch"(%182, %207, %5, %143, %136, %1, %208) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %209 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %210 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_28 = "equeue.launch"(%182, %209, %5, %150, %143, %1, %210) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %211 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %212 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_29 = "equeue.launch"(%182, %211, %5, %157, %150, %1, %212) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %213 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_30 = "equeue.launch"(%182, %213, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %214 = "equeue.control_start"() : () -> !equeue.signal
    %215 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %216 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_31 = "equeue.launch"(%214, %215, %5, %59, %1, %216) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %217 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %218 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_32 = "equeue.launch"(%214, %217, %5, %66, %59, %1, %218) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %219 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %220 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_33 = "equeue.launch"(%214, %219, %5, %73, %66, %1, %220) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %221 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %222 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_34 = "equeue.launch"(%214, %221, %5, %80, %73, %1, %222) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %223 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %224 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_35 = "equeue.launch"(%214, %223, %5, %87, %80, %1, %224) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %225 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %226 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_36 = "equeue.launch"(%214, %225, %5, %94, %87, %1, %226) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %227 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %228 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_37 = "equeue.launch"(%214, %227, %5, %101, %94, %1, %228) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %229 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %230 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_38 = "equeue.launch"(%214, %229, %5, %108, %101, %1, %230) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %231 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %232 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_39 = "equeue.launch"(%214, %231, %5, %115, %108, %1, %232) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %233 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %234 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_40 = "equeue.launch"(%214, %233, %5, %122, %115, %1, %234) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %235 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %236 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_41 = "equeue.launch"(%214, %235, %5, %129, %122, %1, %236) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %237 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %238 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_42 = "equeue.launch"(%214, %237, %5, %136, %129, %1, %238) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %239 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %240 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_43 = "equeue.launch"(%214, %239, %5, %143, %136, %1, %240) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %241 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %242 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_44 = "equeue.launch"(%214, %241, %5, %150, %143, %1, %242) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %243 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %244 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_45 = "equeue.launch"(%214, %243, %5, %157, %150, %1, %244) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %245 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_46 = "equeue.launch"(%214, %245, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %246 = "equeue.control_start"() : () -> !equeue.signal
    %247 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %248 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_47 = "equeue.launch"(%246, %247, %5, %59, %1, %248) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %249 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %250 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_48 = "equeue.launch"(%246, %249, %5, %66, %59, %1, %250) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %251 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %252 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_49 = "equeue.launch"(%246, %251, %5, %73, %66, %1, %252) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %253 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %254 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_50 = "equeue.launch"(%246, %253, %5, %80, %73, %1, %254) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %255 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %256 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_51 = "equeue.launch"(%246, %255, %5, %87, %80, %1, %256) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %257 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %258 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_52 = "equeue.launch"(%246, %257, %5, %94, %87, %1, %258) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %259 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %260 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_53 = "equeue.launch"(%246, %259, %5, %101, %94, %1, %260) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %261 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %262 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_54 = "equeue.launch"(%246, %261, %5, %108, %101, %1, %262) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %263 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %264 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_55 = "equeue.launch"(%246, %263, %5, %115, %108, %1, %264) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %265 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %266 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_56 = "equeue.launch"(%246, %265, %5, %122, %115, %1, %266) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %267 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %268 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_57 = "equeue.launch"(%246, %267, %5, %129, %122, %1, %268) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %269 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %270 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_58 = "equeue.launch"(%246, %269, %5, %136, %129, %1, %270) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %271 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %272 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_59 = "equeue.launch"(%246, %271, %5, %143, %136, %1, %272) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %273 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %274 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_60 = "equeue.launch"(%246, %273, %5, %150, %143, %1, %274) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %275 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %276 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_61 = "equeue.launch"(%246, %275, %5, %157, %150, %1, %276) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %277 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_62 = "equeue.launch"(%246, %277, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %278 = "equeue.control_start"() : () -> !equeue.signal
    %279 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %280 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_63 = "equeue.launch"(%278, %279, %5, %59, %1, %280) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %281 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %282 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_64 = "equeue.launch"(%278, %281, %5, %66, %59, %1, %282) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %283 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %284 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_65 = "equeue.launch"(%278, %283, %5, %73, %66, %1, %284) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %285 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %286 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_66 = "equeue.launch"(%278, %285, %5, %80, %73, %1, %286) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %287 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %288 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_67 = "equeue.launch"(%278, %287, %5, %87, %80, %1, %288) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %289 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %290 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_68 = "equeue.launch"(%278, %289, %5, %94, %87, %1, %290) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %291 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %292 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_69 = "equeue.launch"(%278, %291, %5, %101, %94, %1, %292) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %293 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %294 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_70 = "equeue.launch"(%278, %293, %5, %108, %101, %1, %294) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %295 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %296 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_71 = "equeue.launch"(%278, %295, %5, %115, %108, %1, %296) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %297 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %298 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_72 = "equeue.launch"(%278, %297, %5, %122, %115, %1, %298) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %299 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %300 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_73 = "equeue.launch"(%278, %299, %5, %129, %122, %1, %300) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %301 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %302 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_74 = "equeue.launch"(%278, %301, %5, %136, %129, %1, %302) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %303 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %304 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_75 = "equeue.launch"(%278, %303, %5, %143, %136, %1, %304) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %305 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %306 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_76 = "equeue.launch"(%278, %305, %5, %150, %143, %1, %306) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %307 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %308 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_77 = "equeue.launch"(%278, %307, %5, %157, %150, %1, %308) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %309 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_78 = "equeue.launch"(%278, %309, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %310 = "equeue.control_start"() : () -> !equeue.signal
    %311 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %312 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_79 = "equeue.launch"(%310, %311, %5, %59, %1, %312) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %313 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %314 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_80 = "equeue.launch"(%310, %313, %5, %66, %59, %1, %314) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %315 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %316 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_81 = "equeue.launch"(%310, %315, %5, %73, %66, %1, %316) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %317 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %318 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_82 = "equeue.launch"(%310, %317, %5, %80, %73, %1, %318) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %319 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %320 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_83 = "equeue.launch"(%310, %319, %5, %87, %80, %1, %320) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %321 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %322 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_84 = "equeue.launch"(%310, %321, %5, %94, %87, %1, %322) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %323 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %324 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_85 = "equeue.launch"(%310, %323, %5, %101, %94, %1, %324) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %325 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %326 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_86 = "equeue.launch"(%310, %325, %5, %108, %101, %1, %326) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %327 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %328 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_87 = "equeue.launch"(%310, %327, %5, %115, %108, %1, %328) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %329 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %330 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_88 = "equeue.launch"(%310, %329, %5, %122, %115, %1, %330) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %331 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %332 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_89 = "equeue.launch"(%310, %331, %5, %129, %122, %1, %332) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %333 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %334 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_90 = "equeue.launch"(%310, %333, %5, %136, %129, %1, %334) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %335 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %336 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_91 = "equeue.launch"(%310, %335, %5, %143, %136, %1, %336) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %337 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %338 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_92 = "equeue.launch"(%310, %337, %5, %150, %143, %1, %338) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %339 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %340 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_93 = "equeue.launch"(%310, %339, %5, %157, %150, %1, %340) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %341 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_94 = "equeue.launch"(%310, %341, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %342 = "equeue.control_start"() : () -> !equeue.signal
    %343 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %344 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_95 = "equeue.launch"(%342, %343, %5, %59, %1, %344) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %345 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %346 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_96 = "equeue.launch"(%342, %345, %5, %66, %59, %1, %346) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %347 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %348 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_97 = "equeue.launch"(%342, %347, %5, %73, %66, %1, %348) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %349 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %350 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_98 = "equeue.launch"(%342, %349, %5, %80, %73, %1, %350) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %351 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %352 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_99 = "equeue.launch"(%342, %351, %5, %87, %80, %1, %352) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %353 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %354 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_100 = "equeue.launch"(%342, %353, %5, %94, %87, %1, %354) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %355 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %356 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_101 = "equeue.launch"(%342, %355, %5, %101, %94, %1, %356) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %357 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %358 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_102 = "equeue.launch"(%342, %357, %5, %108, %101, %1, %358) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %359 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %360 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_103 = "equeue.launch"(%342, %359, %5, %115, %108, %1, %360) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %361 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %362 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_104 = "equeue.launch"(%342, %361, %5, %122, %115, %1, %362) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %363 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %364 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_105 = "equeue.launch"(%342, %363, %5, %129, %122, %1, %364) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %365 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %366 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_106 = "equeue.launch"(%342, %365, %5, %136, %129, %1, %366) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %367 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %368 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_107 = "equeue.launch"(%342, %367, %5, %143, %136, %1, %368) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %369 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %370 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_108 = "equeue.launch"(%342, %369, %5, %150, %143, %1, %370) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %371 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %372 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_109 = "equeue.launch"(%342, %371, %5, %157, %150, %1, %372) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %373 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_110 = "equeue.launch"(%342, %373, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %374 = "equeue.control_start"() : () -> !equeue.signal
    %375 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %376 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_111 = "equeue.launch"(%374, %375, %5, %59, %1, %376) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %377 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %378 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_112 = "equeue.launch"(%374, %377, %5, %66, %59, %1, %378) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %379 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %380 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_113 = "equeue.launch"(%374, %379, %5, %73, %66, %1, %380) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %381 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %382 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_114 = "equeue.launch"(%374, %381, %5, %80, %73, %1, %382) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %383 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %384 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_115 = "equeue.launch"(%374, %383, %5, %87, %80, %1, %384) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %385 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %386 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_116 = "equeue.launch"(%374, %385, %5, %94, %87, %1, %386) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %387 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %388 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_117 = "equeue.launch"(%374, %387, %5, %101, %94, %1, %388) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %389 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %390 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_118 = "equeue.launch"(%374, %389, %5, %108, %101, %1, %390) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %391 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %392 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_119 = "equeue.launch"(%374, %391, %5, %115, %108, %1, %392) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %393 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %394 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_120 = "equeue.launch"(%374, %393, %5, %122, %115, %1, %394) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %395 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %396 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_121 = "equeue.launch"(%374, %395, %5, %129, %122, %1, %396) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %397 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %398 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_122 = "equeue.launch"(%374, %397, %5, %136, %129, %1, %398) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %399 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %400 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_123 = "equeue.launch"(%374, %399, %5, %143, %136, %1, %400) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %401 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %402 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_124 = "equeue.launch"(%374, %401, %5, %150, %143, %1, %402) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %403 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %404 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_125 = "equeue.launch"(%374, %403, %5, %157, %150, %1, %404) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %405 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_126 = "equeue.launch"(%374, %405, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %406 = "equeue.control_start"() : () -> !equeue.signal
    %407 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %408 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_127 = "equeue.launch"(%406, %407, %5, %59, %1, %408) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %409 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %410 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_128 = "equeue.launch"(%406, %409, %5, %66, %59, %1, %410) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %411 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %412 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_129 = "equeue.launch"(%406, %411, %5, %73, %66, %1, %412) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %413 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %414 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_130 = "equeue.launch"(%406, %413, %5, %80, %73, %1, %414) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %415 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %416 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_131 = "equeue.launch"(%406, %415, %5, %87, %80, %1, %416) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %417 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %418 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_132 = "equeue.launch"(%406, %417, %5, %94, %87, %1, %418) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %419 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %420 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_133 = "equeue.launch"(%406, %419, %5, %101, %94, %1, %420) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %421 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %422 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_134 = "equeue.launch"(%406, %421, %5, %108, %101, %1, %422) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %423 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %424 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_135 = "equeue.launch"(%406, %423, %5, %115, %108, %1, %424) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %425 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %426 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_136 = "equeue.launch"(%406, %425, %5, %122, %115, %1, %426) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %427 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %428 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_137 = "equeue.launch"(%406, %427, %5, %129, %122, %1, %428) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %429 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %430 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_138 = "equeue.launch"(%406, %429, %5, %136, %129, %1, %430) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %431 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %432 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_139 = "equeue.launch"(%406, %431, %5, %143, %136, %1, %432) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %433 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %434 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_140 = "equeue.launch"(%406, %433, %5, %150, %143, %1, %434) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %435 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %436 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_141 = "equeue.launch"(%406, %435, %5, %157, %150, %1, %436) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %437 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_142 = "equeue.launch"(%406, %437, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %438 = "equeue.control_start"() : () -> !equeue.signal
    %439 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %440 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_143 = "equeue.launch"(%438, %439, %5, %59, %1, %440) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %441 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %442 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_144 = "equeue.launch"(%438, %441, %5, %66, %59, %1, %442) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %443 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %444 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_145 = "equeue.launch"(%438, %443, %5, %73, %66, %1, %444) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %445 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %446 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_146 = "equeue.launch"(%438, %445, %5, %80, %73, %1, %446) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %447 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %448 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_147 = "equeue.launch"(%438, %447, %5, %87, %80, %1, %448) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %449 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %450 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_148 = "equeue.launch"(%438, %449, %5, %94, %87, %1, %450) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %451 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %452 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_149 = "equeue.launch"(%438, %451, %5, %101, %94, %1, %452) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %453 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %454 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_150 = "equeue.launch"(%438, %453, %5, %108, %101, %1, %454) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %455 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %456 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_151 = "equeue.launch"(%438, %455, %5, %115, %108, %1, %456) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %457 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %458 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_152 = "equeue.launch"(%438, %457, %5, %122, %115, %1, %458) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %459 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %460 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_153 = "equeue.launch"(%438, %459, %5, %129, %122, %1, %460) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %461 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %462 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_154 = "equeue.launch"(%438, %461, %5, %136, %129, %1, %462) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %463 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %464 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_155 = "equeue.launch"(%438, %463, %5, %143, %136, %1, %464) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %465 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %466 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_156 = "equeue.launch"(%438, %465, %5, %150, %143, %1, %466) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %467 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %468 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_157 = "equeue.launch"(%438, %467, %5, %157, %150, %1, %468) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %469 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_158 = "equeue.launch"(%438, %469, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %470 = "equeue.control_start"() : () -> !equeue.signal
    %471 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %472 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_159 = "equeue.launch"(%470, %471, %5, %59, %1, %472) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %473 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %474 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_160 = "equeue.launch"(%470, %473, %5, %66, %59, %1, %474) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %475 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %476 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_161 = "equeue.launch"(%470, %475, %5, %73, %66, %1, %476) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %477 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %478 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_162 = "equeue.launch"(%470, %477, %5, %80, %73, %1, %478) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %479 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %480 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_163 = "equeue.launch"(%470, %479, %5, %87, %80, %1, %480) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %481 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %482 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_164 = "equeue.launch"(%470, %481, %5, %94, %87, %1, %482) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %483 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %484 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_165 = "equeue.launch"(%470, %483, %5, %101, %94, %1, %484) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %485 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %486 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_166 = "equeue.launch"(%470, %485, %5, %108, %101, %1, %486) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %487 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %488 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_167 = "equeue.launch"(%470, %487, %5, %115, %108, %1, %488) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %489 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %490 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_168 = "equeue.launch"(%470, %489, %5, %122, %115, %1, %490) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %491 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %492 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_169 = "equeue.launch"(%470, %491, %5, %129, %122, %1, %492) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %493 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %494 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_170 = "equeue.launch"(%470, %493, %5, %136, %129, %1, %494) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %495 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %496 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_171 = "equeue.launch"(%470, %495, %5, %143, %136, %1, %496) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %497 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %498 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_172 = "equeue.launch"(%470, %497, %5, %150, %143, %1, %498) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %499 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %500 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_173 = "equeue.launch"(%470, %499, %5, %157, %150, %1, %500) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %501 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_174 = "equeue.launch"(%470, %501, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %502 = "equeue.control_start"() : () -> !equeue.signal
    %503 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %504 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_175 = "equeue.launch"(%502, %503, %5, %59, %1, %504) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %505 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %506 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_176 = "equeue.launch"(%502, %505, %5, %66, %59, %1, %506) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %507 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %508 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_177 = "equeue.launch"(%502, %507, %5, %73, %66, %1, %508) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %509 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %510 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_178 = "equeue.launch"(%502, %509, %5, %80, %73, %1, %510) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %511 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %512 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_179 = "equeue.launch"(%502, %511, %5, %87, %80, %1, %512) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %513 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %514 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_180 = "equeue.launch"(%502, %513, %5, %94, %87, %1, %514) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %515 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %516 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_181 = "equeue.launch"(%502, %515, %5, %101, %94, %1, %516) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %517 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %518 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_182 = "equeue.launch"(%502, %517, %5, %108, %101, %1, %518) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %519 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %520 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_183 = "equeue.launch"(%502, %519, %5, %115, %108, %1, %520) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %521 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %522 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_184 = "equeue.launch"(%502, %521, %5, %122, %115, %1, %522) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %523 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %524 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_185 = "equeue.launch"(%502, %523, %5, %129, %122, %1, %524) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %525 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %526 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_186 = "equeue.launch"(%502, %525, %5, %136, %129, %1, %526) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %527 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %528 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_187 = "equeue.launch"(%502, %527, %5, %143, %136, %1, %528) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %529 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %530 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_188 = "equeue.launch"(%502, %529, %5, %150, %143, %1, %530) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %531 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %532 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_189 = "equeue.launch"(%502, %531, %5, %157, %150, %1, %532) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %533 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_190 = "equeue.launch"(%502, %533, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %534 = "equeue.control_start"() : () -> !equeue.signal
    %535 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %536 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_191 = "equeue.launch"(%534, %535, %5, %59, %1, %536) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %537 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %538 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_192 = "equeue.launch"(%534, %537, %5, %66, %59, %1, %538) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %539 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %540 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_193 = "equeue.launch"(%534, %539, %5, %73, %66, %1, %540) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %541 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %542 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_194 = "equeue.launch"(%534, %541, %5, %80, %73, %1, %542) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %543 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %544 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_195 = "equeue.launch"(%534, %543, %5, %87, %80, %1, %544) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %545 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %546 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_196 = "equeue.launch"(%534, %545, %5, %94, %87, %1, %546) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %547 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %548 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_197 = "equeue.launch"(%534, %547, %5, %101, %94, %1, %548) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %549 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %550 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_198 = "equeue.launch"(%534, %549, %5, %108, %101, %1, %550) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %551 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %552 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_199 = "equeue.launch"(%534, %551, %5, %115, %108, %1, %552) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %553 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %554 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_200 = "equeue.launch"(%534, %553, %5, %122, %115, %1, %554) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %555 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %556 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_201 = "equeue.launch"(%534, %555, %5, %129, %122, %1, %556) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %557 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %558 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_202 = "equeue.launch"(%534, %557, %5, %136, %129, %1, %558) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %559 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %560 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_203 = "equeue.launch"(%534, %559, %5, %143, %136, %1, %560) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %561 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %562 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_204 = "equeue.launch"(%534, %561, %5, %150, %143, %1, %562) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %563 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %564 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_205 = "equeue.launch"(%534, %563, %5, %157, %150, %1, %564) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %565 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_206 = "equeue.launch"(%534, %565, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %566 = "equeue.control_start"() : () -> !equeue.signal
    %567 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %568 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_207 = "equeue.launch"(%566, %567, %5, %59, %1, %568) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %569 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %570 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_208 = "equeue.launch"(%566, %569, %5, %66, %59, %1, %570) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %571 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %572 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_209 = "equeue.launch"(%566, %571, %5, %73, %66, %1, %572) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %573 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %574 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_210 = "equeue.launch"(%566, %573, %5, %80, %73, %1, %574) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %575 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %576 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_211 = "equeue.launch"(%566, %575, %5, %87, %80, %1, %576) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %577 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %578 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_212 = "equeue.launch"(%566, %577, %5, %94, %87, %1, %578) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %579 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %580 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_213 = "equeue.launch"(%566, %579, %5, %101, %94, %1, %580) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %581 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %582 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_214 = "equeue.launch"(%566, %581, %5, %108, %101, %1, %582) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %583 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %584 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_215 = "equeue.launch"(%566, %583, %5, %115, %108, %1, %584) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %585 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %586 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_216 = "equeue.launch"(%566, %585, %5, %122, %115, %1, %586) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %587 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %588 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_217 = "equeue.launch"(%566, %587, %5, %129, %122, %1, %588) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %589 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %590 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_218 = "equeue.launch"(%566, %589, %5, %136, %129, %1, %590) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %591 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %592 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_219 = "equeue.launch"(%566, %591, %5, %143, %136, %1, %592) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %593 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %594 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_220 = "equeue.launch"(%566, %593, %5, %150, %143, %1, %594) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %595 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %596 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_221 = "equeue.launch"(%566, %595, %5, %157, %150, %1, %596) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %597 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_222 = "equeue.launch"(%566, %597, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %598 = "equeue.control_start"() : () -> !equeue.signal
    %599 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %600 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_223 = "equeue.launch"(%598, %599, %5, %59, %1, %600) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %601 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %602 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_224 = "equeue.launch"(%598, %601, %5, %66, %59, %1, %602) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %603 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %604 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_225 = "equeue.launch"(%598, %603, %5, %73, %66, %1, %604) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %605 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %606 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_226 = "equeue.launch"(%598, %605, %5, %80, %73, %1, %606) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %607 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %608 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_227 = "equeue.launch"(%598, %607, %5, %87, %80, %1, %608) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %609 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %610 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_228 = "equeue.launch"(%598, %609, %5, %94, %87, %1, %610) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %611 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %612 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_229 = "equeue.launch"(%598, %611, %5, %101, %94, %1, %612) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %613 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %614 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_230 = "equeue.launch"(%598, %613, %5, %108, %101, %1, %614) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %615 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %616 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_231 = "equeue.launch"(%598, %615, %5, %115, %108, %1, %616) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %617 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %618 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_232 = "equeue.launch"(%598, %617, %5, %122, %115, %1, %618) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %619 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %620 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_233 = "equeue.launch"(%598, %619, %5, %129, %122, %1, %620) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %621 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %622 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_234 = "equeue.launch"(%598, %621, %5, %136, %129, %1, %622) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %623 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %624 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_235 = "equeue.launch"(%598, %623, %5, %143, %136, %1, %624) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %625 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %626 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_236 = "equeue.launch"(%598, %625, %5, %150, %143, %1, %626) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %627 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %628 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_237 = "equeue.launch"(%598, %627, %5, %157, %150, %1, %628) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %629 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_238 = "equeue.launch"(%598, %629, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %630 = "equeue.control_start"() : () -> !equeue.signal
    %631 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %632 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_239 = "equeue.launch"(%630, %631, %5, %59, %1, %632) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %633 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %634 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_240 = "equeue.launch"(%630, %633, %5, %66, %59, %1, %634) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %635 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %636 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_241 = "equeue.launch"(%630, %635, %5, %73, %66, %1, %636) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %637 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %638 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_242 = "equeue.launch"(%630, %637, %5, %80, %73, %1, %638) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %639 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %640 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_243 = "equeue.launch"(%630, %639, %5, %87, %80, %1, %640) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %641 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %642 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_244 = "equeue.launch"(%630, %641, %5, %94, %87, %1, %642) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %643 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %644 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_245 = "equeue.launch"(%630, %643, %5, %101, %94, %1, %644) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %645 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %646 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_246 = "equeue.launch"(%630, %645, %5, %108, %101, %1, %646) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %647 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %648 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_247 = "equeue.launch"(%630, %647, %5, %115, %108, %1, %648) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %649 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %650 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_248 = "equeue.launch"(%630, %649, %5, %122, %115, %1, %650) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %651 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %652 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_249 = "equeue.launch"(%630, %651, %5, %129, %122, %1, %652) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %653 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %654 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_250 = "equeue.launch"(%630, %653, %5, %136, %129, %1, %654) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %655 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %656 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_251 = "equeue.launch"(%630, %655, %5, %143, %136, %1, %656) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %657 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %658 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_252 = "equeue.launch"(%630, %657, %5, %150, %143, %1, %658) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %659 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %660 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_253 = "equeue.launch"(%630, %659, %5, %157, %150, %1, %660) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %661 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_254 = "equeue.launch"(%630, %661, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %662 = "equeue.control_start"() : () -> !equeue.signal
    %663 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %664 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_255 = "equeue.launch"(%662, %663, %5, %59, %1, %664) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %665 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %666 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_256 = "equeue.launch"(%662, %665, %5, %66, %59, %1, %666) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %667 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %668 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_257 = "equeue.launch"(%662, %667, %5, %73, %66, %1, %668) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %669 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %670 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_258 = "equeue.launch"(%662, %669, %5, %80, %73, %1, %670) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %671 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %672 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_259 = "equeue.launch"(%662, %671, %5, %87, %80, %1, %672) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %673 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %674 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_260 = "equeue.launch"(%662, %673, %5, %94, %87, %1, %674) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %675 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %676 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_261 = "equeue.launch"(%662, %675, %5, %101, %94, %1, %676) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %677 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %678 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_262 = "equeue.launch"(%662, %677, %5, %108, %101, %1, %678) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %679 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %680 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_263 = "equeue.launch"(%662, %679, %5, %115, %108, %1, %680) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %681 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %682 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_264 = "equeue.launch"(%662, %681, %5, %122, %115, %1, %682) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %683 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %684 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_265 = "equeue.launch"(%662, %683, %5, %129, %122, %1, %684) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %685 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %686 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_266 = "equeue.launch"(%662, %685, %5, %136, %129, %1, %686) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %687 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %688 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_267 = "equeue.launch"(%662, %687, %5, %143, %136, %1, %688) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %689 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %690 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_268 = "equeue.launch"(%662, %689, %5, %150, %143, %1, %690) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %691 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %692 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_269 = "equeue.launch"(%662, %691, %5, %157, %150, %1, %692) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %693 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_270 = "equeue.launch"(%662, %693, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %694 = "equeue.control_start"() : () -> !equeue.signal
    %695 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %696 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_271 = "equeue.launch"(%694, %695, %5, %59, %1, %696) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %697 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %698 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_272 = "equeue.launch"(%694, %697, %5, %66, %59, %1, %698) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %699 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %700 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_273 = "equeue.launch"(%694, %699, %5, %73, %66, %1, %700) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %701 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %702 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_274 = "equeue.launch"(%694, %701, %5, %80, %73, %1, %702) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %703 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %704 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_275 = "equeue.launch"(%694, %703, %5, %87, %80, %1, %704) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %705 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %706 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_276 = "equeue.launch"(%694, %705, %5, %94, %87, %1, %706) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %707 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %708 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_277 = "equeue.launch"(%694, %707, %5, %101, %94, %1, %708) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %709 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %710 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_278 = "equeue.launch"(%694, %709, %5, %108, %101, %1, %710) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %711 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %712 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_279 = "equeue.launch"(%694, %711, %5, %115, %108, %1, %712) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %713 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %714 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_280 = "equeue.launch"(%694, %713, %5, %122, %115, %1, %714) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %715 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %716 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_281 = "equeue.launch"(%694, %715, %5, %129, %122, %1, %716) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %717 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %718 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_282 = "equeue.launch"(%694, %717, %5, %136, %129, %1, %718) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %719 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %720 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_283 = "equeue.launch"(%694, %719, %5, %143, %136, %1, %720) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %721 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %722 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_284 = "equeue.launch"(%694, %721, %5, %150, %143, %1, %722) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %723 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %724 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_285 = "equeue.launch"(%694, %723, %5, %157, %150, %1, %724) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %725 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_286 = "equeue.launch"(%694, %725, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %726 = "equeue.control_start"() : () -> !equeue.signal
    %727 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %728 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_287 = "equeue.launch"(%726, %727, %5, %59, %1, %728) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %729 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %730 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_288 = "equeue.launch"(%726, %729, %5, %66, %59, %1, %730) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %731 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %732 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_289 = "equeue.launch"(%726, %731, %5, %73, %66, %1, %732) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %733 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %734 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_290 = "equeue.launch"(%726, %733, %5, %80, %73, %1, %734) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %735 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %736 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_291 = "equeue.launch"(%726, %735, %5, %87, %80, %1, %736) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %737 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %738 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_292 = "equeue.launch"(%726, %737, %5, %94, %87, %1, %738) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %739 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %740 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_293 = "equeue.launch"(%726, %739, %5, %101, %94, %1, %740) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %741 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %742 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_294 = "equeue.launch"(%726, %741, %5, %108, %101, %1, %742) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %743 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %744 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_295 = "equeue.launch"(%726, %743, %5, %115, %108, %1, %744) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %745 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %746 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_296 = "equeue.launch"(%726, %745, %5, %122, %115, %1, %746) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %747 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %748 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_297 = "equeue.launch"(%726, %747, %5, %129, %122, %1, %748) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %749 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %750 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_298 = "equeue.launch"(%726, %749, %5, %136, %129, %1, %750) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %751 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %752 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_299 = "equeue.launch"(%726, %751, %5, %143, %136, %1, %752) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %753 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %754 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_300 = "equeue.launch"(%726, %753, %5, %150, %143, %1, %754) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %755 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %756 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_301 = "equeue.launch"(%726, %755, %5, %157, %150, %1, %756) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %757 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_302 = "equeue.launch"(%726, %757, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %758 = "equeue.control_start"() : () -> !equeue.signal
    %759 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %760 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_303 = "equeue.launch"(%758, %759, %5, %59, %1, %760) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %761 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %762 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_304 = "equeue.launch"(%758, %761, %5, %66, %59, %1, %762) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %763 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %764 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_305 = "equeue.launch"(%758, %763, %5, %73, %66, %1, %764) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %765 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %766 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_306 = "equeue.launch"(%758, %765, %5, %80, %73, %1, %766) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %767 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %768 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_307 = "equeue.launch"(%758, %767, %5, %87, %80, %1, %768) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %769 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %770 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_308 = "equeue.launch"(%758, %769, %5, %94, %87, %1, %770) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %771 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %772 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_309 = "equeue.launch"(%758, %771, %5, %101, %94, %1, %772) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %773 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %774 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_310 = "equeue.launch"(%758, %773, %5, %108, %101, %1, %774) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %775 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %776 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_311 = "equeue.launch"(%758, %775, %5, %115, %108, %1, %776) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %777 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %778 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_312 = "equeue.launch"(%758, %777, %5, %122, %115, %1, %778) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %779 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %780 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_313 = "equeue.launch"(%758, %779, %5, %129, %122, %1, %780) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %781 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %782 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_314 = "equeue.launch"(%758, %781, %5, %136, %129, %1, %782) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %783 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %784 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_315 = "equeue.launch"(%758, %783, %5, %143, %136, %1, %784) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %785 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %786 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_316 = "equeue.launch"(%758, %785, %5, %150, %143, %1, %786) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %787 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %788 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_317 = "equeue.launch"(%758, %787, %5, %157, %150, %1, %788) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %789 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_318 = "equeue.launch"(%758, %789, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %790 = "equeue.control_start"() : () -> !equeue.signal
    %791 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %792 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_319 = "equeue.launch"(%790, %791, %5, %59, %1, %792) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %793 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %794 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_320 = "equeue.launch"(%790, %793, %5, %66, %59, %1, %794) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %795 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %796 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_321 = "equeue.launch"(%790, %795, %5, %73, %66, %1, %796) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %797 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %798 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_322 = "equeue.launch"(%790, %797, %5, %80, %73, %1, %798) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %799 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %800 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_323 = "equeue.launch"(%790, %799, %5, %87, %80, %1, %800) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %801 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %802 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_324 = "equeue.launch"(%790, %801, %5, %94, %87, %1, %802) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %803 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %804 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_325 = "equeue.launch"(%790, %803, %5, %101, %94, %1, %804) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %805 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %806 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_326 = "equeue.launch"(%790, %805, %5, %108, %101, %1, %806) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %807 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %808 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_327 = "equeue.launch"(%790, %807, %5, %115, %108, %1, %808) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %809 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %810 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_328 = "equeue.launch"(%790, %809, %5, %122, %115, %1, %810) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %811 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %812 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_329 = "equeue.launch"(%790, %811, %5, %129, %122, %1, %812) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %813 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %814 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_330 = "equeue.launch"(%790, %813, %5, %136, %129, %1, %814) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %815 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %816 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_331 = "equeue.launch"(%790, %815, %5, %143, %136, %1, %816) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %817 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %818 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_332 = "equeue.launch"(%790, %817, %5, %150, %143, %1, %818) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %819 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %820 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_333 = "equeue.launch"(%790, %819, %5, %157, %150, %1, %820) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %821 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_334 = "equeue.launch"(%790, %821, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %822 = "equeue.control_start"() : () -> !equeue.signal
    %823 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %824 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_335 = "equeue.launch"(%822, %823, %5, %59, %1, %824) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %825 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %826 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_336 = "equeue.launch"(%822, %825, %5, %66, %59, %1, %826) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %827 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %828 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_337 = "equeue.launch"(%822, %827, %5, %73, %66, %1, %828) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %829 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %830 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_338 = "equeue.launch"(%822, %829, %5, %80, %73, %1, %830) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %831 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %832 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_339 = "equeue.launch"(%822, %831, %5, %87, %80, %1, %832) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %833 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %834 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_340 = "equeue.launch"(%822, %833, %5, %94, %87, %1, %834) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %835 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %836 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_341 = "equeue.launch"(%822, %835, %5, %101, %94, %1, %836) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %837 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %838 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_342 = "equeue.launch"(%822, %837, %5, %108, %101, %1, %838) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %839 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %840 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_343 = "equeue.launch"(%822, %839, %5, %115, %108, %1, %840) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %841 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %842 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_344 = "equeue.launch"(%822, %841, %5, %122, %115, %1, %842) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %843 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %844 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_345 = "equeue.launch"(%822, %843, %5, %129, %122, %1, %844) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %845 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %846 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_346 = "equeue.launch"(%822, %845, %5, %136, %129, %1, %846) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %847 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %848 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_347 = "equeue.launch"(%822, %847, %5, %143, %136, %1, %848) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %849 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %850 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_348 = "equeue.launch"(%822, %849, %5, %150, %143, %1, %850) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %851 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %852 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_349 = "equeue.launch"(%822, %851, %5, %157, %150, %1, %852) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %853 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_350 = "equeue.launch"(%822, %853, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %854 = "equeue.control_start"() : () -> !equeue.signal
    %855 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %856 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_351 = "equeue.launch"(%854, %855, %5, %59, %1, %856) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %857 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %858 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_352 = "equeue.launch"(%854, %857, %5, %66, %59, %1, %858) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %859 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %860 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_353 = "equeue.launch"(%854, %859, %5, %73, %66, %1, %860) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %861 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %862 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_354 = "equeue.launch"(%854, %861, %5, %80, %73, %1, %862) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %863 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %864 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_355 = "equeue.launch"(%854, %863, %5, %87, %80, %1, %864) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %865 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %866 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_356 = "equeue.launch"(%854, %865, %5, %94, %87, %1, %866) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %867 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %868 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_357 = "equeue.launch"(%854, %867, %5, %101, %94, %1, %868) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %869 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %870 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_358 = "equeue.launch"(%854, %869, %5, %108, %101, %1, %870) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %871 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %872 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_359 = "equeue.launch"(%854, %871, %5, %115, %108, %1, %872) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %873 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %874 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_360 = "equeue.launch"(%854, %873, %5, %122, %115, %1, %874) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %875 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %876 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_361 = "equeue.launch"(%854, %875, %5, %129, %122, %1, %876) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %877 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %878 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_362 = "equeue.launch"(%854, %877, %5, %136, %129, %1, %878) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %879 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %880 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_363 = "equeue.launch"(%854, %879, %5, %143, %136, %1, %880) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %881 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %882 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_364 = "equeue.launch"(%854, %881, %5, %150, %143, %1, %882) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %883 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %884 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_365 = "equeue.launch"(%854, %883, %5, %157, %150, %1, %884) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %885 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_366 = "equeue.launch"(%854, %885, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %886 = "equeue.control_start"() : () -> !equeue.signal
    %887 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %888 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_367 = "equeue.launch"(%886, %887, %5, %59, %1, %888) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %889 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %890 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_368 = "equeue.launch"(%886, %889, %5, %66, %59, %1, %890) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %891 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %892 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_369 = "equeue.launch"(%886, %891, %5, %73, %66, %1, %892) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %893 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %894 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_370 = "equeue.launch"(%886, %893, %5, %80, %73, %1, %894) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %895 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %896 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_371 = "equeue.launch"(%886, %895, %5, %87, %80, %1, %896) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %897 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %898 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_372 = "equeue.launch"(%886, %897, %5, %94, %87, %1, %898) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %899 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %900 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_373 = "equeue.launch"(%886, %899, %5, %101, %94, %1, %900) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %901 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %902 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_374 = "equeue.launch"(%886, %901, %5, %108, %101, %1, %902) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %903 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %904 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_375 = "equeue.launch"(%886, %903, %5, %115, %108, %1, %904) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %905 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %906 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_376 = "equeue.launch"(%886, %905, %5, %122, %115, %1, %906) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %907 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %908 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_377 = "equeue.launch"(%886, %907, %5, %129, %122, %1, %908) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %909 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %910 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_378 = "equeue.launch"(%886, %909, %5, %136, %129, %1, %910) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %911 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %912 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_379 = "equeue.launch"(%886, %911, %5, %143, %136, %1, %912) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %913 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %914 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_380 = "equeue.launch"(%886, %913, %5, %150, %143, %1, %914) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %915 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %916 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_381 = "equeue.launch"(%886, %915, %5, %157, %150, %1, %916) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %917 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_382 = "equeue.launch"(%886, %917, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %918 = "equeue.control_start"() : () -> !equeue.signal
    %919 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %920 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_383 = "equeue.launch"(%918, %919, %5, %59, %1, %920) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %921 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %922 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_384 = "equeue.launch"(%918, %921, %5, %66, %59, %1, %922) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %923 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %924 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_385 = "equeue.launch"(%918, %923, %5, %73, %66, %1, %924) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %925 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %926 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_386 = "equeue.launch"(%918, %925, %5, %80, %73, %1, %926) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %927 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %928 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_387 = "equeue.launch"(%918, %927, %5, %87, %80, %1, %928) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %929 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %930 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_388 = "equeue.launch"(%918, %929, %5, %94, %87, %1, %930) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %931 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %932 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_389 = "equeue.launch"(%918, %931, %5, %101, %94, %1, %932) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %933 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %934 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_390 = "equeue.launch"(%918, %933, %5, %108, %101, %1, %934) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %935 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %936 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_391 = "equeue.launch"(%918, %935, %5, %115, %108, %1, %936) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %937 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %938 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_392 = "equeue.launch"(%918, %937, %5, %122, %115, %1, %938) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %939 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %940 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_393 = "equeue.launch"(%918, %939, %5, %129, %122, %1, %940) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %941 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %942 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_394 = "equeue.launch"(%918, %941, %5, %136, %129, %1, %942) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %943 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %944 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_395 = "equeue.launch"(%918, %943, %5, %143, %136, %1, %944) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %945 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %946 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_396 = "equeue.launch"(%918, %945, %5, %150, %143, %1, %946) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %947 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %948 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_397 = "equeue.launch"(%918, %947, %5, %157, %150, %1, %948) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %949 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_398 = "equeue.launch"(%918, %949, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %950 = "equeue.control_start"() : () -> !equeue.signal
    %951 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %952 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_399 = "equeue.launch"(%950, %951, %5, %59, %1, %952) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %953 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %954 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_400 = "equeue.launch"(%950, %953, %5, %66, %59, %1, %954) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %955 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %956 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_401 = "equeue.launch"(%950, %955, %5, %73, %66, %1, %956) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %957 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %958 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_402 = "equeue.launch"(%950, %957, %5, %80, %73, %1, %958) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %959 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %960 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_403 = "equeue.launch"(%950, %959, %5, %87, %80, %1, %960) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %961 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %962 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_404 = "equeue.launch"(%950, %961, %5, %94, %87, %1, %962) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %963 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %964 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_405 = "equeue.launch"(%950, %963, %5, %101, %94, %1, %964) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %965 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %966 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_406 = "equeue.launch"(%950, %965, %5, %108, %101, %1, %966) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %967 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %968 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_407 = "equeue.launch"(%950, %967, %5, %115, %108, %1, %968) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %969 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %970 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_408 = "equeue.launch"(%950, %969, %5, %122, %115, %1, %970) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %971 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %972 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_409 = "equeue.launch"(%950, %971, %5, %129, %122, %1, %972) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %973 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %974 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_410 = "equeue.launch"(%950, %973, %5, %136, %129, %1, %974) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %975 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %976 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_411 = "equeue.launch"(%950, %975, %5, %143, %136, %1, %976) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %977 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %978 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_412 = "equeue.launch"(%950, %977, %5, %150, %143, %1, %978) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %979 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %980 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_413 = "equeue.launch"(%950, %979, %5, %157, %150, %1, %980) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %981 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_414 = "equeue.launch"(%950, %981, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %982 = "equeue.control_start"() : () -> !equeue.signal
    %983 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %984 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_415 = "equeue.launch"(%982, %983, %5, %59, %1, %984) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %985 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %986 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_416 = "equeue.launch"(%982, %985, %5, %66, %59, %1, %986) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %987 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %988 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_417 = "equeue.launch"(%982, %987, %5, %73, %66, %1, %988) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %989 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %990 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_418 = "equeue.launch"(%982, %989, %5, %80, %73, %1, %990) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %991 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %992 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_419 = "equeue.launch"(%982, %991, %5, %87, %80, %1, %992) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %993 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %994 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_420 = "equeue.launch"(%982, %993, %5, %94, %87, %1, %994) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %995 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %996 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_421 = "equeue.launch"(%982, %995, %5, %101, %94, %1, %996) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %997 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %998 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_422 = "equeue.launch"(%982, %997, %5, %108, %101, %1, %998) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %999 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %1000 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_423 = "equeue.launch"(%982, %999, %5, %115, %108, %1, %1000) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1001 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %1002 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_424 = "equeue.launch"(%982, %1001, %5, %122, %115, %1, %1002) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1003 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %1004 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_425 = "equeue.launch"(%982, %1003, %5, %129, %122, %1, %1004) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1005 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %1006 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_426 = "equeue.launch"(%982, %1005, %5, %136, %129, %1, %1006) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1007 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %1008 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_427 = "equeue.launch"(%982, %1007, %5, %143, %136, %1, %1008) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1009 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %1010 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_428 = "equeue.launch"(%982, %1009, %5, %150, %143, %1, %1010) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1011 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %1012 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_429 = "equeue.launch"(%982, %1011, %5, %157, %150, %1, %1012) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1013 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_430 = "equeue.launch"(%982, %1013, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %1014 = "equeue.control_start"() : () -> !equeue.signal
    %1015 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %1016 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_431 = "equeue.launch"(%1014, %1015, %5, %59, %1, %1016) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1017 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %1018 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_432 = "equeue.launch"(%1014, %1017, %5, %66, %59, %1, %1018) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1019 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %1020 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_433 = "equeue.launch"(%1014, %1019, %5, %73, %66, %1, %1020) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1021 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %1022 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_434 = "equeue.launch"(%1014, %1021, %5, %80, %73, %1, %1022) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1023 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %1024 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_435 = "equeue.launch"(%1014, %1023, %5, %87, %80, %1, %1024) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1025 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %1026 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_436 = "equeue.launch"(%1014, %1025, %5, %94, %87, %1, %1026) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1027 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %1028 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_437 = "equeue.launch"(%1014, %1027, %5, %101, %94, %1, %1028) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1029 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %1030 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_438 = "equeue.launch"(%1014, %1029, %5, %108, %101, %1, %1030) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1031 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %1032 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_439 = "equeue.launch"(%1014, %1031, %5, %115, %108, %1, %1032) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1033 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %1034 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_440 = "equeue.launch"(%1014, %1033, %5, %122, %115, %1, %1034) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1035 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %1036 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_441 = "equeue.launch"(%1014, %1035, %5, %129, %122, %1, %1036) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1037 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %1038 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_442 = "equeue.launch"(%1014, %1037, %5, %136, %129, %1, %1038) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1039 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %1040 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_443 = "equeue.launch"(%1014, %1039, %5, %143, %136, %1, %1040) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1041 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %1042 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_444 = "equeue.launch"(%1014, %1041, %5, %150, %143, %1, %1042) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1043 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %1044 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_445 = "equeue.launch"(%1014, %1043, %5, %157, %150, %1, %1044) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1045 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_446 = "equeue.launch"(%1014, %1045, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %1046 = "equeue.control_start"() : () -> !equeue.signal
    %1047 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %1048 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_447 = "equeue.launch"(%1046, %1047, %5, %59, %1, %1048) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1049 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %1050 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_448 = "equeue.launch"(%1046, %1049, %5, %66, %59, %1, %1050) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1051 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %1052 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_449 = "equeue.launch"(%1046, %1051, %5, %73, %66, %1, %1052) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1053 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %1054 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_450 = "equeue.launch"(%1046, %1053, %5, %80, %73, %1, %1054) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1055 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %1056 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_451 = "equeue.launch"(%1046, %1055, %5, %87, %80, %1, %1056) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1057 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %1058 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_452 = "equeue.launch"(%1046, %1057, %5, %94, %87, %1, %1058) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1059 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %1060 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_453 = "equeue.launch"(%1046, %1059, %5, %101, %94, %1, %1060) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1061 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %1062 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_454 = "equeue.launch"(%1046, %1061, %5, %108, %101, %1, %1062) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1063 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %1064 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_455 = "equeue.launch"(%1046, %1063, %5, %115, %108, %1, %1064) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1065 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %1066 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_456 = "equeue.launch"(%1046, %1065, %5, %122, %115, %1, %1066) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1067 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %1068 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_457 = "equeue.launch"(%1046, %1067, %5, %129, %122, %1, %1068) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1069 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %1070 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_458 = "equeue.launch"(%1046, %1069, %5, %136, %129, %1, %1070) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1071 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %1072 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_459 = "equeue.launch"(%1046, %1071, %5, %143, %136, %1, %1072) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1073 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %1074 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_460 = "equeue.launch"(%1046, %1073, %5, %150, %143, %1, %1074) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1075 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %1076 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_461 = "equeue.launch"(%1046, %1075, %5, %157, %150, %1, %1076) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1077 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_462 = "equeue.launch"(%1046, %1077, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %1078 = "equeue.control_start"() : () -> !equeue.signal
    %1079 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %1080 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_463 = "equeue.launch"(%1078, %1079, %5, %59, %1, %1080) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1081 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %1082 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_464 = "equeue.launch"(%1078, %1081, %5, %66, %59, %1, %1082) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1083 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %1084 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_465 = "equeue.launch"(%1078, %1083, %5, %73, %66, %1, %1084) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1085 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %1086 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_466 = "equeue.launch"(%1078, %1085, %5, %80, %73, %1, %1086) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1087 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %1088 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_467 = "equeue.launch"(%1078, %1087, %5, %87, %80, %1, %1088) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1089 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %1090 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_468 = "equeue.launch"(%1078, %1089, %5, %94, %87, %1, %1090) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1091 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %1092 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_469 = "equeue.launch"(%1078, %1091, %5, %101, %94, %1, %1092) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1093 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %1094 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_470 = "equeue.launch"(%1078, %1093, %5, %108, %101, %1, %1094) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1095 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %1096 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_471 = "equeue.launch"(%1078, %1095, %5, %115, %108, %1, %1096) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1097 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %1098 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_472 = "equeue.launch"(%1078, %1097, %5, %122, %115, %1, %1098) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1099 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %1100 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_473 = "equeue.launch"(%1078, %1099, %5, %129, %122, %1, %1100) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1101 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %1102 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_474 = "equeue.launch"(%1078, %1101, %5, %136, %129, %1, %1102) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1103 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %1104 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_475 = "equeue.launch"(%1078, %1103, %5, %143, %136, %1, %1104) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1105 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %1106 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_476 = "equeue.launch"(%1078, %1105, %5, %150, %143, %1, %1106) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1107 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %1108 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_477 = "equeue.launch"(%1078, %1107, %5, %157, %150, %1, %1108) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1109 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_478 = "equeue.launch"(%1078, %1109, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %1110 = "equeue.control_start"() : () -> !equeue.signal
    %1111 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %1112 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_479 = "equeue.launch"(%1110, %1111, %5, %59, %1, %1112) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1113 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %1114 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_480 = "equeue.launch"(%1110, %1113, %5, %66, %59, %1, %1114) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1115 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %1116 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_481 = "equeue.launch"(%1110, %1115, %5, %73, %66, %1, %1116) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1117 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %1118 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_482 = "equeue.launch"(%1110, %1117, %5, %80, %73, %1, %1118) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1119 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %1120 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_483 = "equeue.launch"(%1110, %1119, %5, %87, %80, %1, %1120) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1121 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %1122 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_484 = "equeue.launch"(%1110, %1121, %5, %94, %87, %1, %1122) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1123 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %1124 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_485 = "equeue.launch"(%1110, %1123, %5, %101, %94, %1, %1124) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1125 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %1126 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_486 = "equeue.launch"(%1110, %1125, %5, %108, %101, %1, %1126) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1127 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %1128 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_487 = "equeue.launch"(%1110, %1127, %5, %115, %108, %1, %1128) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1129 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %1130 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_488 = "equeue.launch"(%1110, %1129, %5, %122, %115, %1, %1130) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1131 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %1132 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_489 = "equeue.launch"(%1110, %1131, %5, %129, %122, %1, %1132) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1133 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %1134 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_490 = "equeue.launch"(%1110, %1133, %5, %136, %129, %1, %1134) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1135 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %1136 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_491 = "equeue.launch"(%1110, %1135, %5, %143, %136, %1, %1136) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1137 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %1138 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_492 = "equeue.launch"(%1110, %1137, %5, %150, %143, %1, %1138) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1139 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %1140 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_493 = "equeue.launch"(%1110, %1139, %5, %157, %150, %1, %1140) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1141 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_494 = "equeue.launch"(%1110, %1141, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %1142 = "equeue.control_start"() : () -> !equeue.signal
    %1143 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %1144 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_495 = "equeue.launch"(%1142, %1143, %5, %59, %1, %1144) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1145 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %1146 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_496 = "equeue.launch"(%1142, %1145, %5, %66, %59, %1, %1146) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1147 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %1148 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_497 = "equeue.launch"(%1142, %1147, %5, %73, %66, %1, %1148) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1149 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %1150 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_498 = "equeue.launch"(%1142, %1149, %5, %80, %73, %1, %1150) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1151 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %1152 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_499 = "equeue.launch"(%1142, %1151, %5, %87, %80, %1, %1152) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1153 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %1154 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_500 = "equeue.launch"(%1142, %1153, %5, %94, %87, %1, %1154) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1155 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %1156 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_501 = "equeue.launch"(%1142, %1155, %5, %101, %94, %1, %1156) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1157 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %1158 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_502 = "equeue.launch"(%1142, %1157, %5, %108, %101, %1, %1158) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1159 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %1160 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_503 = "equeue.launch"(%1142, %1159, %5, %115, %108, %1, %1160) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1161 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %1162 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_504 = "equeue.launch"(%1142, %1161, %5, %122, %115, %1, %1162) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1163 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %1164 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_505 = "equeue.launch"(%1142, %1163, %5, %129, %122, %1, %1164) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1165 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %1166 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_506 = "equeue.launch"(%1142, %1165, %5, %136, %129, %1, %1166) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1167 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %1168 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_507 = "equeue.launch"(%1142, %1167, %5, %143, %136, %1, %1168) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1169 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %1170 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_508 = "equeue.launch"(%1142, %1169, %5, %150, %143, %1, %1170) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1171 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %1172 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_509 = "equeue.launch"(%1142, %1171, %5, %157, %150, %1, %1172) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1173 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_510 = "equeue.launch"(%1142, %1173, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %1174 = "equeue.control_start"() : () -> !equeue.signal
    %1175 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %1176 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_511 = "equeue.launch"(%1174, %1175, %5, %59, %1, %1176) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1177 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %1178 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_512 = "equeue.launch"(%1174, %1177, %5, %66, %59, %1, %1178) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1179 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %1180 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_513 = "equeue.launch"(%1174, %1179, %5, %73, %66, %1, %1180) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1181 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %1182 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_514 = "equeue.launch"(%1174, %1181, %5, %80, %73, %1, %1182) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1183 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %1184 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_515 = "equeue.launch"(%1174, %1183, %5, %87, %80, %1, %1184) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1185 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %1186 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_516 = "equeue.launch"(%1174, %1185, %5, %94, %87, %1, %1186) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1187 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %1188 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_517 = "equeue.launch"(%1174, %1187, %5, %101, %94, %1, %1188) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1189 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %1190 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_518 = "equeue.launch"(%1174, %1189, %5, %108, %101, %1, %1190) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1191 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %1192 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_519 = "equeue.launch"(%1174, %1191, %5, %115, %108, %1, %1192) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1193 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %1194 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_520 = "equeue.launch"(%1174, %1193, %5, %122, %115, %1, %1194) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1195 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %1196 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_521 = "equeue.launch"(%1174, %1195, %5, %129, %122, %1, %1196) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1197 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %1198 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_522 = "equeue.launch"(%1174, %1197, %5, %136, %129, %1, %1198) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1199 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %1200 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_523 = "equeue.launch"(%1174, %1199, %5, %143, %136, %1, %1200) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1201 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %1202 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_524 = "equeue.launch"(%1174, %1201, %5, %150, %143, %1, %1202) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1203 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %1204 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_525 = "equeue.launch"(%1174, %1203, %5, %157, %150, %1, %1204) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1205 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_526 = "equeue.launch"(%1174, %1205, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %1206 = "equeue.control_start"() : () -> !equeue.signal
    %1207 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %1208 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_527 = "equeue.launch"(%1206, %1207, %5, %59, %1, %1208) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1209 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %1210 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_528 = "equeue.launch"(%1206, %1209, %5, %66, %59, %1, %1210) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1211 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %1212 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_529 = "equeue.launch"(%1206, %1211, %5, %73, %66, %1, %1212) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1213 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %1214 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_530 = "equeue.launch"(%1206, %1213, %5, %80, %73, %1, %1214) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1215 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %1216 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_531 = "equeue.launch"(%1206, %1215, %5, %87, %80, %1, %1216) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1217 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %1218 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_532 = "equeue.launch"(%1206, %1217, %5, %94, %87, %1, %1218) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1219 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %1220 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_533 = "equeue.launch"(%1206, %1219, %5, %101, %94, %1, %1220) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1221 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %1222 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_534 = "equeue.launch"(%1206, %1221, %5, %108, %101, %1, %1222) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1223 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %1224 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_535 = "equeue.launch"(%1206, %1223, %5, %115, %108, %1, %1224) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1225 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %1226 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_536 = "equeue.launch"(%1206, %1225, %5, %122, %115, %1, %1226) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1227 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %1228 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_537 = "equeue.launch"(%1206, %1227, %5, %129, %122, %1, %1228) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1229 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %1230 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_538 = "equeue.launch"(%1206, %1229, %5, %136, %129, %1, %1230) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1231 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %1232 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_539 = "equeue.launch"(%1206, %1231, %5, %143, %136, %1, %1232) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1233 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %1234 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_540 = "equeue.launch"(%1206, %1233, %5, %150, %143, %1, %1234) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1235 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %1236 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_541 = "equeue.launch"(%1206, %1235, %5, %157, %150, %1, %1236) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1237 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_542 = "equeue.launch"(%1206, %1237, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %1238 = "equeue.control_start"() : () -> !equeue.signal
    %1239 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %1240 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_543 = "equeue.launch"(%1238, %1239, %5, %59, %1, %1240) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1241 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %1242 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_544 = "equeue.launch"(%1238, %1241, %5, %66, %59, %1, %1242) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1243 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %1244 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_545 = "equeue.launch"(%1238, %1243, %5, %73, %66, %1, %1244) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1245 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %1246 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_546 = "equeue.launch"(%1238, %1245, %5, %80, %73, %1, %1246) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1247 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %1248 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_547 = "equeue.launch"(%1238, %1247, %5, %87, %80, %1, %1248) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1249 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %1250 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_548 = "equeue.launch"(%1238, %1249, %5, %94, %87, %1, %1250) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1251 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %1252 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_549 = "equeue.launch"(%1238, %1251, %5, %101, %94, %1, %1252) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1253 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %1254 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_550 = "equeue.launch"(%1238, %1253, %5, %108, %101, %1, %1254) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1255 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %1256 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_551 = "equeue.launch"(%1238, %1255, %5, %115, %108, %1, %1256) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1257 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %1258 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_552 = "equeue.launch"(%1238, %1257, %5, %122, %115, %1, %1258) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1259 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %1260 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_553 = "equeue.launch"(%1238, %1259, %5, %129, %122, %1, %1260) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1261 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %1262 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_554 = "equeue.launch"(%1238, %1261, %5, %136, %129, %1, %1262) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1263 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %1264 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_555 = "equeue.launch"(%1238, %1263, %5, %143, %136, %1, %1264) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1265 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %1266 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_556 = "equeue.launch"(%1238, %1265, %5, %150, %143, %1, %1266) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1267 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %1268 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_557 = "equeue.launch"(%1238, %1267, %5, %157, %150, %1, %1268) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1269 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_558 = "equeue.launch"(%1238, %1269, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %1270 = "equeue.control_start"() : () -> !equeue.signal
    %1271 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %1272 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_559 = "equeue.launch"(%1270, %1271, %5, %59, %1, %1272) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1273 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %1274 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_560 = "equeue.launch"(%1270, %1273, %5, %66, %59, %1, %1274) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1275 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %1276 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_561 = "equeue.launch"(%1270, %1275, %5, %73, %66, %1, %1276) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1277 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %1278 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_562 = "equeue.launch"(%1270, %1277, %5, %80, %73, %1, %1278) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1279 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %1280 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_563 = "equeue.launch"(%1270, %1279, %5, %87, %80, %1, %1280) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1281 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %1282 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_564 = "equeue.launch"(%1270, %1281, %5, %94, %87, %1, %1282) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1283 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %1284 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_565 = "equeue.launch"(%1270, %1283, %5, %101, %94, %1, %1284) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1285 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %1286 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_566 = "equeue.launch"(%1270, %1285, %5, %108, %101, %1, %1286) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1287 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %1288 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_567 = "equeue.launch"(%1270, %1287, %5, %115, %108, %1, %1288) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1289 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %1290 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_568 = "equeue.launch"(%1270, %1289, %5, %122, %115, %1, %1290) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1291 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %1292 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_569 = "equeue.launch"(%1270, %1291, %5, %129, %122, %1, %1292) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1293 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %1294 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_570 = "equeue.launch"(%1270, %1293, %5, %136, %129, %1, %1294) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1295 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %1296 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_571 = "equeue.launch"(%1270, %1295, %5, %143, %136, %1, %1296) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1297 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %1298 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_572 = "equeue.launch"(%1270, %1297, %5, %150, %143, %1, %1298) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1299 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %1300 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_573 = "equeue.launch"(%1270, %1299, %5, %157, %150, %1, %1300) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1301 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_574 = "equeue.launch"(%1270, %1301, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %1302 = "equeue.control_start"() : () -> !equeue.signal
    %1303 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %1304 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_575 = "equeue.launch"(%1302, %1303, %5, %59, %1, %1304) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1305 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %1306 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_576 = "equeue.launch"(%1302, %1305, %5, %66, %59, %1, %1306) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1307 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %1308 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_577 = "equeue.launch"(%1302, %1307, %5, %73, %66, %1, %1308) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1309 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %1310 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_578 = "equeue.launch"(%1302, %1309, %5, %80, %73, %1, %1310) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1311 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %1312 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_579 = "equeue.launch"(%1302, %1311, %5, %87, %80, %1, %1312) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1313 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %1314 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_580 = "equeue.launch"(%1302, %1313, %5, %94, %87, %1, %1314) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1315 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %1316 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_581 = "equeue.launch"(%1302, %1315, %5, %101, %94, %1, %1316) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1317 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %1318 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_582 = "equeue.launch"(%1302, %1317, %5, %108, %101, %1, %1318) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1319 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %1320 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_583 = "equeue.launch"(%1302, %1319, %5, %115, %108, %1, %1320) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1321 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %1322 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_584 = "equeue.launch"(%1302, %1321, %5, %122, %115, %1, %1322) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1323 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %1324 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_585 = "equeue.launch"(%1302, %1323, %5, %129, %122, %1, %1324) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1325 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %1326 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_586 = "equeue.launch"(%1302, %1325, %5, %136, %129, %1, %1326) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1327 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %1328 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_587 = "equeue.launch"(%1302, %1327, %5, %143, %136, %1, %1328) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1329 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %1330 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_588 = "equeue.launch"(%1302, %1329, %5, %150, %143, %1, %1330) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1331 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %1332 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_589 = "equeue.launch"(%1302, %1331, %5, %157, %150, %1, %1332) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1333 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_590 = "equeue.launch"(%1302, %1333, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %1334 = "equeue.control_start"() : () -> !equeue.signal
    %1335 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %1336 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_591 = "equeue.launch"(%1334, %1335, %5, %59, %1, %1336) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1337 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %1338 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_592 = "equeue.launch"(%1334, %1337, %5, %66, %59, %1, %1338) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1339 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %1340 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_593 = "equeue.launch"(%1334, %1339, %5, %73, %66, %1, %1340) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1341 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %1342 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_594 = "equeue.launch"(%1334, %1341, %5, %80, %73, %1, %1342) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1343 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %1344 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_595 = "equeue.launch"(%1334, %1343, %5, %87, %80, %1, %1344) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1345 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %1346 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_596 = "equeue.launch"(%1334, %1345, %5, %94, %87, %1, %1346) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1347 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %1348 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_597 = "equeue.launch"(%1334, %1347, %5, %101, %94, %1, %1348) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1349 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %1350 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_598 = "equeue.launch"(%1334, %1349, %5, %108, %101, %1, %1350) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1351 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %1352 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_599 = "equeue.launch"(%1334, %1351, %5, %115, %108, %1, %1352) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1353 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %1354 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_600 = "equeue.launch"(%1334, %1353, %5, %122, %115, %1, %1354) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1355 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %1356 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_601 = "equeue.launch"(%1334, %1355, %5, %129, %122, %1, %1356) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1357 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %1358 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_602 = "equeue.launch"(%1334, %1357, %5, %136, %129, %1, %1358) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1359 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %1360 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_603 = "equeue.launch"(%1334, %1359, %5, %143, %136, %1, %1360) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1361 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %1362 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_604 = "equeue.launch"(%1334, %1361, %5, %150, %143, %1, %1362) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1363 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %1364 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_605 = "equeue.launch"(%1334, %1363, %5, %157, %150, %1, %1364) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1365 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_606 = "equeue.launch"(%1334, %1365, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %1366 = "equeue.control_start"() : () -> !equeue.signal
    %1367 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %1368 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_607 = "equeue.launch"(%1366, %1367, %5, %59, %1, %1368) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1369 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %1370 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_608 = "equeue.launch"(%1366, %1369, %5, %66, %59, %1, %1370) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1371 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %1372 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_609 = "equeue.launch"(%1366, %1371, %5, %73, %66, %1, %1372) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1373 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %1374 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_610 = "equeue.launch"(%1366, %1373, %5, %80, %73, %1, %1374) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1375 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %1376 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_611 = "equeue.launch"(%1366, %1375, %5, %87, %80, %1, %1376) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1377 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %1378 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_612 = "equeue.launch"(%1366, %1377, %5, %94, %87, %1, %1378) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1379 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %1380 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_613 = "equeue.launch"(%1366, %1379, %5, %101, %94, %1, %1380) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1381 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %1382 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_614 = "equeue.launch"(%1366, %1381, %5, %108, %101, %1, %1382) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1383 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %1384 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_615 = "equeue.launch"(%1366, %1383, %5, %115, %108, %1, %1384) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1385 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %1386 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_616 = "equeue.launch"(%1366, %1385, %5, %122, %115, %1, %1386) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1387 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %1388 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_617 = "equeue.launch"(%1366, %1387, %5, %129, %122, %1, %1388) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1389 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %1390 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_618 = "equeue.launch"(%1366, %1389, %5, %136, %129, %1, %1390) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1391 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %1392 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_619 = "equeue.launch"(%1366, %1391, %5, %143, %136, %1, %1392) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1393 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %1394 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_620 = "equeue.launch"(%1366, %1393, %5, %150, %143, %1, %1394) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1395 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %1396 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_621 = "equeue.launch"(%1366, %1395, %5, %157, %150, %1, %1396) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1397 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_622 = "equeue.launch"(%1366, %1397, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %1398 = "equeue.control_start"() : () -> !equeue.signal
    %1399 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %1400 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_623 = "equeue.launch"(%1398, %1399, %5, %59, %1, %1400) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1401 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %1402 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_624 = "equeue.launch"(%1398, %1401, %5, %66, %59, %1, %1402) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1403 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %1404 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_625 = "equeue.launch"(%1398, %1403, %5, %73, %66, %1, %1404) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1405 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %1406 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_626 = "equeue.launch"(%1398, %1405, %5, %80, %73, %1, %1406) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1407 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %1408 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_627 = "equeue.launch"(%1398, %1407, %5, %87, %80, %1, %1408) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1409 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %1410 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_628 = "equeue.launch"(%1398, %1409, %5, %94, %87, %1, %1410) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1411 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %1412 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_629 = "equeue.launch"(%1398, %1411, %5, %101, %94, %1, %1412) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1413 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %1414 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_630 = "equeue.launch"(%1398, %1413, %5, %108, %101, %1, %1414) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1415 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %1416 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_631 = "equeue.launch"(%1398, %1415, %5, %115, %108, %1, %1416) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1417 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %1418 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_632 = "equeue.launch"(%1398, %1417, %5, %122, %115, %1, %1418) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1419 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %1420 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_633 = "equeue.launch"(%1398, %1419, %5, %129, %122, %1, %1420) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1421 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %1422 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_634 = "equeue.launch"(%1398, %1421, %5, %136, %129, %1, %1422) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1423 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %1424 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_635 = "equeue.launch"(%1398, %1423, %5, %143, %136, %1, %1424) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1425 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %1426 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_636 = "equeue.launch"(%1398, %1425, %5, %150, %143, %1, %1426) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1427 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %1428 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_637 = "equeue.launch"(%1398, %1427, %5, %157, %150, %1, %1428) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1429 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_638 = "equeue.launch"(%1398, %1429, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %1430 = "equeue.control_start"() : () -> !equeue.signal
    %1431 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %1432 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_639 = "equeue.launch"(%1430, %1431, %5, %59, %1, %1432) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1433 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %1434 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_640 = "equeue.launch"(%1430, %1433, %5, %66, %59, %1, %1434) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1435 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %1436 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_641 = "equeue.launch"(%1430, %1435, %5, %73, %66, %1, %1436) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1437 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %1438 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_642 = "equeue.launch"(%1430, %1437, %5, %80, %73, %1, %1438) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1439 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %1440 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_643 = "equeue.launch"(%1430, %1439, %5, %87, %80, %1, %1440) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1441 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %1442 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_644 = "equeue.launch"(%1430, %1441, %5, %94, %87, %1, %1442) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1443 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %1444 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_645 = "equeue.launch"(%1430, %1443, %5, %101, %94, %1, %1444) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1445 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %1446 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_646 = "equeue.launch"(%1430, %1445, %5, %108, %101, %1, %1446) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1447 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %1448 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_647 = "equeue.launch"(%1430, %1447, %5, %115, %108, %1, %1448) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1449 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %1450 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_648 = "equeue.launch"(%1430, %1449, %5, %122, %115, %1, %1450) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1451 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %1452 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_649 = "equeue.launch"(%1430, %1451, %5, %129, %122, %1, %1452) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1453 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %1454 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_650 = "equeue.launch"(%1430, %1453, %5, %136, %129, %1, %1454) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1455 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %1456 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_651 = "equeue.launch"(%1430, %1455, %5, %143, %136, %1, %1456) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1457 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %1458 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_652 = "equeue.launch"(%1430, %1457, %5, %150, %143, %1, %1458) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1459 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %1460 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_653 = "equeue.launch"(%1430, %1459, %5, %157, %150, %1, %1460) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1461 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_654 = "equeue.launch"(%1430, %1461, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %1462 = "equeue.control_start"() : () -> !equeue.signal
    %1463 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %1464 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_655 = "equeue.launch"(%1462, %1463, %5, %59, %1, %1464) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1465 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %1466 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_656 = "equeue.launch"(%1462, %1465, %5, %66, %59, %1, %1466) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1467 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %1468 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_657 = "equeue.launch"(%1462, %1467, %5, %73, %66, %1, %1468) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1469 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %1470 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_658 = "equeue.launch"(%1462, %1469, %5, %80, %73, %1, %1470) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1471 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %1472 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_659 = "equeue.launch"(%1462, %1471, %5, %87, %80, %1, %1472) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1473 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %1474 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_660 = "equeue.launch"(%1462, %1473, %5, %94, %87, %1, %1474) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1475 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %1476 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_661 = "equeue.launch"(%1462, %1475, %5, %101, %94, %1, %1476) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1477 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %1478 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_662 = "equeue.launch"(%1462, %1477, %5, %108, %101, %1, %1478) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1479 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %1480 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_663 = "equeue.launch"(%1462, %1479, %5, %115, %108, %1, %1480) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1481 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %1482 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_664 = "equeue.launch"(%1462, %1481, %5, %122, %115, %1, %1482) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1483 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %1484 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_665 = "equeue.launch"(%1462, %1483, %5, %129, %122, %1, %1484) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1485 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %1486 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_666 = "equeue.launch"(%1462, %1485, %5, %136, %129, %1, %1486) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1487 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %1488 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_667 = "equeue.launch"(%1462, %1487, %5, %143, %136, %1, %1488) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1489 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %1490 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_668 = "equeue.launch"(%1462, %1489, %5, %150, %143, %1, %1490) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1491 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %1492 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_669 = "equeue.launch"(%1462, %1491, %5, %157, %150, %1, %1492) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1493 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_670 = "equeue.launch"(%1462, %1493, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %1494 = "equeue.control_start"() : () -> !equeue.signal
    %1495 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %1496 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_671 = "equeue.launch"(%1494, %1495, %5, %59, %1, %1496) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1497 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %1498 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_672 = "equeue.launch"(%1494, %1497, %5, %66, %59, %1, %1498) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1499 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %1500 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_673 = "equeue.launch"(%1494, %1499, %5, %73, %66, %1, %1500) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1501 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %1502 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_674 = "equeue.launch"(%1494, %1501, %5, %80, %73, %1, %1502) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1503 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %1504 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_675 = "equeue.launch"(%1494, %1503, %5, %87, %80, %1, %1504) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1505 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %1506 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_676 = "equeue.launch"(%1494, %1505, %5, %94, %87, %1, %1506) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1507 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %1508 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_677 = "equeue.launch"(%1494, %1507, %5, %101, %94, %1, %1508) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1509 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %1510 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_678 = "equeue.launch"(%1494, %1509, %5, %108, %101, %1, %1510) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1511 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %1512 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_679 = "equeue.launch"(%1494, %1511, %5, %115, %108, %1, %1512) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1513 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %1514 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_680 = "equeue.launch"(%1494, %1513, %5, %122, %115, %1, %1514) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1515 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %1516 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_681 = "equeue.launch"(%1494, %1515, %5, %129, %122, %1, %1516) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1517 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %1518 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_682 = "equeue.launch"(%1494, %1517, %5, %136, %129, %1, %1518) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1519 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %1520 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_683 = "equeue.launch"(%1494, %1519, %5, %143, %136, %1, %1520) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1521 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %1522 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_684 = "equeue.launch"(%1494, %1521, %5, %150, %143, %1, %1522) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1523 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %1524 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_685 = "equeue.launch"(%1494, %1523, %5, %157, %150, %1, %1524) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1525 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_686 = "equeue.launch"(%1494, %1525, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %1526 = "equeue.control_start"() : () -> !equeue.signal
    %1527 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %1528 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_687 = "equeue.launch"(%1526, %1527, %5, %59, %1, %1528) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1529 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %1530 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_688 = "equeue.launch"(%1526, %1529, %5, %66, %59, %1, %1530) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1531 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %1532 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_689 = "equeue.launch"(%1526, %1531, %5, %73, %66, %1, %1532) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1533 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %1534 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_690 = "equeue.launch"(%1526, %1533, %5, %80, %73, %1, %1534) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1535 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %1536 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_691 = "equeue.launch"(%1526, %1535, %5, %87, %80, %1, %1536) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1537 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %1538 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_692 = "equeue.launch"(%1526, %1537, %5, %94, %87, %1, %1538) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1539 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %1540 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_693 = "equeue.launch"(%1526, %1539, %5, %101, %94, %1, %1540) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1541 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %1542 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_694 = "equeue.launch"(%1526, %1541, %5, %108, %101, %1, %1542) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1543 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %1544 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_695 = "equeue.launch"(%1526, %1543, %5, %115, %108, %1, %1544) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1545 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %1546 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_696 = "equeue.launch"(%1526, %1545, %5, %122, %115, %1, %1546) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1547 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %1548 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_697 = "equeue.launch"(%1526, %1547, %5, %129, %122, %1, %1548) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1549 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %1550 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_698 = "equeue.launch"(%1526, %1549, %5, %136, %129, %1, %1550) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1551 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %1552 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_699 = "equeue.launch"(%1526, %1551, %5, %143, %136, %1, %1552) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1553 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %1554 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_700 = "equeue.launch"(%1526, %1553, %5, %150, %143, %1, %1554) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1555 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %1556 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_701 = "equeue.launch"(%1526, %1555, %5, %157, %150, %1, %1556) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1557 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_702 = "equeue.launch"(%1526, %1557, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %1558 = "equeue.control_start"() : () -> !equeue.signal
    %1559 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %1560 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_703 = "equeue.launch"(%1558, %1559, %5, %59, %1, %1560) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1561 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %1562 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_704 = "equeue.launch"(%1558, %1561, %5, %66, %59, %1, %1562) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1563 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %1564 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_705 = "equeue.launch"(%1558, %1563, %5, %73, %66, %1, %1564) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1565 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %1566 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_706 = "equeue.launch"(%1558, %1565, %5, %80, %73, %1, %1566) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1567 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %1568 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_707 = "equeue.launch"(%1558, %1567, %5, %87, %80, %1, %1568) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1569 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %1570 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_708 = "equeue.launch"(%1558, %1569, %5, %94, %87, %1, %1570) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1571 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %1572 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_709 = "equeue.launch"(%1558, %1571, %5, %101, %94, %1, %1572) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1573 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %1574 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_710 = "equeue.launch"(%1558, %1573, %5, %108, %101, %1, %1574) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1575 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %1576 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_711 = "equeue.launch"(%1558, %1575, %5, %115, %108, %1, %1576) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1577 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %1578 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_712 = "equeue.launch"(%1558, %1577, %5, %122, %115, %1, %1578) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1579 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %1580 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_713 = "equeue.launch"(%1558, %1579, %5, %129, %122, %1, %1580) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1581 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %1582 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_714 = "equeue.launch"(%1558, %1581, %5, %136, %129, %1, %1582) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1583 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %1584 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_715 = "equeue.launch"(%1558, %1583, %5, %143, %136, %1, %1584) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1585 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %1586 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_716 = "equeue.launch"(%1558, %1585, %5, %150, %143, %1, %1586) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1587 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %1588 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_717 = "equeue.launch"(%1558, %1587, %5, %157, %150, %1, %1588) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1589 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_718 = "equeue.launch"(%1558, %1589, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %1590 = "equeue.control_start"() : () -> !equeue.signal
    %1591 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %1592 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_719 = "equeue.launch"(%1590, %1591, %5, %59, %1, %1592) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1593 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %1594 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_720 = "equeue.launch"(%1590, %1593, %5, %66, %59, %1, %1594) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1595 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %1596 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_721 = "equeue.launch"(%1590, %1595, %5, %73, %66, %1, %1596) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1597 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %1598 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_722 = "equeue.launch"(%1590, %1597, %5, %80, %73, %1, %1598) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1599 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %1600 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_723 = "equeue.launch"(%1590, %1599, %5, %87, %80, %1, %1600) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1601 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %1602 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_724 = "equeue.launch"(%1590, %1601, %5, %94, %87, %1, %1602) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1603 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %1604 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_725 = "equeue.launch"(%1590, %1603, %5, %101, %94, %1, %1604) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1605 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %1606 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_726 = "equeue.launch"(%1590, %1605, %5, %108, %101, %1, %1606) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1607 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %1608 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_727 = "equeue.launch"(%1590, %1607, %5, %115, %108, %1, %1608) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1609 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %1610 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_728 = "equeue.launch"(%1590, %1609, %5, %122, %115, %1, %1610) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1611 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %1612 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_729 = "equeue.launch"(%1590, %1611, %5, %129, %122, %1, %1612) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1613 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %1614 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_730 = "equeue.launch"(%1590, %1613, %5, %136, %129, %1, %1614) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1615 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %1616 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_731 = "equeue.launch"(%1590, %1615, %5, %143, %136, %1, %1616) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1617 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %1618 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_732 = "equeue.launch"(%1590, %1617, %5, %150, %143, %1, %1618) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1619 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %1620 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_733 = "equeue.launch"(%1590, %1619, %5, %157, %150, %1, %1620) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1621 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_734 = "equeue.launch"(%1590, %1621, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %1622 = "equeue.control_start"() : () -> !equeue.signal
    %1623 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %1624 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_735 = "equeue.launch"(%1622, %1623, %5, %59, %1, %1624) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1625 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %1626 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_736 = "equeue.launch"(%1622, %1625, %5, %66, %59, %1, %1626) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1627 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %1628 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_737 = "equeue.launch"(%1622, %1627, %5, %73, %66, %1, %1628) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1629 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %1630 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_738 = "equeue.launch"(%1622, %1629, %5, %80, %73, %1, %1630) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1631 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %1632 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_739 = "equeue.launch"(%1622, %1631, %5, %87, %80, %1, %1632) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1633 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %1634 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_740 = "equeue.launch"(%1622, %1633, %5, %94, %87, %1, %1634) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1635 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %1636 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_741 = "equeue.launch"(%1622, %1635, %5, %101, %94, %1, %1636) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1637 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %1638 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_742 = "equeue.launch"(%1622, %1637, %5, %108, %101, %1, %1638) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1639 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %1640 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_743 = "equeue.launch"(%1622, %1639, %5, %115, %108, %1, %1640) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1641 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %1642 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_744 = "equeue.launch"(%1622, %1641, %5, %122, %115, %1, %1642) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1643 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %1644 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_745 = "equeue.launch"(%1622, %1643, %5, %129, %122, %1, %1644) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1645 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %1646 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_746 = "equeue.launch"(%1622, %1645, %5, %136, %129, %1, %1646) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1647 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %1648 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_747 = "equeue.launch"(%1622, %1647, %5, %143, %136, %1, %1648) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1649 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %1650 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_748 = "equeue.launch"(%1622, %1649, %5, %150, %143, %1, %1650) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1651 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %1652 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_749 = "equeue.launch"(%1622, %1651, %5, %157, %150, %1, %1652) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1653 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_750 = "equeue.launch"(%1622, %1653, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %1654 = "equeue.control_start"() : () -> !equeue.signal
    %1655 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %1656 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_751 = "equeue.launch"(%1654, %1655, %5, %59, %1, %1656) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1657 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %1658 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_752 = "equeue.launch"(%1654, %1657, %5, %66, %59, %1, %1658) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1659 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %1660 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_753 = "equeue.launch"(%1654, %1659, %5, %73, %66, %1, %1660) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1661 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %1662 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_754 = "equeue.launch"(%1654, %1661, %5, %80, %73, %1, %1662) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1663 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %1664 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_755 = "equeue.launch"(%1654, %1663, %5, %87, %80, %1, %1664) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1665 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %1666 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_756 = "equeue.launch"(%1654, %1665, %5, %94, %87, %1, %1666) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1667 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %1668 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_757 = "equeue.launch"(%1654, %1667, %5, %101, %94, %1, %1668) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1669 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %1670 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_758 = "equeue.launch"(%1654, %1669, %5, %108, %101, %1, %1670) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1671 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %1672 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_759 = "equeue.launch"(%1654, %1671, %5, %115, %108, %1, %1672) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1673 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %1674 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_760 = "equeue.launch"(%1654, %1673, %5, %122, %115, %1, %1674) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1675 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %1676 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_761 = "equeue.launch"(%1654, %1675, %5, %129, %122, %1, %1676) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1677 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %1678 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_762 = "equeue.launch"(%1654, %1677, %5, %136, %129, %1, %1678) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1679 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %1680 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_763 = "equeue.launch"(%1654, %1679, %5, %143, %136, %1, %1680) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1681 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %1682 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_764 = "equeue.launch"(%1654, %1681, %5, %150, %143, %1, %1682) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1683 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %1684 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_765 = "equeue.launch"(%1654, %1683, %5, %157, %150, %1, %1684) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1685 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_766 = "equeue.launch"(%1654, %1685, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %1686 = "equeue.control_start"() : () -> !equeue.signal
    %1687 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %1688 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_767 = "equeue.launch"(%1686, %1687, %5, %59, %1, %1688) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1689 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %1690 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_768 = "equeue.launch"(%1686, %1689, %5, %66, %59, %1, %1690) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1691 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %1692 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_769 = "equeue.launch"(%1686, %1691, %5, %73, %66, %1, %1692) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1693 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %1694 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_770 = "equeue.launch"(%1686, %1693, %5, %80, %73, %1, %1694) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1695 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %1696 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_771 = "equeue.launch"(%1686, %1695, %5, %87, %80, %1, %1696) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1697 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %1698 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_772 = "equeue.launch"(%1686, %1697, %5, %94, %87, %1, %1698) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1699 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %1700 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_773 = "equeue.launch"(%1686, %1699, %5, %101, %94, %1, %1700) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1701 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %1702 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_774 = "equeue.launch"(%1686, %1701, %5, %108, %101, %1, %1702) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1703 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %1704 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_775 = "equeue.launch"(%1686, %1703, %5, %115, %108, %1, %1704) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1705 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %1706 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_776 = "equeue.launch"(%1686, %1705, %5, %122, %115, %1, %1706) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1707 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %1708 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_777 = "equeue.launch"(%1686, %1707, %5, %129, %122, %1, %1708) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1709 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %1710 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_778 = "equeue.launch"(%1686, %1709, %5, %136, %129, %1, %1710) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1711 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %1712 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_779 = "equeue.launch"(%1686, %1711, %5, %143, %136, %1, %1712) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1713 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %1714 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_780 = "equeue.launch"(%1686, %1713, %5, %150, %143, %1, %1714) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1715 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %1716 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_781 = "equeue.launch"(%1686, %1715, %5, %157, %150, %1, %1716) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1717 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_782 = "equeue.launch"(%1686, %1717, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %1718 = "equeue.control_start"() : () -> !equeue.signal
    %1719 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %1720 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_783 = "equeue.launch"(%1718, %1719, %5, %59, %1, %1720) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1721 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %1722 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_784 = "equeue.launch"(%1718, %1721, %5, %66, %59, %1, %1722) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1723 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %1724 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_785 = "equeue.launch"(%1718, %1723, %5, %73, %66, %1, %1724) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1725 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %1726 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_786 = "equeue.launch"(%1718, %1725, %5, %80, %73, %1, %1726) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1727 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %1728 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_787 = "equeue.launch"(%1718, %1727, %5, %87, %80, %1, %1728) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1729 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %1730 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_788 = "equeue.launch"(%1718, %1729, %5, %94, %87, %1, %1730) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1731 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %1732 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_789 = "equeue.launch"(%1718, %1731, %5, %101, %94, %1, %1732) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1733 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %1734 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_790 = "equeue.launch"(%1718, %1733, %5, %108, %101, %1, %1734) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1735 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %1736 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_791 = "equeue.launch"(%1718, %1735, %5, %115, %108, %1, %1736) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1737 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %1738 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_792 = "equeue.launch"(%1718, %1737, %5, %122, %115, %1, %1738) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1739 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %1740 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_793 = "equeue.launch"(%1718, %1739, %5, %129, %122, %1, %1740) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1741 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %1742 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_794 = "equeue.launch"(%1718, %1741, %5, %136, %129, %1, %1742) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1743 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %1744 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_795 = "equeue.launch"(%1718, %1743, %5, %143, %136, %1, %1744) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1745 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %1746 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_796 = "equeue.launch"(%1718, %1745, %5, %150, %143, %1, %1746) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1747 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %1748 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_797 = "equeue.launch"(%1718, %1747, %5, %157, %150, %1, %1748) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1749 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_798 = "equeue.launch"(%1718, %1749, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %1750 = "equeue.control_start"() : () -> !equeue.signal
    %1751 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %1752 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_799 = "equeue.launch"(%1750, %1751, %5, %59, %1, %1752) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1753 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %1754 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_800 = "equeue.launch"(%1750, %1753, %5, %66, %59, %1, %1754) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1755 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %1756 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_801 = "equeue.launch"(%1750, %1755, %5, %73, %66, %1, %1756) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1757 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %1758 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_802 = "equeue.launch"(%1750, %1757, %5, %80, %73, %1, %1758) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1759 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %1760 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_803 = "equeue.launch"(%1750, %1759, %5, %87, %80, %1, %1760) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1761 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %1762 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_804 = "equeue.launch"(%1750, %1761, %5, %94, %87, %1, %1762) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1763 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %1764 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_805 = "equeue.launch"(%1750, %1763, %5, %101, %94, %1, %1764) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1765 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %1766 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_806 = "equeue.launch"(%1750, %1765, %5, %108, %101, %1, %1766) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1767 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %1768 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_807 = "equeue.launch"(%1750, %1767, %5, %115, %108, %1, %1768) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1769 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %1770 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_808 = "equeue.launch"(%1750, %1769, %5, %122, %115, %1, %1770) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1771 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %1772 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_809 = "equeue.launch"(%1750, %1771, %5, %129, %122, %1, %1772) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1773 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %1774 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_810 = "equeue.launch"(%1750, %1773, %5, %136, %129, %1, %1774) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1775 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %1776 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_811 = "equeue.launch"(%1750, %1775, %5, %143, %136, %1, %1776) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1777 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %1778 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_812 = "equeue.launch"(%1750, %1777, %5, %150, %143, %1, %1778) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1779 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %1780 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_813 = "equeue.launch"(%1750, %1779, %5, %157, %150, %1, %1780) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1781 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_814 = "equeue.launch"(%1750, %1781, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %1782 = "equeue.control_start"() : () -> !equeue.signal
    %1783 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %1784 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_815 = "equeue.launch"(%1782, %1783, %5, %59, %1, %1784) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1785 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %1786 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_816 = "equeue.launch"(%1782, %1785, %5, %66, %59, %1, %1786) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1787 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %1788 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_817 = "equeue.launch"(%1782, %1787, %5, %73, %66, %1, %1788) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1789 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %1790 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_818 = "equeue.launch"(%1782, %1789, %5, %80, %73, %1, %1790) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1791 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %1792 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_819 = "equeue.launch"(%1782, %1791, %5, %87, %80, %1, %1792) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1793 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %1794 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_820 = "equeue.launch"(%1782, %1793, %5, %94, %87, %1, %1794) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1795 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %1796 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_821 = "equeue.launch"(%1782, %1795, %5, %101, %94, %1, %1796) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1797 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %1798 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_822 = "equeue.launch"(%1782, %1797, %5, %108, %101, %1, %1798) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1799 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %1800 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_823 = "equeue.launch"(%1782, %1799, %5, %115, %108, %1, %1800) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1801 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %1802 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_824 = "equeue.launch"(%1782, %1801, %5, %122, %115, %1, %1802) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1803 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %1804 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_825 = "equeue.launch"(%1782, %1803, %5, %129, %122, %1, %1804) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1805 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %1806 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_826 = "equeue.launch"(%1782, %1805, %5, %136, %129, %1, %1806) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1807 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %1808 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_827 = "equeue.launch"(%1782, %1807, %5, %143, %136, %1, %1808) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1809 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %1810 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_828 = "equeue.launch"(%1782, %1809, %5, %150, %143, %1, %1810) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1811 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %1812 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_829 = "equeue.launch"(%1782, %1811, %5, %157, %150, %1, %1812) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1813 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_830 = "equeue.launch"(%1782, %1813, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %1814 = "equeue.control_start"() : () -> !equeue.signal
    %1815 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %1816 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_831 = "equeue.launch"(%1814, %1815, %5, %59, %1, %1816) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1817 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %1818 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_832 = "equeue.launch"(%1814, %1817, %5, %66, %59, %1, %1818) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1819 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %1820 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_833 = "equeue.launch"(%1814, %1819, %5, %73, %66, %1, %1820) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1821 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %1822 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_834 = "equeue.launch"(%1814, %1821, %5, %80, %73, %1, %1822) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1823 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %1824 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_835 = "equeue.launch"(%1814, %1823, %5, %87, %80, %1, %1824) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1825 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %1826 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_836 = "equeue.launch"(%1814, %1825, %5, %94, %87, %1, %1826) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1827 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %1828 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_837 = "equeue.launch"(%1814, %1827, %5, %101, %94, %1, %1828) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1829 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %1830 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_838 = "equeue.launch"(%1814, %1829, %5, %108, %101, %1, %1830) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1831 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %1832 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_839 = "equeue.launch"(%1814, %1831, %5, %115, %108, %1, %1832) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1833 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %1834 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_840 = "equeue.launch"(%1814, %1833, %5, %122, %115, %1, %1834) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1835 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %1836 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_841 = "equeue.launch"(%1814, %1835, %5, %129, %122, %1, %1836) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1837 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %1838 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_842 = "equeue.launch"(%1814, %1837, %5, %136, %129, %1, %1838) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1839 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %1840 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_843 = "equeue.launch"(%1814, %1839, %5, %143, %136, %1, %1840) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1841 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %1842 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_844 = "equeue.launch"(%1814, %1841, %5, %150, %143, %1, %1842) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1843 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %1844 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_845 = "equeue.launch"(%1814, %1843, %5, %157, %150, %1, %1844) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1845 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_846 = "equeue.launch"(%1814, %1845, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %1846 = "equeue.control_start"() : () -> !equeue.signal
    %1847 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %1848 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_847 = "equeue.launch"(%1846, %1847, %5, %59, %1, %1848) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1849 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %1850 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_848 = "equeue.launch"(%1846, %1849, %5, %66, %59, %1, %1850) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1851 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %1852 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_849 = "equeue.launch"(%1846, %1851, %5, %73, %66, %1, %1852) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1853 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %1854 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_850 = "equeue.launch"(%1846, %1853, %5, %80, %73, %1, %1854) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1855 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %1856 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_851 = "equeue.launch"(%1846, %1855, %5, %87, %80, %1, %1856) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1857 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %1858 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_852 = "equeue.launch"(%1846, %1857, %5, %94, %87, %1, %1858) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1859 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %1860 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_853 = "equeue.launch"(%1846, %1859, %5, %101, %94, %1, %1860) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1861 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %1862 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_854 = "equeue.launch"(%1846, %1861, %5, %108, %101, %1, %1862) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1863 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %1864 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_855 = "equeue.launch"(%1846, %1863, %5, %115, %108, %1, %1864) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1865 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %1866 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_856 = "equeue.launch"(%1846, %1865, %5, %122, %115, %1, %1866) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1867 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %1868 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_857 = "equeue.launch"(%1846, %1867, %5, %129, %122, %1, %1868) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1869 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %1870 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_858 = "equeue.launch"(%1846, %1869, %5, %136, %129, %1, %1870) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1871 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %1872 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_859 = "equeue.launch"(%1846, %1871, %5, %143, %136, %1, %1872) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1873 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %1874 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_860 = "equeue.launch"(%1846, %1873, %5, %150, %143, %1, %1874) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1875 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %1876 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_861 = "equeue.launch"(%1846, %1875, %5, %157, %150, %1, %1876) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1877 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_862 = "equeue.launch"(%1846, %1877, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %1878 = "equeue.control_start"() : () -> !equeue.signal
    %1879 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %1880 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_863 = "equeue.launch"(%1878, %1879, %5, %59, %1, %1880) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1881 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %1882 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_864 = "equeue.launch"(%1878, %1881, %5, %66, %59, %1, %1882) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1883 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %1884 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_865 = "equeue.launch"(%1878, %1883, %5, %73, %66, %1, %1884) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1885 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %1886 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_866 = "equeue.launch"(%1878, %1885, %5, %80, %73, %1, %1886) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1887 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %1888 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_867 = "equeue.launch"(%1878, %1887, %5, %87, %80, %1, %1888) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1889 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %1890 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_868 = "equeue.launch"(%1878, %1889, %5, %94, %87, %1, %1890) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1891 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %1892 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_869 = "equeue.launch"(%1878, %1891, %5, %101, %94, %1, %1892) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1893 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %1894 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_870 = "equeue.launch"(%1878, %1893, %5, %108, %101, %1, %1894) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1895 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %1896 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_871 = "equeue.launch"(%1878, %1895, %5, %115, %108, %1, %1896) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1897 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %1898 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_872 = "equeue.launch"(%1878, %1897, %5, %122, %115, %1, %1898) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1899 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %1900 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_873 = "equeue.launch"(%1878, %1899, %5, %129, %122, %1, %1900) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1901 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %1902 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_874 = "equeue.launch"(%1878, %1901, %5, %136, %129, %1, %1902) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1903 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %1904 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_875 = "equeue.launch"(%1878, %1903, %5, %143, %136, %1, %1904) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1905 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %1906 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_876 = "equeue.launch"(%1878, %1905, %5, %150, %143, %1, %1906) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1907 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %1908 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_877 = "equeue.launch"(%1878, %1907, %5, %157, %150, %1, %1908) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1909 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_878 = "equeue.launch"(%1878, %1909, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %1910 = "equeue.control_start"() : () -> !equeue.signal
    %1911 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %1912 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_879 = "equeue.launch"(%1910, %1911, %5, %59, %1, %1912) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1913 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %1914 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_880 = "equeue.launch"(%1910, %1913, %5, %66, %59, %1, %1914) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1915 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %1916 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_881 = "equeue.launch"(%1910, %1915, %5, %73, %66, %1, %1916) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1917 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %1918 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_882 = "equeue.launch"(%1910, %1917, %5, %80, %73, %1, %1918) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1919 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %1920 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_883 = "equeue.launch"(%1910, %1919, %5, %87, %80, %1, %1920) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1921 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %1922 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_884 = "equeue.launch"(%1910, %1921, %5, %94, %87, %1, %1922) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1923 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %1924 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_885 = "equeue.launch"(%1910, %1923, %5, %101, %94, %1, %1924) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1925 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %1926 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_886 = "equeue.launch"(%1910, %1925, %5, %108, %101, %1, %1926) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1927 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %1928 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_887 = "equeue.launch"(%1910, %1927, %5, %115, %108, %1, %1928) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1929 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %1930 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_888 = "equeue.launch"(%1910, %1929, %5, %122, %115, %1, %1930) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1931 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %1932 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_889 = "equeue.launch"(%1910, %1931, %5, %129, %122, %1, %1932) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1933 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %1934 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_890 = "equeue.launch"(%1910, %1933, %5, %136, %129, %1, %1934) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1935 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %1936 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_891 = "equeue.launch"(%1910, %1935, %5, %143, %136, %1, %1936) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1937 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %1938 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_892 = "equeue.launch"(%1910, %1937, %5, %150, %143, %1, %1938) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1939 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %1940 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_893 = "equeue.launch"(%1910, %1939, %5, %157, %150, %1, %1940) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1941 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_894 = "equeue.launch"(%1910, %1941, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %1942 = "equeue.control_start"() : () -> !equeue.signal
    %1943 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %1944 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_895 = "equeue.launch"(%1942, %1943, %5, %59, %1, %1944) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1945 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %1946 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_896 = "equeue.launch"(%1942, %1945, %5, %66, %59, %1, %1946) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1947 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %1948 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_897 = "equeue.launch"(%1942, %1947, %5, %73, %66, %1, %1948) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1949 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %1950 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_898 = "equeue.launch"(%1942, %1949, %5, %80, %73, %1, %1950) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1951 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %1952 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_899 = "equeue.launch"(%1942, %1951, %5, %87, %80, %1, %1952) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1953 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %1954 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_900 = "equeue.launch"(%1942, %1953, %5, %94, %87, %1, %1954) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1955 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %1956 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_901 = "equeue.launch"(%1942, %1955, %5, %101, %94, %1, %1956) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1957 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %1958 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_902 = "equeue.launch"(%1942, %1957, %5, %108, %101, %1, %1958) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1959 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %1960 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_903 = "equeue.launch"(%1942, %1959, %5, %115, %108, %1, %1960) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1961 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %1962 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_904 = "equeue.launch"(%1942, %1961, %5, %122, %115, %1, %1962) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1963 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %1964 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_905 = "equeue.launch"(%1942, %1963, %5, %129, %122, %1, %1964) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1965 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %1966 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_906 = "equeue.launch"(%1942, %1965, %5, %136, %129, %1, %1966) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1967 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %1968 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_907 = "equeue.launch"(%1942, %1967, %5, %143, %136, %1, %1968) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1969 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %1970 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_908 = "equeue.launch"(%1942, %1969, %5, %150, %143, %1, %1970) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1971 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %1972 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_909 = "equeue.launch"(%1942, %1971, %5, %157, %150, %1, %1972) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1973 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_910 = "equeue.launch"(%1942, %1973, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %1974 = "equeue.control_start"() : () -> !equeue.signal
    %1975 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %1976 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_911 = "equeue.launch"(%1974, %1975, %5, %59, %1, %1976) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1977 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %1978 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_912 = "equeue.launch"(%1974, %1977, %5, %66, %59, %1, %1978) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1979 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %1980 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_913 = "equeue.launch"(%1974, %1979, %5, %73, %66, %1, %1980) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1981 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %1982 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_914 = "equeue.launch"(%1974, %1981, %5, %80, %73, %1, %1982) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1983 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %1984 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_915 = "equeue.launch"(%1974, %1983, %5, %87, %80, %1, %1984) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1985 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %1986 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_916 = "equeue.launch"(%1974, %1985, %5, %94, %87, %1, %1986) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1987 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %1988 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_917 = "equeue.launch"(%1974, %1987, %5, %101, %94, %1, %1988) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1989 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %1990 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_918 = "equeue.launch"(%1974, %1989, %5, %108, %101, %1, %1990) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1991 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %1992 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_919 = "equeue.launch"(%1974, %1991, %5, %115, %108, %1, %1992) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1993 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %1994 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_920 = "equeue.launch"(%1974, %1993, %5, %122, %115, %1, %1994) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1995 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %1996 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_921 = "equeue.launch"(%1974, %1995, %5, %129, %122, %1, %1996) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1997 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %1998 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_922 = "equeue.launch"(%1974, %1997, %5, %136, %129, %1, %1998) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %1999 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %2000 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_923 = "equeue.launch"(%1974, %1999, %5, %143, %136, %1, %2000) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2001 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %2002 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_924 = "equeue.launch"(%1974, %2001, %5, %150, %143, %1, %2002) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2003 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %2004 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_925 = "equeue.launch"(%1974, %2003, %5, %157, %150, %1, %2004) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2005 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_926 = "equeue.launch"(%1974, %2005, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %2006 = "equeue.control_start"() : () -> !equeue.signal
    %2007 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %2008 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_927 = "equeue.launch"(%2006, %2007, %5, %59, %1, %2008) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2009 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %2010 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_928 = "equeue.launch"(%2006, %2009, %5, %66, %59, %1, %2010) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2011 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %2012 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_929 = "equeue.launch"(%2006, %2011, %5, %73, %66, %1, %2012) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2013 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %2014 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_930 = "equeue.launch"(%2006, %2013, %5, %80, %73, %1, %2014) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2015 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %2016 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_931 = "equeue.launch"(%2006, %2015, %5, %87, %80, %1, %2016) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2017 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %2018 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_932 = "equeue.launch"(%2006, %2017, %5, %94, %87, %1, %2018) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2019 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %2020 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_933 = "equeue.launch"(%2006, %2019, %5, %101, %94, %1, %2020) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2021 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %2022 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_934 = "equeue.launch"(%2006, %2021, %5, %108, %101, %1, %2022) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2023 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %2024 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_935 = "equeue.launch"(%2006, %2023, %5, %115, %108, %1, %2024) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2025 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %2026 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_936 = "equeue.launch"(%2006, %2025, %5, %122, %115, %1, %2026) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2027 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %2028 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_937 = "equeue.launch"(%2006, %2027, %5, %129, %122, %1, %2028) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2029 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %2030 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_938 = "equeue.launch"(%2006, %2029, %5, %136, %129, %1, %2030) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2031 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %2032 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_939 = "equeue.launch"(%2006, %2031, %5, %143, %136, %1, %2032) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2033 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %2034 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_940 = "equeue.launch"(%2006, %2033, %5, %150, %143, %1, %2034) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2035 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %2036 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_941 = "equeue.launch"(%2006, %2035, %5, %157, %150, %1, %2036) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2037 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_942 = "equeue.launch"(%2006, %2037, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %2038 = "equeue.control_start"() : () -> !equeue.signal
    %2039 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %2040 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_943 = "equeue.launch"(%2038, %2039, %5, %59, %1, %2040) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2041 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %2042 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_944 = "equeue.launch"(%2038, %2041, %5, %66, %59, %1, %2042) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2043 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %2044 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_945 = "equeue.launch"(%2038, %2043, %5, %73, %66, %1, %2044) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2045 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %2046 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_946 = "equeue.launch"(%2038, %2045, %5, %80, %73, %1, %2046) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2047 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %2048 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_947 = "equeue.launch"(%2038, %2047, %5, %87, %80, %1, %2048) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2049 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %2050 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_948 = "equeue.launch"(%2038, %2049, %5, %94, %87, %1, %2050) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2051 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %2052 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_949 = "equeue.launch"(%2038, %2051, %5, %101, %94, %1, %2052) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2053 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %2054 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_950 = "equeue.launch"(%2038, %2053, %5, %108, %101, %1, %2054) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2055 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %2056 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_951 = "equeue.launch"(%2038, %2055, %5, %115, %108, %1, %2056) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2057 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %2058 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_952 = "equeue.launch"(%2038, %2057, %5, %122, %115, %1, %2058) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2059 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %2060 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_953 = "equeue.launch"(%2038, %2059, %5, %129, %122, %1, %2060) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2061 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %2062 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_954 = "equeue.launch"(%2038, %2061, %5, %136, %129, %1, %2062) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2063 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %2064 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_955 = "equeue.launch"(%2038, %2063, %5, %143, %136, %1, %2064) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2065 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %2066 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_956 = "equeue.launch"(%2038, %2065, %5, %150, %143, %1, %2066) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2067 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %2068 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_957 = "equeue.launch"(%2038, %2067, %5, %157, %150, %1, %2068) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2069 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_958 = "equeue.launch"(%2038, %2069, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %2070 = "equeue.control_start"() : () -> !equeue.signal
    %2071 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %2072 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_959 = "equeue.launch"(%2070, %2071, %5, %59, %1, %2072) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2073 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %2074 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_960 = "equeue.launch"(%2070, %2073, %5, %66, %59, %1, %2074) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2075 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %2076 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_961 = "equeue.launch"(%2070, %2075, %5, %73, %66, %1, %2076) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2077 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %2078 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_962 = "equeue.launch"(%2070, %2077, %5, %80, %73, %1, %2078) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2079 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %2080 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_963 = "equeue.launch"(%2070, %2079, %5, %87, %80, %1, %2080) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2081 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %2082 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_964 = "equeue.launch"(%2070, %2081, %5, %94, %87, %1, %2082) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2083 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %2084 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_965 = "equeue.launch"(%2070, %2083, %5, %101, %94, %1, %2084) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2085 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %2086 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_966 = "equeue.launch"(%2070, %2085, %5, %108, %101, %1, %2086) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2087 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %2088 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_967 = "equeue.launch"(%2070, %2087, %5, %115, %108, %1, %2088) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2089 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %2090 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_968 = "equeue.launch"(%2070, %2089, %5, %122, %115, %1, %2090) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2091 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %2092 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_969 = "equeue.launch"(%2070, %2091, %5, %129, %122, %1, %2092) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2093 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %2094 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_970 = "equeue.launch"(%2070, %2093, %5, %136, %129, %1, %2094) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2095 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %2096 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_971 = "equeue.launch"(%2070, %2095, %5, %143, %136, %1, %2096) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2097 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %2098 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_972 = "equeue.launch"(%2070, %2097, %5, %150, %143, %1, %2098) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2099 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %2100 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_973 = "equeue.launch"(%2070, %2099, %5, %157, %150, %1, %2100) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2101 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_974 = "equeue.launch"(%2070, %2101, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %2102 = "equeue.control_start"() : () -> !equeue.signal
    %2103 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %2104 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_975 = "equeue.launch"(%2102, %2103, %5, %59, %1, %2104) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2105 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %2106 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_976 = "equeue.launch"(%2102, %2105, %5, %66, %59, %1, %2106) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2107 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %2108 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_977 = "equeue.launch"(%2102, %2107, %5, %73, %66, %1, %2108) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2109 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %2110 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_978 = "equeue.launch"(%2102, %2109, %5, %80, %73, %1, %2110) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2111 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %2112 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_979 = "equeue.launch"(%2102, %2111, %5, %87, %80, %1, %2112) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2113 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %2114 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_980 = "equeue.launch"(%2102, %2113, %5, %94, %87, %1, %2114) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2115 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %2116 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_981 = "equeue.launch"(%2102, %2115, %5, %101, %94, %1, %2116) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2117 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %2118 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_982 = "equeue.launch"(%2102, %2117, %5, %108, %101, %1, %2118) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2119 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %2120 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_983 = "equeue.launch"(%2102, %2119, %5, %115, %108, %1, %2120) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2121 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %2122 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_984 = "equeue.launch"(%2102, %2121, %5, %122, %115, %1, %2122) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2123 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %2124 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_985 = "equeue.launch"(%2102, %2123, %5, %129, %122, %1, %2124) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2125 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %2126 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_986 = "equeue.launch"(%2102, %2125, %5, %136, %129, %1, %2126) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2127 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %2128 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_987 = "equeue.launch"(%2102, %2127, %5, %143, %136, %1, %2128) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2129 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %2130 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_988 = "equeue.launch"(%2102, %2129, %5, %150, %143, %1, %2130) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2131 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %2132 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_989 = "equeue.launch"(%2102, %2131, %5, %157, %150, %1, %2132) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2133 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_990 = "equeue.launch"(%2102, %2133, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %2134 = "equeue.control_start"() : () -> !equeue.signal
    %2135 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %2136 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_991 = "equeue.launch"(%2134, %2135, %5, %59, %1, %2136) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2137 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %2138 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_992 = "equeue.launch"(%2134, %2137, %5, %66, %59, %1, %2138) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2139 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %2140 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_993 = "equeue.launch"(%2134, %2139, %5, %73, %66, %1, %2140) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2141 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %2142 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_994 = "equeue.launch"(%2134, %2141, %5, %80, %73, %1, %2142) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2143 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %2144 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_995 = "equeue.launch"(%2134, %2143, %5, %87, %80, %1, %2144) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2145 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %2146 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_996 = "equeue.launch"(%2134, %2145, %5, %94, %87, %1, %2146) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2147 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %2148 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_997 = "equeue.launch"(%2134, %2147, %5, %101, %94, %1, %2148) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2149 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %2150 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_998 = "equeue.launch"(%2134, %2149, %5, %108, %101, %1, %2150) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2151 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %2152 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_999 = "equeue.launch"(%2134, %2151, %5, %115, %108, %1, %2152) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2153 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %2154 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1000 = "equeue.launch"(%2134, %2153, %5, %122, %115, %1, %2154) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2155 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %2156 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1001 = "equeue.launch"(%2134, %2155, %5, %129, %122, %1, %2156) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2157 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %2158 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1002 = "equeue.launch"(%2134, %2157, %5, %136, %129, %1, %2158) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2159 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %2160 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1003 = "equeue.launch"(%2134, %2159, %5, %143, %136, %1, %2160) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2161 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %2162 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1004 = "equeue.launch"(%2134, %2161, %5, %150, %143, %1, %2162) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2163 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %2164 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1005 = "equeue.launch"(%2134, %2163, %5, %157, %150, %1, %2164) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2165 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1006 = "equeue.launch"(%2134, %2165, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %2166 = "equeue.control_start"() : () -> !equeue.signal
    %2167 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %2168 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1007 = "equeue.launch"(%2166, %2167, %5, %59, %1, %2168) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2169 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %2170 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1008 = "equeue.launch"(%2166, %2169, %5, %66, %59, %1, %2170) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2171 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %2172 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1009 = "equeue.launch"(%2166, %2171, %5, %73, %66, %1, %2172) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2173 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %2174 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1010 = "equeue.launch"(%2166, %2173, %5, %80, %73, %1, %2174) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2175 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %2176 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1011 = "equeue.launch"(%2166, %2175, %5, %87, %80, %1, %2176) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2177 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %2178 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1012 = "equeue.launch"(%2166, %2177, %5, %94, %87, %1, %2178) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2179 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %2180 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1013 = "equeue.launch"(%2166, %2179, %5, %101, %94, %1, %2180) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2181 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %2182 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1014 = "equeue.launch"(%2166, %2181, %5, %108, %101, %1, %2182) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2183 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %2184 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1015 = "equeue.launch"(%2166, %2183, %5, %115, %108, %1, %2184) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2185 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %2186 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1016 = "equeue.launch"(%2166, %2185, %5, %122, %115, %1, %2186) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2187 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %2188 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1017 = "equeue.launch"(%2166, %2187, %5, %129, %122, %1, %2188) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2189 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %2190 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1018 = "equeue.launch"(%2166, %2189, %5, %136, %129, %1, %2190) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2191 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %2192 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1019 = "equeue.launch"(%2166, %2191, %5, %143, %136, %1, %2192) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2193 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %2194 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1020 = "equeue.launch"(%2166, %2193, %5, %150, %143, %1, %2194) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2195 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %2196 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1021 = "equeue.launch"(%2166, %2195, %5, %157, %150, %1, %2196) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2197 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1022 = "equeue.launch"(%2166, %2197, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %2198 = "equeue.control_start"() : () -> !equeue.signal
    %2199 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %2200 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1023 = "equeue.launch"(%2198, %2199, %5, %59, %1, %2200) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2201 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %2202 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1024 = "equeue.launch"(%2198, %2201, %5, %66, %59, %1, %2202) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2203 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %2204 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1025 = "equeue.launch"(%2198, %2203, %5, %73, %66, %1, %2204) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2205 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %2206 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1026 = "equeue.launch"(%2198, %2205, %5, %80, %73, %1, %2206) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2207 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %2208 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1027 = "equeue.launch"(%2198, %2207, %5, %87, %80, %1, %2208) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2209 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %2210 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1028 = "equeue.launch"(%2198, %2209, %5, %94, %87, %1, %2210) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2211 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %2212 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1029 = "equeue.launch"(%2198, %2211, %5, %101, %94, %1, %2212) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2213 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %2214 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1030 = "equeue.launch"(%2198, %2213, %5, %108, %101, %1, %2214) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2215 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %2216 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1031 = "equeue.launch"(%2198, %2215, %5, %115, %108, %1, %2216) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2217 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %2218 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1032 = "equeue.launch"(%2198, %2217, %5, %122, %115, %1, %2218) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2219 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %2220 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1033 = "equeue.launch"(%2198, %2219, %5, %129, %122, %1, %2220) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2221 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %2222 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1034 = "equeue.launch"(%2198, %2221, %5, %136, %129, %1, %2222) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2223 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %2224 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1035 = "equeue.launch"(%2198, %2223, %5, %143, %136, %1, %2224) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2225 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %2226 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1036 = "equeue.launch"(%2198, %2225, %5, %150, %143, %1, %2226) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2227 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %2228 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1037 = "equeue.launch"(%2198, %2227, %5, %157, %150, %1, %2228) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2229 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1038 = "equeue.launch"(%2198, %2229, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %2230 = "equeue.control_start"() : () -> !equeue.signal
    %2231 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %2232 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1039 = "equeue.launch"(%2230, %2231, %5, %59, %1, %2232) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2233 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %2234 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1040 = "equeue.launch"(%2230, %2233, %5, %66, %59, %1, %2234) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2235 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %2236 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1041 = "equeue.launch"(%2230, %2235, %5, %73, %66, %1, %2236) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2237 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %2238 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1042 = "equeue.launch"(%2230, %2237, %5, %80, %73, %1, %2238) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2239 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %2240 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1043 = "equeue.launch"(%2230, %2239, %5, %87, %80, %1, %2240) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2241 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %2242 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1044 = "equeue.launch"(%2230, %2241, %5, %94, %87, %1, %2242) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2243 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %2244 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1045 = "equeue.launch"(%2230, %2243, %5, %101, %94, %1, %2244) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2245 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %2246 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1046 = "equeue.launch"(%2230, %2245, %5, %108, %101, %1, %2246) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2247 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %2248 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1047 = "equeue.launch"(%2230, %2247, %5, %115, %108, %1, %2248) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2249 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %2250 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1048 = "equeue.launch"(%2230, %2249, %5, %122, %115, %1, %2250) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2251 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %2252 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1049 = "equeue.launch"(%2230, %2251, %5, %129, %122, %1, %2252) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2253 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %2254 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1050 = "equeue.launch"(%2230, %2253, %5, %136, %129, %1, %2254) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2255 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %2256 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1051 = "equeue.launch"(%2230, %2255, %5, %143, %136, %1, %2256) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2257 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %2258 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1052 = "equeue.launch"(%2230, %2257, %5, %150, %143, %1, %2258) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2259 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %2260 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1053 = "equeue.launch"(%2230, %2259, %5, %157, %150, %1, %2260) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2261 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1054 = "equeue.launch"(%2230, %2261, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %2262 = "equeue.control_start"() : () -> !equeue.signal
    %2263 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %2264 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1055 = "equeue.launch"(%2262, %2263, %5, %59, %1, %2264) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2265 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %2266 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1056 = "equeue.launch"(%2262, %2265, %5, %66, %59, %1, %2266) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2267 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %2268 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1057 = "equeue.launch"(%2262, %2267, %5, %73, %66, %1, %2268) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2269 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %2270 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1058 = "equeue.launch"(%2262, %2269, %5, %80, %73, %1, %2270) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2271 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %2272 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1059 = "equeue.launch"(%2262, %2271, %5, %87, %80, %1, %2272) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2273 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %2274 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1060 = "equeue.launch"(%2262, %2273, %5, %94, %87, %1, %2274) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2275 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %2276 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1061 = "equeue.launch"(%2262, %2275, %5, %101, %94, %1, %2276) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2277 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %2278 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1062 = "equeue.launch"(%2262, %2277, %5, %108, %101, %1, %2278) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2279 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %2280 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1063 = "equeue.launch"(%2262, %2279, %5, %115, %108, %1, %2280) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2281 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %2282 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1064 = "equeue.launch"(%2262, %2281, %5, %122, %115, %1, %2282) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2283 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %2284 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1065 = "equeue.launch"(%2262, %2283, %5, %129, %122, %1, %2284) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2285 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %2286 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1066 = "equeue.launch"(%2262, %2285, %5, %136, %129, %1, %2286) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2287 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %2288 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1067 = "equeue.launch"(%2262, %2287, %5, %143, %136, %1, %2288) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2289 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %2290 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1068 = "equeue.launch"(%2262, %2289, %5, %150, %143, %1, %2290) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2291 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %2292 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1069 = "equeue.launch"(%2262, %2291, %5, %157, %150, %1, %2292) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2293 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1070 = "equeue.launch"(%2262, %2293, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %2294 = "equeue.control_start"() : () -> !equeue.signal
    %2295 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %2296 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1071 = "equeue.launch"(%2294, %2295, %5, %59, %1, %2296) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2297 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %2298 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1072 = "equeue.launch"(%2294, %2297, %5, %66, %59, %1, %2298) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2299 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %2300 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1073 = "equeue.launch"(%2294, %2299, %5, %73, %66, %1, %2300) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2301 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %2302 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1074 = "equeue.launch"(%2294, %2301, %5, %80, %73, %1, %2302) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2303 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %2304 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1075 = "equeue.launch"(%2294, %2303, %5, %87, %80, %1, %2304) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2305 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %2306 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1076 = "equeue.launch"(%2294, %2305, %5, %94, %87, %1, %2306) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2307 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %2308 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1077 = "equeue.launch"(%2294, %2307, %5, %101, %94, %1, %2308) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2309 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %2310 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1078 = "equeue.launch"(%2294, %2309, %5, %108, %101, %1, %2310) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2311 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %2312 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1079 = "equeue.launch"(%2294, %2311, %5, %115, %108, %1, %2312) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2313 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %2314 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1080 = "equeue.launch"(%2294, %2313, %5, %122, %115, %1, %2314) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2315 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %2316 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1081 = "equeue.launch"(%2294, %2315, %5, %129, %122, %1, %2316) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2317 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %2318 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1082 = "equeue.launch"(%2294, %2317, %5, %136, %129, %1, %2318) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2319 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %2320 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1083 = "equeue.launch"(%2294, %2319, %5, %143, %136, %1, %2320) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2321 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %2322 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1084 = "equeue.launch"(%2294, %2321, %5, %150, %143, %1, %2322) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2323 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %2324 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1085 = "equeue.launch"(%2294, %2323, %5, %157, %150, %1, %2324) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2325 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1086 = "equeue.launch"(%2294, %2325, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %2326 = "equeue.control_start"() : () -> !equeue.signal
    %2327 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %2328 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1087 = "equeue.launch"(%2326, %2327, %5, %59, %1, %2328) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2329 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %2330 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1088 = "equeue.launch"(%2326, %2329, %5, %66, %59, %1, %2330) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2331 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %2332 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1089 = "equeue.launch"(%2326, %2331, %5, %73, %66, %1, %2332) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2333 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %2334 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1090 = "equeue.launch"(%2326, %2333, %5, %80, %73, %1, %2334) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2335 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %2336 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1091 = "equeue.launch"(%2326, %2335, %5, %87, %80, %1, %2336) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2337 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %2338 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1092 = "equeue.launch"(%2326, %2337, %5, %94, %87, %1, %2338) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2339 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %2340 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1093 = "equeue.launch"(%2326, %2339, %5, %101, %94, %1, %2340) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2341 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %2342 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1094 = "equeue.launch"(%2326, %2341, %5, %108, %101, %1, %2342) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2343 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %2344 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1095 = "equeue.launch"(%2326, %2343, %5, %115, %108, %1, %2344) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2345 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %2346 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1096 = "equeue.launch"(%2326, %2345, %5, %122, %115, %1, %2346) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2347 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %2348 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1097 = "equeue.launch"(%2326, %2347, %5, %129, %122, %1, %2348) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2349 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %2350 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1098 = "equeue.launch"(%2326, %2349, %5, %136, %129, %1, %2350) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2351 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %2352 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1099 = "equeue.launch"(%2326, %2351, %5, %143, %136, %1, %2352) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2353 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %2354 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1100 = "equeue.launch"(%2326, %2353, %5, %150, %143, %1, %2354) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2355 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %2356 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1101 = "equeue.launch"(%2326, %2355, %5, %157, %150, %1, %2356) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2357 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1102 = "equeue.launch"(%2326, %2357, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %2358 = "equeue.control_start"() : () -> !equeue.signal
    %2359 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %2360 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1103 = "equeue.launch"(%2358, %2359, %5, %59, %1, %2360) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2361 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %2362 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1104 = "equeue.launch"(%2358, %2361, %5, %66, %59, %1, %2362) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2363 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %2364 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1105 = "equeue.launch"(%2358, %2363, %5, %73, %66, %1, %2364) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2365 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %2366 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1106 = "equeue.launch"(%2358, %2365, %5, %80, %73, %1, %2366) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2367 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %2368 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1107 = "equeue.launch"(%2358, %2367, %5, %87, %80, %1, %2368) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2369 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %2370 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1108 = "equeue.launch"(%2358, %2369, %5, %94, %87, %1, %2370) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2371 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %2372 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1109 = "equeue.launch"(%2358, %2371, %5, %101, %94, %1, %2372) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2373 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %2374 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1110 = "equeue.launch"(%2358, %2373, %5, %108, %101, %1, %2374) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2375 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %2376 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1111 = "equeue.launch"(%2358, %2375, %5, %115, %108, %1, %2376) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2377 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %2378 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1112 = "equeue.launch"(%2358, %2377, %5, %122, %115, %1, %2378) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2379 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %2380 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1113 = "equeue.launch"(%2358, %2379, %5, %129, %122, %1, %2380) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2381 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %2382 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1114 = "equeue.launch"(%2358, %2381, %5, %136, %129, %1, %2382) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2383 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %2384 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1115 = "equeue.launch"(%2358, %2383, %5, %143, %136, %1, %2384) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2385 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %2386 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1116 = "equeue.launch"(%2358, %2385, %5, %150, %143, %1, %2386) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2387 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %2388 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1117 = "equeue.launch"(%2358, %2387, %5, %157, %150, %1, %2388) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2389 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1118 = "equeue.launch"(%2358, %2389, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %2390 = "equeue.control_start"() : () -> !equeue.signal
    %2391 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %2392 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1119 = "equeue.launch"(%2390, %2391, %5, %59, %1, %2392) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2393 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %2394 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1120 = "equeue.launch"(%2390, %2393, %5, %66, %59, %1, %2394) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2395 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %2396 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1121 = "equeue.launch"(%2390, %2395, %5, %73, %66, %1, %2396) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2397 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %2398 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1122 = "equeue.launch"(%2390, %2397, %5, %80, %73, %1, %2398) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2399 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %2400 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1123 = "equeue.launch"(%2390, %2399, %5, %87, %80, %1, %2400) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2401 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %2402 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1124 = "equeue.launch"(%2390, %2401, %5, %94, %87, %1, %2402) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2403 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %2404 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1125 = "equeue.launch"(%2390, %2403, %5, %101, %94, %1, %2404) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2405 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %2406 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1126 = "equeue.launch"(%2390, %2405, %5, %108, %101, %1, %2406) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2407 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %2408 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1127 = "equeue.launch"(%2390, %2407, %5, %115, %108, %1, %2408) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2409 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %2410 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1128 = "equeue.launch"(%2390, %2409, %5, %122, %115, %1, %2410) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2411 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %2412 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1129 = "equeue.launch"(%2390, %2411, %5, %129, %122, %1, %2412) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2413 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %2414 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1130 = "equeue.launch"(%2390, %2413, %5, %136, %129, %1, %2414) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2415 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %2416 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1131 = "equeue.launch"(%2390, %2415, %5, %143, %136, %1, %2416) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2417 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %2418 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1132 = "equeue.launch"(%2390, %2417, %5, %150, %143, %1, %2418) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2419 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %2420 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1133 = "equeue.launch"(%2390, %2419, %5, %157, %150, %1, %2420) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2421 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1134 = "equeue.launch"(%2390, %2421, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %2422 = "equeue.control_start"() : () -> !equeue.signal
    %2423 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %2424 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1135 = "equeue.launch"(%2422, %2423, %5, %59, %1, %2424) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2425 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %2426 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1136 = "equeue.launch"(%2422, %2425, %5, %66, %59, %1, %2426) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2427 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %2428 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1137 = "equeue.launch"(%2422, %2427, %5, %73, %66, %1, %2428) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2429 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %2430 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1138 = "equeue.launch"(%2422, %2429, %5, %80, %73, %1, %2430) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2431 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %2432 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1139 = "equeue.launch"(%2422, %2431, %5, %87, %80, %1, %2432) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2433 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %2434 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1140 = "equeue.launch"(%2422, %2433, %5, %94, %87, %1, %2434) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2435 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %2436 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1141 = "equeue.launch"(%2422, %2435, %5, %101, %94, %1, %2436) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2437 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %2438 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1142 = "equeue.launch"(%2422, %2437, %5, %108, %101, %1, %2438) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2439 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %2440 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1143 = "equeue.launch"(%2422, %2439, %5, %115, %108, %1, %2440) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2441 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %2442 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1144 = "equeue.launch"(%2422, %2441, %5, %122, %115, %1, %2442) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2443 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %2444 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1145 = "equeue.launch"(%2422, %2443, %5, %129, %122, %1, %2444) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2445 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %2446 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1146 = "equeue.launch"(%2422, %2445, %5, %136, %129, %1, %2446) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2447 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %2448 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1147 = "equeue.launch"(%2422, %2447, %5, %143, %136, %1, %2448) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2449 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %2450 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1148 = "equeue.launch"(%2422, %2449, %5, %150, %143, %1, %2450) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2451 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %2452 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1149 = "equeue.launch"(%2422, %2451, %5, %157, %150, %1, %2452) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2453 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1150 = "equeue.launch"(%2422, %2453, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %2454 = "equeue.control_start"() : () -> !equeue.signal
    %2455 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %2456 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1151 = "equeue.launch"(%2454, %2455, %5, %59, %1, %2456) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2457 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %2458 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1152 = "equeue.launch"(%2454, %2457, %5, %66, %59, %1, %2458) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2459 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %2460 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1153 = "equeue.launch"(%2454, %2459, %5, %73, %66, %1, %2460) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2461 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %2462 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1154 = "equeue.launch"(%2454, %2461, %5, %80, %73, %1, %2462) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2463 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %2464 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1155 = "equeue.launch"(%2454, %2463, %5, %87, %80, %1, %2464) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2465 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %2466 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1156 = "equeue.launch"(%2454, %2465, %5, %94, %87, %1, %2466) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2467 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %2468 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1157 = "equeue.launch"(%2454, %2467, %5, %101, %94, %1, %2468) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2469 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %2470 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1158 = "equeue.launch"(%2454, %2469, %5, %108, %101, %1, %2470) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2471 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %2472 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1159 = "equeue.launch"(%2454, %2471, %5, %115, %108, %1, %2472) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2473 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %2474 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1160 = "equeue.launch"(%2454, %2473, %5, %122, %115, %1, %2474) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2475 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %2476 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1161 = "equeue.launch"(%2454, %2475, %5, %129, %122, %1, %2476) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2477 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %2478 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1162 = "equeue.launch"(%2454, %2477, %5, %136, %129, %1, %2478) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2479 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %2480 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1163 = "equeue.launch"(%2454, %2479, %5, %143, %136, %1, %2480) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2481 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %2482 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1164 = "equeue.launch"(%2454, %2481, %5, %150, %143, %1, %2482) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2483 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %2484 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1165 = "equeue.launch"(%2454, %2483, %5, %157, %150, %1, %2484) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2485 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1166 = "equeue.launch"(%2454, %2485, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %2486 = "equeue.control_start"() : () -> !equeue.signal
    %2487 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %2488 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1167 = "equeue.launch"(%2486, %2487, %5, %59, %1, %2488) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2489 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %2490 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1168 = "equeue.launch"(%2486, %2489, %5, %66, %59, %1, %2490) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2491 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %2492 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1169 = "equeue.launch"(%2486, %2491, %5, %73, %66, %1, %2492) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2493 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %2494 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1170 = "equeue.launch"(%2486, %2493, %5, %80, %73, %1, %2494) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2495 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %2496 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1171 = "equeue.launch"(%2486, %2495, %5, %87, %80, %1, %2496) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2497 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %2498 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1172 = "equeue.launch"(%2486, %2497, %5, %94, %87, %1, %2498) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2499 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %2500 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1173 = "equeue.launch"(%2486, %2499, %5, %101, %94, %1, %2500) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2501 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %2502 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1174 = "equeue.launch"(%2486, %2501, %5, %108, %101, %1, %2502) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2503 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %2504 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1175 = "equeue.launch"(%2486, %2503, %5, %115, %108, %1, %2504) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2505 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %2506 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1176 = "equeue.launch"(%2486, %2505, %5, %122, %115, %1, %2506) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2507 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %2508 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1177 = "equeue.launch"(%2486, %2507, %5, %129, %122, %1, %2508) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2509 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %2510 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1178 = "equeue.launch"(%2486, %2509, %5, %136, %129, %1, %2510) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2511 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %2512 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1179 = "equeue.launch"(%2486, %2511, %5, %143, %136, %1, %2512) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2513 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %2514 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1180 = "equeue.launch"(%2486, %2513, %5, %150, %143, %1, %2514) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2515 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %2516 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1181 = "equeue.launch"(%2486, %2515, %5, %157, %150, %1, %2516) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2517 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1182 = "equeue.launch"(%2486, %2517, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %2518 = "equeue.control_start"() : () -> !equeue.signal
    %2519 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %2520 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1183 = "equeue.launch"(%2518, %2519, %5, %59, %1, %2520) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2521 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %2522 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1184 = "equeue.launch"(%2518, %2521, %5, %66, %59, %1, %2522) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2523 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %2524 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1185 = "equeue.launch"(%2518, %2523, %5, %73, %66, %1, %2524) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2525 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %2526 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1186 = "equeue.launch"(%2518, %2525, %5, %80, %73, %1, %2526) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2527 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %2528 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1187 = "equeue.launch"(%2518, %2527, %5, %87, %80, %1, %2528) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2529 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %2530 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1188 = "equeue.launch"(%2518, %2529, %5, %94, %87, %1, %2530) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2531 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %2532 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1189 = "equeue.launch"(%2518, %2531, %5, %101, %94, %1, %2532) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2533 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %2534 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1190 = "equeue.launch"(%2518, %2533, %5, %108, %101, %1, %2534) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2535 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %2536 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1191 = "equeue.launch"(%2518, %2535, %5, %115, %108, %1, %2536) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2537 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %2538 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1192 = "equeue.launch"(%2518, %2537, %5, %122, %115, %1, %2538) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2539 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %2540 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1193 = "equeue.launch"(%2518, %2539, %5, %129, %122, %1, %2540) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2541 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %2542 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1194 = "equeue.launch"(%2518, %2541, %5, %136, %129, %1, %2542) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2543 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %2544 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1195 = "equeue.launch"(%2518, %2543, %5, %143, %136, %1, %2544) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2545 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %2546 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1196 = "equeue.launch"(%2518, %2545, %5, %150, %143, %1, %2546) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2547 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %2548 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1197 = "equeue.launch"(%2518, %2547, %5, %157, %150, %1, %2548) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2549 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1198 = "equeue.launch"(%2518, %2549, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %2550 = "equeue.control_start"() : () -> !equeue.signal
    %2551 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %2552 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1199 = "equeue.launch"(%2550, %2551, %5, %59, %1, %2552) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2553 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %2554 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1200 = "equeue.launch"(%2550, %2553, %5, %66, %59, %1, %2554) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2555 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %2556 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1201 = "equeue.launch"(%2550, %2555, %5, %73, %66, %1, %2556) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2557 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %2558 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1202 = "equeue.launch"(%2550, %2557, %5, %80, %73, %1, %2558) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2559 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %2560 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1203 = "equeue.launch"(%2550, %2559, %5, %87, %80, %1, %2560) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2561 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %2562 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1204 = "equeue.launch"(%2550, %2561, %5, %94, %87, %1, %2562) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2563 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %2564 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1205 = "equeue.launch"(%2550, %2563, %5, %101, %94, %1, %2564) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2565 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %2566 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1206 = "equeue.launch"(%2550, %2565, %5, %108, %101, %1, %2566) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2567 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %2568 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1207 = "equeue.launch"(%2550, %2567, %5, %115, %108, %1, %2568) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2569 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %2570 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1208 = "equeue.launch"(%2550, %2569, %5, %122, %115, %1, %2570) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2571 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %2572 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1209 = "equeue.launch"(%2550, %2571, %5, %129, %122, %1, %2572) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2573 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %2574 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1210 = "equeue.launch"(%2550, %2573, %5, %136, %129, %1, %2574) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2575 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %2576 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1211 = "equeue.launch"(%2550, %2575, %5, %143, %136, %1, %2576) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2577 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %2578 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1212 = "equeue.launch"(%2550, %2577, %5, %150, %143, %1, %2578) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2579 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %2580 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1213 = "equeue.launch"(%2550, %2579, %5, %157, %150, %1, %2580) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2581 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1214 = "equeue.launch"(%2550, %2581, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %2582 = "equeue.control_start"() : () -> !equeue.signal
    %2583 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %2584 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1215 = "equeue.launch"(%2582, %2583, %5, %59, %1, %2584) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2585 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %2586 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1216 = "equeue.launch"(%2582, %2585, %5, %66, %59, %1, %2586) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2587 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %2588 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1217 = "equeue.launch"(%2582, %2587, %5, %73, %66, %1, %2588) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2589 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %2590 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1218 = "equeue.launch"(%2582, %2589, %5, %80, %73, %1, %2590) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2591 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %2592 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1219 = "equeue.launch"(%2582, %2591, %5, %87, %80, %1, %2592) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2593 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %2594 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1220 = "equeue.launch"(%2582, %2593, %5, %94, %87, %1, %2594) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2595 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %2596 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1221 = "equeue.launch"(%2582, %2595, %5, %101, %94, %1, %2596) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2597 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %2598 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1222 = "equeue.launch"(%2582, %2597, %5, %108, %101, %1, %2598) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2599 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %2600 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1223 = "equeue.launch"(%2582, %2599, %5, %115, %108, %1, %2600) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2601 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %2602 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1224 = "equeue.launch"(%2582, %2601, %5, %122, %115, %1, %2602) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2603 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %2604 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1225 = "equeue.launch"(%2582, %2603, %5, %129, %122, %1, %2604) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2605 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %2606 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1226 = "equeue.launch"(%2582, %2605, %5, %136, %129, %1, %2606) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2607 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %2608 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1227 = "equeue.launch"(%2582, %2607, %5, %143, %136, %1, %2608) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2609 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %2610 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1228 = "equeue.launch"(%2582, %2609, %5, %150, %143, %1, %2610) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2611 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %2612 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1229 = "equeue.launch"(%2582, %2611, %5, %157, %150, %1, %2612) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2613 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1230 = "equeue.launch"(%2582, %2613, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %2614 = "equeue.control_start"() : () -> !equeue.signal
    %2615 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %2616 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1231 = "equeue.launch"(%2614, %2615, %5, %59, %1, %2616) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2617 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %2618 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1232 = "equeue.launch"(%2614, %2617, %5, %66, %59, %1, %2618) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2619 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %2620 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1233 = "equeue.launch"(%2614, %2619, %5, %73, %66, %1, %2620) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2621 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %2622 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1234 = "equeue.launch"(%2614, %2621, %5, %80, %73, %1, %2622) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2623 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %2624 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1235 = "equeue.launch"(%2614, %2623, %5, %87, %80, %1, %2624) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2625 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %2626 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1236 = "equeue.launch"(%2614, %2625, %5, %94, %87, %1, %2626) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2627 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %2628 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1237 = "equeue.launch"(%2614, %2627, %5, %101, %94, %1, %2628) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2629 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %2630 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1238 = "equeue.launch"(%2614, %2629, %5, %108, %101, %1, %2630) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2631 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %2632 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1239 = "equeue.launch"(%2614, %2631, %5, %115, %108, %1, %2632) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2633 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %2634 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1240 = "equeue.launch"(%2614, %2633, %5, %122, %115, %1, %2634) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2635 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %2636 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1241 = "equeue.launch"(%2614, %2635, %5, %129, %122, %1, %2636) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2637 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %2638 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1242 = "equeue.launch"(%2614, %2637, %5, %136, %129, %1, %2638) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2639 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %2640 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1243 = "equeue.launch"(%2614, %2639, %5, %143, %136, %1, %2640) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2641 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %2642 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1244 = "equeue.launch"(%2614, %2641, %5, %150, %143, %1, %2642) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2643 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %2644 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1245 = "equeue.launch"(%2614, %2643, %5, %157, %150, %1, %2644) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2645 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1246 = "equeue.launch"(%2614, %2645, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %2646 = "equeue.control_start"() : () -> !equeue.signal
    %2647 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %2648 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1247 = "equeue.launch"(%2646, %2647, %5, %59, %1, %2648) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2649 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %2650 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1248 = "equeue.launch"(%2646, %2649, %5, %66, %59, %1, %2650) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2651 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %2652 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1249 = "equeue.launch"(%2646, %2651, %5, %73, %66, %1, %2652) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2653 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %2654 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1250 = "equeue.launch"(%2646, %2653, %5, %80, %73, %1, %2654) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2655 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %2656 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1251 = "equeue.launch"(%2646, %2655, %5, %87, %80, %1, %2656) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2657 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %2658 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1252 = "equeue.launch"(%2646, %2657, %5, %94, %87, %1, %2658) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2659 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %2660 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1253 = "equeue.launch"(%2646, %2659, %5, %101, %94, %1, %2660) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2661 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %2662 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1254 = "equeue.launch"(%2646, %2661, %5, %108, %101, %1, %2662) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2663 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %2664 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1255 = "equeue.launch"(%2646, %2663, %5, %115, %108, %1, %2664) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2665 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %2666 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1256 = "equeue.launch"(%2646, %2665, %5, %122, %115, %1, %2666) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2667 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %2668 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1257 = "equeue.launch"(%2646, %2667, %5, %129, %122, %1, %2668) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2669 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %2670 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1258 = "equeue.launch"(%2646, %2669, %5, %136, %129, %1, %2670) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2671 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %2672 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1259 = "equeue.launch"(%2646, %2671, %5, %143, %136, %1, %2672) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2673 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %2674 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1260 = "equeue.launch"(%2646, %2673, %5, %150, %143, %1, %2674) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2675 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %2676 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1261 = "equeue.launch"(%2646, %2675, %5, %157, %150, %1, %2676) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2677 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1262 = "equeue.launch"(%2646, %2677, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %2678 = "equeue.control_start"() : () -> !equeue.signal
    %2679 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %2680 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1263 = "equeue.launch"(%2678, %2679, %5, %59, %1, %2680) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2681 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %2682 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1264 = "equeue.launch"(%2678, %2681, %5, %66, %59, %1, %2682) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2683 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %2684 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1265 = "equeue.launch"(%2678, %2683, %5, %73, %66, %1, %2684) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2685 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %2686 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1266 = "equeue.launch"(%2678, %2685, %5, %80, %73, %1, %2686) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2687 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %2688 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1267 = "equeue.launch"(%2678, %2687, %5, %87, %80, %1, %2688) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2689 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %2690 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1268 = "equeue.launch"(%2678, %2689, %5, %94, %87, %1, %2690) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2691 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %2692 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1269 = "equeue.launch"(%2678, %2691, %5, %101, %94, %1, %2692) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2693 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %2694 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1270 = "equeue.launch"(%2678, %2693, %5, %108, %101, %1, %2694) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2695 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %2696 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1271 = "equeue.launch"(%2678, %2695, %5, %115, %108, %1, %2696) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2697 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %2698 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1272 = "equeue.launch"(%2678, %2697, %5, %122, %115, %1, %2698) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2699 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %2700 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1273 = "equeue.launch"(%2678, %2699, %5, %129, %122, %1, %2700) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2701 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %2702 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1274 = "equeue.launch"(%2678, %2701, %5, %136, %129, %1, %2702) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2703 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %2704 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1275 = "equeue.launch"(%2678, %2703, %5, %143, %136, %1, %2704) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2705 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %2706 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1276 = "equeue.launch"(%2678, %2705, %5, %150, %143, %1, %2706) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2707 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %2708 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1277 = "equeue.launch"(%2678, %2707, %5, %157, %150, %1, %2708) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2709 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1278 = "equeue.launch"(%2678, %2709, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %2710 = "equeue.control_start"() : () -> !equeue.signal
    %2711 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %2712 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1279 = "equeue.launch"(%2710, %2711, %5, %59, %1, %2712) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2713 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %2714 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1280 = "equeue.launch"(%2710, %2713, %5, %66, %59, %1, %2714) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2715 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %2716 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1281 = "equeue.launch"(%2710, %2715, %5, %73, %66, %1, %2716) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2717 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %2718 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1282 = "equeue.launch"(%2710, %2717, %5, %80, %73, %1, %2718) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2719 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %2720 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1283 = "equeue.launch"(%2710, %2719, %5, %87, %80, %1, %2720) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2721 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %2722 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1284 = "equeue.launch"(%2710, %2721, %5, %94, %87, %1, %2722) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2723 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %2724 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1285 = "equeue.launch"(%2710, %2723, %5, %101, %94, %1, %2724) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2725 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %2726 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1286 = "equeue.launch"(%2710, %2725, %5, %108, %101, %1, %2726) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2727 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %2728 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1287 = "equeue.launch"(%2710, %2727, %5, %115, %108, %1, %2728) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2729 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %2730 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1288 = "equeue.launch"(%2710, %2729, %5, %122, %115, %1, %2730) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2731 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %2732 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1289 = "equeue.launch"(%2710, %2731, %5, %129, %122, %1, %2732) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2733 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %2734 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1290 = "equeue.launch"(%2710, %2733, %5, %136, %129, %1, %2734) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2735 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %2736 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1291 = "equeue.launch"(%2710, %2735, %5, %143, %136, %1, %2736) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2737 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %2738 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1292 = "equeue.launch"(%2710, %2737, %5, %150, %143, %1, %2738) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2739 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %2740 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1293 = "equeue.launch"(%2710, %2739, %5, %157, %150, %1, %2740) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2741 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1294 = "equeue.launch"(%2710, %2741, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %2742 = "equeue.control_start"() : () -> !equeue.signal
    %2743 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %2744 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1295 = "equeue.launch"(%2742, %2743, %5, %59, %1, %2744) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2745 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %2746 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1296 = "equeue.launch"(%2742, %2745, %5, %66, %59, %1, %2746) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2747 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %2748 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1297 = "equeue.launch"(%2742, %2747, %5, %73, %66, %1, %2748) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2749 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %2750 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1298 = "equeue.launch"(%2742, %2749, %5, %80, %73, %1, %2750) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2751 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %2752 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1299 = "equeue.launch"(%2742, %2751, %5, %87, %80, %1, %2752) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2753 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %2754 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1300 = "equeue.launch"(%2742, %2753, %5, %94, %87, %1, %2754) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2755 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %2756 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1301 = "equeue.launch"(%2742, %2755, %5, %101, %94, %1, %2756) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2757 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %2758 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1302 = "equeue.launch"(%2742, %2757, %5, %108, %101, %1, %2758) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2759 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %2760 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1303 = "equeue.launch"(%2742, %2759, %5, %115, %108, %1, %2760) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2761 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %2762 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1304 = "equeue.launch"(%2742, %2761, %5, %122, %115, %1, %2762) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2763 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %2764 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1305 = "equeue.launch"(%2742, %2763, %5, %129, %122, %1, %2764) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2765 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %2766 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1306 = "equeue.launch"(%2742, %2765, %5, %136, %129, %1, %2766) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2767 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %2768 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1307 = "equeue.launch"(%2742, %2767, %5, %143, %136, %1, %2768) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2769 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %2770 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1308 = "equeue.launch"(%2742, %2769, %5, %150, %143, %1, %2770) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2771 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %2772 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1309 = "equeue.launch"(%2742, %2771, %5, %157, %150, %1, %2772) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2773 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1310 = "equeue.launch"(%2742, %2773, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %2774 = "equeue.control_start"() : () -> !equeue.signal
    %2775 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %2776 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1311 = "equeue.launch"(%2774, %2775, %5, %59, %1, %2776) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2777 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %2778 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1312 = "equeue.launch"(%2774, %2777, %5, %66, %59, %1, %2778) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2779 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %2780 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1313 = "equeue.launch"(%2774, %2779, %5, %73, %66, %1, %2780) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2781 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %2782 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1314 = "equeue.launch"(%2774, %2781, %5, %80, %73, %1, %2782) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2783 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %2784 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1315 = "equeue.launch"(%2774, %2783, %5, %87, %80, %1, %2784) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2785 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %2786 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1316 = "equeue.launch"(%2774, %2785, %5, %94, %87, %1, %2786) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2787 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %2788 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1317 = "equeue.launch"(%2774, %2787, %5, %101, %94, %1, %2788) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2789 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %2790 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1318 = "equeue.launch"(%2774, %2789, %5, %108, %101, %1, %2790) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2791 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %2792 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1319 = "equeue.launch"(%2774, %2791, %5, %115, %108, %1, %2792) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2793 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %2794 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1320 = "equeue.launch"(%2774, %2793, %5, %122, %115, %1, %2794) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2795 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %2796 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1321 = "equeue.launch"(%2774, %2795, %5, %129, %122, %1, %2796) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2797 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %2798 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1322 = "equeue.launch"(%2774, %2797, %5, %136, %129, %1, %2798) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2799 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %2800 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1323 = "equeue.launch"(%2774, %2799, %5, %143, %136, %1, %2800) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2801 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %2802 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1324 = "equeue.launch"(%2774, %2801, %5, %150, %143, %1, %2802) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2803 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %2804 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1325 = "equeue.launch"(%2774, %2803, %5, %157, %150, %1, %2804) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2805 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1326 = "equeue.launch"(%2774, %2805, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %2806 = "equeue.control_start"() : () -> !equeue.signal
    %2807 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %2808 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1327 = "equeue.launch"(%2806, %2807, %5, %59, %1, %2808) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2809 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %2810 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1328 = "equeue.launch"(%2806, %2809, %5, %66, %59, %1, %2810) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2811 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %2812 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1329 = "equeue.launch"(%2806, %2811, %5, %73, %66, %1, %2812) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2813 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %2814 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1330 = "equeue.launch"(%2806, %2813, %5, %80, %73, %1, %2814) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2815 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %2816 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1331 = "equeue.launch"(%2806, %2815, %5, %87, %80, %1, %2816) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2817 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %2818 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1332 = "equeue.launch"(%2806, %2817, %5, %94, %87, %1, %2818) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2819 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %2820 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1333 = "equeue.launch"(%2806, %2819, %5, %101, %94, %1, %2820) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2821 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %2822 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1334 = "equeue.launch"(%2806, %2821, %5, %108, %101, %1, %2822) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2823 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %2824 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1335 = "equeue.launch"(%2806, %2823, %5, %115, %108, %1, %2824) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2825 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %2826 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1336 = "equeue.launch"(%2806, %2825, %5, %122, %115, %1, %2826) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2827 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %2828 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1337 = "equeue.launch"(%2806, %2827, %5, %129, %122, %1, %2828) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2829 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %2830 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1338 = "equeue.launch"(%2806, %2829, %5, %136, %129, %1, %2830) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2831 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %2832 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1339 = "equeue.launch"(%2806, %2831, %5, %143, %136, %1, %2832) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2833 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %2834 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1340 = "equeue.launch"(%2806, %2833, %5, %150, %143, %1, %2834) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2835 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %2836 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1341 = "equeue.launch"(%2806, %2835, %5, %157, %150, %1, %2836) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2837 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1342 = "equeue.launch"(%2806, %2837, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %2838 = "equeue.control_start"() : () -> !equeue.signal
    %2839 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %2840 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1343 = "equeue.launch"(%2838, %2839, %5, %59, %1, %2840) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2841 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %2842 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1344 = "equeue.launch"(%2838, %2841, %5, %66, %59, %1, %2842) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2843 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %2844 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1345 = "equeue.launch"(%2838, %2843, %5, %73, %66, %1, %2844) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2845 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %2846 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1346 = "equeue.launch"(%2838, %2845, %5, %80, %73, %1, %2846) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2847 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %2848 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1347 = "equeue.launch"(%2838, %2847, %5, %87, %80, %1, %2848) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2849 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %2850 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1348 = "equeue.launch"(%2838, %2849, %5, %94, %87, %1, %2850) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2851 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %2852 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1349 = "equeue.launch"(%2838, %2851, %5, %101, %94, %1, %2852) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2853 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %2854 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1350 = "equeue.launch"(%2838, %2853, %5, %108, %101, %1, %2854) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2855 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %2856 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1351 = "equeue.launch"(%2838, %2855, %5, %115, %108, %1, %2856) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2857 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %2858 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1352 = "equeue.launch"(%2838, %2857, %5, %122, %115, %1, %2858) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2859 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %2860 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1353 = "equeue.launch"(%2838, %2859, %5, %129, %122, %1, %2860) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2861 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %2862 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1354 = "equeue.launch"(%2838, %2861, %5, %136, %129, %1, %2862) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2863 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %2864 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1355 = "equeue.launch"(%2838, %2863, %5, %143, %136, %1, %2864) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2865 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %2866 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1356 = "equeue.launch"(%2838, %2865, %5, %150, %143, %1, %2866) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2867 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %2868 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1357 = "equeue.launch"(%2838, %2867, %5, %157, %150, %1, %2868) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2869 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1358 = "equeue.launch"(%2838, %2869, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %2870 = "equeue.control_start"() : () -> !equeue.signal
    %2871 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %2872 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1359 = "equeue.launch"(%2870, %2871, %5, %59, %1, %2872) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2873 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %2874 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1360 = "equeue.launch"(%2870, %2873, %5, %66, %59, %1, %2874) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2875 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %2876 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1361 = "equeue.launch"(%2870, %2875, %5, %73, %66, %1, %2876) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2877 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %2878 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1362 = "equeue.launch"(%2870, %2877, %5, %80, %73, %1, %2878) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2879 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %2880 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1363 = "equeue.launch"(%2870, %2879, %5, %87, %80, %1, %2880) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2881 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %2882 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1364 = "equeue.launch"(%2870, %2881, %5, %94, %87, %1, %2882) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2883 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %2884 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1365 = "equeue.launch"(%2870, %2883, %5, %101, %94, %1, %2884) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2885 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %2886 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1366 = "equeue.launch"(%2870, %2885, %5, %108, %101, %1, %2886) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2887 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %2888 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1367 = "equeue.launch"(%2870, %2887, %5, %115, %108, %1, %2888) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2889 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %2890 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1368 = "equeue.launch"(%2870, %2889, %5, %122, %115, %1, %2890) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2891 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %2892 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1369 = "equeue.launch"(%2870, %2891, %5, %129, %122, %1, %2892) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2893 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %2894 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1370 = "equeue.launch"(%2870, %2893, %5, %136, %129, %1, %2894) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2895 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %2896 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1371 = "equeue.launch"(%2870, %2895, %5, %143, %136, %1, %2896) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2897 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %2898 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1372 = "equeue.launch"(%2870, %2897, %5, %150, %143, %1, %2898) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2899 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %2900 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1373 = "equeue.launch"(%2870, %2899, %5, %157, %150, %1, %2900) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2901 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1374 = "equeue.launch"(%2870, %2901, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %2902 = "equeue.control_start"() : () -> !equeue.signal
    %2903 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %2904 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1375 = "equeue.launch"(%2902, %2903, %5, %59, %1, %2904) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2905 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %2906 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1376 = "equeue.launch"(%2902, %2905, %5, %66, %59, %1, %2906) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2907 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %2908 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1377 = "equeue.launch"(%2902, %2907, %5, %73, %66, %1, %2908) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2909 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %2910 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1378 = "equeue.launch"(%2902, %2909, %5, %80, %73, %1, %2910) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2911 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %2912 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1379 = "equeue.launch"(%2902, %2911, %5, %87, %80, %1, %2912) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2913 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %2914 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1380 = "equeue.launch"(%2902, %2913, %5, %94, %87, %1, %2914) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2915 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %2916 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1381 = "equeue.launch"(%2902, %2915, %5, %101, %94, %1, %2916) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2917 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %2918 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1382 = "equeue.launch"(%2902, %2917, %5, %108, %101, %1, %2918) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2919 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %2920 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1383 = "equeue.launch"(%2902, %2919, %5, %115, %108, %1, %2920) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2921 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %2922 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1384 = "equeue.launch"(%2902, %2921, %5, %122, %115, %1, %2922) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2923 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %2924 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1385 = "equeue.launch"(%2902, %2923, %5, %129, %122, %1, %2924) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2925 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %2926 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1386 = "equeue.launch"(%2902, %2925, %5, %136, %129, %1, %2926) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2927 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %2928 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1387 = "equeue.launch"(%2902, %2927, %5, %143, %136, %1, %2928) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2929 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %2930 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1388 = "equeue.launch"(%2902, %2929, %5, %150, %143, %1, %2930) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2931 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %2932 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1389 = "equeue.launch"(%2902, %2931, %5, %157, %150, %1, %2932) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2933 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1390 = "equeue.launch"(%2902, %2933, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %2934 = "equeue.control_start"() : () -> !equeue.signal
    %2935 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %2936 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1391 = "equeue.launch"(%2934, %2935, %5, %59, %1, %2936) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2937 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %2938 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1392 = "equeue.launch"(%2934, %2937, %5, %66, %59, %1, %2938) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2939 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %2940 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1393 = "equeue.launch"(%2934, %2939, %5, %73, %66, %1, %2940) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2941 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %2942 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1394 = "equeue.launch"(%2934, %2941, %5, %80, %73, %1, %2942) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2943 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %2944 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1395 = "equeue.launch"(%2934, %2943, %5, %87, %80, %1, %2944) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2945 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %2946 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1396 = "equeue.launch"(%2934, %2945, %5, %94, %87, %1, %2946) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2947 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %2948 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1397 = "equeue.launch"(%2934, %2947, %5, %101, %94, %1, %2948) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2949 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %2950 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1398 = "equeue.launch"(%2934, %2949, %5, %108, %101, %1, %2950) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2951 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %2952 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1399 = "equeue.launch"(%2934, %2951, %5, %115, %108, %1, %2952) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2953 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %2954 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1400 = "equeue.launch"(%2934, %2953, %5, %122, %115, %1, %2954) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2955 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %2956 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1401 = "equeue.launch"(%2934, %2955, %5, %129, %122, %1, %2956) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2957 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %2958 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1402 = "equeue.launch"(%2934, %2957, %5, %136, %129, %1, %2958) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2959 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %2960 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1403 = "equeue.launch"(%2934, %2959, %5, %143, %136, %1, %2960) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2961 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %2962 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1404 = "equeue.launch"(%2934, %2961, %5, %150, %143, %1, %2962) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2963 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %2964 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1405 = "equeue.launch"(%2934, %2963, %5, %157, %150, %1, %2964) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2965 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1406 = "equeue.launch"(%2934, %2965, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %2966 = "equeue.control_start"() : () -> !equeue.signal
    %2967 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %2968 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1407 = "equeue.launch"(%2966, %2967, %5, %59, %1, %2968) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2969 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %2970 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1408 = "equeue.launch"(%2966, %2969, %5, %66, %59, %1, %2970) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2971 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %2972 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1409 = "equeue.launch"(%2966, %2971, %5, %73, %66, %1, %2972) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2973 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %2974 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1410 = "equeue.launch"(%2966, %2973, %5, %80, %73, %1, %2974) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2975 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %2976 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1411 = "equeue.launch"(%2966, %2975, %5, %87, %80, %1, %2976) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2977 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %2978 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1412 = "equeue.launch"(%2966, %2977, %5, %94, %87, %1, %2978) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2979 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %2980 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1413 = "equeue.launch"(%2966, %2979, %5, %101, %94, %1, %2980) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2981 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %2982 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1414 = "equeue.launch"(%2966, %2981, %5, %108, %101, %1, %2982) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2983 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %2984 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1415 = "equeue.launch"(%2966, %2983, %5, %115, %108, %1, %2984) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2985 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %2986 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1416 = "equeue.launch"(%2966, %2985, %5, %122, %115, %1, %2986) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2987 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %2988 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1417 = "equeue.launch"(%2966, %2987, %5, %129, %122, %1, %2988) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2989 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %2990 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1418 = "equeue.launch"(%2966, %2989, %5, %136, %129, %1, %2990) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2991 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %2992 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1419 = "equeue.launch"(%2966, %2991, %5, %143, %136, %1, %2992) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2993 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %2994 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1420 = "equeue.launch"(%2966, %2993, %5, %150, %143, %1, %2994) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2995 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %2996 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1421 = "equeue.launch"(%2966, %2995, %5, %157, %150, %1, %2996) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %2997 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1422 = "equeue.launch"(%2966, %2997, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %2998 = "equeue.control_start"() : () -> !equeue.signal
    %2999 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %3000 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1423 = "equeue.launch"(%2998, %2999, %5, %59, %1, %3000) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3001 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %3002 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1424 = "equeue.launch"(%2998, %3001, %5, %66, %59, %1, %3002) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3003 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %3004 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1425 = "equeue.launch"(%2998, %3003, %5, %73, %66, %1, %3004) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3005 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %3006 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1426 = "equeue.launch"(%2998, %3005, %5, %80, %73, %1, %3006) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3007 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %3008 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1427 = "equeue.launch"(%2998, %3007, %5, %87, %80, %1, %3008) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3009 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %3010 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1428 = "equeue.launch"(%2998, %3009, %5, %94, %87, %1, %3010) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3011 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %3012 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1429 = "equeue.launch"(%2998, %3011, %5, %101, %94, %1, %3012) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3013 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %3014 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1430 = "equeue.launch"(%2998, %3013, %5, %108, %101, %1, %3014) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3015 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %3016 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1431 = "equeue.launch"(%2998, %3015, %5, %115, %108, %1, %3016) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3017 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %3018 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1432 = "equeue.launch"(%2998, %3017, %5, %122, %115, %1, %3018) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3019 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %3020 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1433 = "equeue.launch"(%2998, %3019, %5, %129, %122, %1, %3020) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3021 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %3022 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1434 = "equeue.launch"(%2998, %3021, %5, %136, %129, %1, %3022) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3023 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %3024 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1435 = "equeue.launch"(%2998, %3023, %5, %143, %136, %1, %3024) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3025 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %3026 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1436 = "equeue.launch"(%2998, %3025, %5, %150, %143, %1, %3026) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3027 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %3028 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1437 = "equeue.launch"(%2998, %3027, %5, %157, %150, %1, %3028) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3029 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1438 = "equeue.launch"(%2998, %3029, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %3030 = "equeue.control_start"() : () -> !equeue.signal
    %3031 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %3032 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1439 = "equeue.launch"(%3030, %3031, %5, %59, %1, %3032) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3033 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %3034 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1440 = "equeue.launch"(%3030, %3033, %5, %66, %59, %1, %3034) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3035 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %3036 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1441 = "equeue.launch"(%3030, %3035, %5, %73, %66, %1, %3036) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3037 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %3038 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1442 = "equeue.launch"(%3030, %3037, %5, %80, %73, %1, %3038) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3039 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %3040 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1443 = "equeue.launch"(%3030, %3039, %5, %87, %80, %1, %3040) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3041 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %3042 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1444 = "equeue.launch"(%3030, %3041, %5, %94, %87, %1, %3042) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3043 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %3044 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1445 = "equeue.launch"(%3030, %3043, %5, %101, %94, %1, %3044) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3045 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %3046 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1446 = "equeue.launch"(%3030, %3045, %5, %108, %101, %1, %3046) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3047 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %3048 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1447 = "equeue.launch"(%3030, %3047, %5, %115, %108, %1, %3048) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3049 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %3050 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1448 = "equeue.launch"(%3030, %3049, %5, %122, %115, %1, %3050) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3051 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %3052 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1449 = "equeue.launch"(%3030, %3051, %5, %129, %122, %1, %3052) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3053 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %3054 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1450 = "equeue.launch"(%3030, %3053, %5, %136, %129, %1, %3054) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3055 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %3056 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1451 = "equeue.launch"(%3030, %3055, %5, %143, %136, %1, %3056) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3057 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %3058 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1452 = "equeue.launch"(%3030, %3057, %5, %150, %143, %1, %3058) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3059 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %3060 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1453 = "equeue.launch"(%3030, %3059, %5, %157, %150, %1, %3060) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3061 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1454 = "equeue.launch"(%3030, %3061, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %3062 = "equeue.control_start"() : () -> !equeue.signal
    %3063 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %3064 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1455 = "equeue.launch"(%3062, %3063, %5, %59, %1, %3064) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3065 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %3066 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1456 = "equeue.launch"(%3062, %3065, %5, %66, %59, %1, %3066) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3067 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %3068 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1457 = "equeue.launch"(%3062, %3067, %5, %73, %66, %1, %3068) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3069 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %3070 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1458 = "equeue.launch"(%3062, %3069, %5, %80, %73, %1, %3070) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3071 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %3072 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1459 = "equeue.launch"(%3062, %3071, %5, %87, %80, %1, %3072) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3073 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %3074 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1460 = "equeue.launch"(%3062, %3073, %5, %94, %87, %1, %3074) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3075 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %3076 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1461 = "equeue.launch"(%3062, %3075, %5, %101, %94, %1, %3076) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3077 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %3078 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1462 = "equeue.launch"(%3062, %3077, %5, %108, %101, %1, %3078) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3079 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %3080 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1463 = "equeue.launch"(%3062, %3079, %5, %115, %108, %1, %3080) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3081 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %3082 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1464 = "equeue.launch"(%3062, %3081, %5, %122, %115, %1, %3082) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3083 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %3084 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1465 = "equeue.launch"(%3062, %3083, %5, %129, %122, %1, %3084) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3085 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %3086 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1466 = "equeue.launch"(%3062, %3085, %5, %136, %129, %1, %3086) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3087 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %3088 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1467 = "equeue.launch"(%3062, %3087, %5, %143, %136, %1, %3088) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3089 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %3090 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1468 = "equeue.launch"(%3062, %3089, %5, %150, %143, %1, %3090) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3091 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %3092 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1469 = "equeue.launch"(%3062, %3091, %5, %157, %150, %1, %3092) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3093 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1470 = "equeue.launch"(%3062, %3093, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %3094 = "equeue.control_start"() : () -> !equeue.signal
    %3095 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %3096 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1471 = "equeue.launch"(%3094, %3095, %5, %59, %1, %3096) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3097 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %3098 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1472 = "equeue.launch"(%3094, %3097, %5, %66, %59, %1, %3098) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3099 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %3100 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1473 = "equeue.launch"(%3094, %3099, %5, %73, %66, %1, %3100) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3101 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %3102 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1474 = "equeue.launch"(%3094, %3101, %5, %80, %73, %1, %3102) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3103 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %3104 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1475 = "equeue.launch"(%3094, %3103, %5, %87, %80, %1, %3104) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3105 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %3106 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1476 = "equeue.launch"(%3094, %3105, %5, %94, %87, %1, %3106) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3107 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %3108 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1477 = "equeue.launch"(%3094, %3107, %5, %101, %94, %1, %3108) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3109 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %3110 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1478 = "equeue.launch"(%3094, %3109, %5, %108, %101, %1, %3110) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3111 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %3112 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1479 = "equeue.launch"(%3094, %3111, %5, %115, %108, %1, %3112) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3113 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %3114 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1480 = "equeue.launch"(%3094, %3113, %5, %122, %115, %1, %3114) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3115 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %3116 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1481 = "equeue.launch"(%3094, %3115, %5, %129, %122, %1, %3116) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3117 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %3118 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1482 = "equeue.launch"(%3094, %3117, %5, %136, %129, %1, %3118) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3119 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %3120 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1483 = "equeue.launch"(%3094, %3119, %5, %143, %136, %1, %3120) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3121 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %3122 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1484 = "equeue.launch"(%3094, %3121, %5, %150, %143, %1, %3122) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3123 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %3124 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1485 = "equeue.launch"(%3094, %3123, %5, %157, %150, %1, %3124) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3125 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1486 = "equeue.launch"(%3094, %3125, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %3126 = "equeue.control_start"() : () -> !equeue.signal
    %3127 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %3128 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1487 = "equeue.launch"(%3126, %3127, %5, %59, %1, %3128) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3129 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %3130 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1488 = "equeue.launch"(%3126, %3129, %5, %66, %59, %1, %3130) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3131 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %3132 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1489 = "equeue.launch"(%3126, %3131, %5, %73, %66, %1, %3132) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3133 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %3134 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1490 = "equeue.launch"(%3126, %3133, %5, %80, %73, %1, %3134) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3135 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %3136 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1491 = "equeue.launch"(%3126, %3135, %5, %87, %80, %1, %3136) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3137 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %3138 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1492 = "equeue.launch"(%3126, %3137, %5, %94, %87, %1, %3138) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3139 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %3140 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1493 = "equeue.launch"(%3126, %3139, %5, %101, %94, %1, %3140) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3141 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %3142 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1494 = "equeue.launch"(%3126, %3141, %5, %108, %101, %1, %3142) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3143 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %3144 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1495 = "equeue.launch"(%3126, %3143, %5, %115, %108, %1, %3144) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3145 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %3146 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1496 = "equeue.launch"(%3126, %3145, %5, %122, %115, %1, %3146) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3147 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %3148 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1497 = "equeue.launch"(%3126, %3147, %5, %129, %122, %1, %3148) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3149 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %3150 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1498 = "equeue.launch"(%3126, %3149, %5, %136, %129, %1, %3150) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3151 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %3152 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1499 = "equeue.launch"(%3126, %3151, %5, %143, %136, %1, %3152) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3153 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %3154 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1500 = "equeue.launch"(%3126, %3153, %5, %150, %143, %1, %3154) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3155 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %3156 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1501 = "equeue.launch"(%3126, %3155, %5, %157, %150, %1, %3156) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3157 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1502 = "equeue.launch"(%3126, %3157, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %3158 = "equeue.control_start"() : () -> !equeue.signal
    %3159 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %3160 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1503 = "equeue.launch"(%3158, %3159, %5, %59, %1, %3160) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3161 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %3162 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1504 = "equeue.launch"(%3158, %3161, %5, %66, %59, %1, %3162) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3163 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %3164 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1505 = "equeue.launch"(%3158, %3163, %5, %73, %66, %1, %3164) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3165 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %3166 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1506 = "equeue.launch"(%3158, %3165, %5, %80, %73, %1, %3166) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3167 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %3168 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1507 = "equeue.launch"(%3158, %3167, %5, %87, %80, %1, %3168) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3169 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %3170 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1508 = "equeue.launch"(%3158, %3169, %5, %94, %87, %1, %3170) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3171 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %3172 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1509 = "equeue.launch"(%3158, %3171, %5, %101, %94, %1, %3172) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3173 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %3174 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1510 = "equeue.launch"(%3158, %3173, %5, %108, %101, %1, %3174) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3175 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %3176 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1511 = "equeue.launch"(%3158, %3175, %5, %115, %108, %1, %3176) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3177 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %3178 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1512 = "equeue.launch"(%3158, %3177, %5, %122, %115, %1, %3178) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3179 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %3180 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1513 = "equeue.launch"(%3158, %3179, %5, %129, %122, %1, %3180) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3181 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %3182 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1514 = "equeue.launch"(%3158, %3181, %5, %136, %129, %1, %3182) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3183 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %3184 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1515 = "equeue.launch"(%3158, %3183, %5, %143, %136, %1, %3184) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3185 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %3186 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1516 = "equeue.launch"(%3158, %3185, %5, %150, %143, %1, %3186) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3187 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %3188 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1517 = "equeue.launch"(%3158, %3187, %5, %157, %150, %1, %3188) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3189 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1518 = "equeue.launch"(%3158, %3189, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %3190 = "equeue.control_start"() : () -> !equeue.signal
    %3191 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %3192 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1519 = "equeue.launch"(%3190, %3191, %5, %59, %1, %3192) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3193 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %3194 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1520 = "equeue.launch"(%3190, %3193, %5, %66, %59, %1, %3194) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3195 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %3196 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1521 = "equeue.launch"(%3190, %3195, %5, %73, %66, %1, %3196) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3197 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %3198 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1522 = "equeue.launch"(%3190, %3197, %5, %80, %73, %1, %3198) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3199 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %3200 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1523 = "equeue.launch"(%3190, %3199, %5, %87, %80, %1, %3200) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3201 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %3202 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1524 = "equeue.launch"(%3190, %3201, %5, %94, %87, %1, %3202) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3203 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %3204 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1525 = "equeue.launch"(%3190, %3203, %5, %101, %94, %1, %3204) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3205 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %3206 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1526 = "equeue.launch"(%3190, %3205, %5, %108, %101, %1, %3206) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3207 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %3208 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1527 = "equeue.launch"(%3190, %3207, %5, %115, %108, %1, %3208) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3209 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %3210 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1528 = "equeue.launch"(%3190, %3209, %5, %122, %115, %1, %3210) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3211 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %3212 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1529 = "equeue.launch"(%3190, %3211, %5, %129, %122, %1, %3212) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3213 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %3214 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1530 = "equeue.launch"(%3190, %3213, %5, %136, %129, %1, %3214) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3215 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %3216 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1531 = "equeue.launch"(%3190, %3215, %5, %143, %136, %1, %3216) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3217 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %3218 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1532 = "equeue.launch"(%3190, %3217, %5, %150, %143, %1, %3218) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3219 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %3220 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1533 = "equeue.launch"(%3190, %3219, %5, %157, %150, %1, %3220) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3221 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1534 = "equeue.launch"(%3190, %3221, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %3222 = "equeue.control_start"() : () -> !equeue.signal
    %3223 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %3224 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1535 = "equeue.launch"(%3222, %3223, %5, %59, %1, %3224) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3225 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %3226 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1536 = "equeue.launch"(%3222, %3225, %5, %66, %59, %1, %3226) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3227 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %3228 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1537 = "equeue.launch"(%3222, %3227, %5, %73, %66, %1, %3228) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3229 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %3230 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1538 = "equeue.launch"(%3222, %3229, %5, %80, %73, %1, %3230) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3231 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %3232 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1539 = "equeue.launch"(%3222, %3231, %5, %87, %80, %1, %3232) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3233 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %3234 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1540 = "equeue.launch"(%3222, %3233, %5, %94, %87, %1, %3234) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3235 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %3236 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1541 = "equeue.launch"(%3222, %3235, %5, %101, %94, %1, %3236) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3237 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %3238 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1542 = "equeue.launch"(%3222, %3237, %5, %108, %101, %1, %3238) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3239 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %3240 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1543 = "equeue.launch"(%3222, %3239, %5, %115, %108, %1, %3240) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3241 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %3242 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1544 = "equeue.launch"(%3222, %3241, %5, %122, %115, %1, %3242) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3243 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %3244 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1545 = "equeue.launch"(%3222, %3243, %5, %129, %122, %1, %3244) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3245 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %3246 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1546 = "equeue.launch"(%3222, %3245, %5, %136, %129, %1, %3246) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3247 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %3248 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1547 = "equeue.launch"(%3222, %3247, %5, %143, %136, %1, %3248) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3249 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %3250 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1548 = "equeue.launch"(%3222, %3249, %5, %150, %143, %1, %3250) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3251 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %3252 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1549 = "equeue.launch"(%3222, %3251, %5, %157, %150, %1, %3252) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3253 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1550 = "equeue.launch"(%3222, %3253, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %3254 = "equeue.control_start"() : () -> !equeue.signal
    %3255 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %3256 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1551 = "equeue.launch"(%3254, %3255, %5, %59, %1, %3256) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3257 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %3258 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1552 = "equeue.launch"(%3254, %3257, %5, %66, %59, %1, %3258) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3259 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %3260 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1553 = "equeue.launch"(%3254, %3259, %5, %73, %66, %1, %3260) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3261 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %3262 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1554 = "equeue.launch"(%3254, %3261, %5, %80, %73, %1, %3262) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3263 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %3264 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1555 = "equeue.launch"(%3254, %3263, %5, %87, %80, %1, %3264) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3265 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %3266 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1556 = "equeue.launch"(%3254, %3265, %5, %94, %87, %1, %3266) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3267 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %3268 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1557 = "equeue.launch"(%3254, %3267, %5, %101, %94, %1, %3268) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3269 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %3270 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1558 = "equeue.launch"(%3254, %3269, %5, %108, %101, %1, %3270) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3271 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %3272 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1559 = "equeue.launch"(%3254, %3271, %5, %115, %108, %1, %3272) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3273 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %3274 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1560 = "equeue.launch"(%3254, %3273, %5, %122, %115, %1, %3274) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3275 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %3276 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1561 = "equeue.launch"(%3254, %3275, %5, %129, %122, %1, %3276) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3277 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %3278 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1562 = "equeue.launch"(%3254, %3277, %5, %136, %129, %1, %3278) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3279 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %3280 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1563 = "equeue.launch"(%3254, %3279, %5, %143, %136, %1, %3280) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3281 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %3282 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1564 = "equeue.launch"(%3254, %3281, %5, %150, %143, %1, %3282) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3283 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %3284 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1565 = "equeue.launch"(%3254, %3283, %5, %157, %150, %1, %3284) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3285 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1566 = "equeue.launch"(%3254, %3285, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %3286 = "equeue.control_start"() : () -> !equeue.signal
    %3287 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %3288 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1567 = "equeue.launch"(%3286, %3287, %5, %59, %1, %3288) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3289 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %3290 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1568 = "equeue.launch"(%3286, %3289, %5, %66, %59, %1, %3290) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3291 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %3292 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1569 = "equeue.launch"(%3286, %3291, %5, %73, %66, %1, %3292) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3293 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %3294 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1570 = "equeue.launch"(%3286, %3293, %5, %80, %73, %1, %3294) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3295 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %3296 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1571 = "equeue.launch"(%3286, %3295, %5, %87, %80, %1, %3296) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3297 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %3298 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1572 = "equeue.launch"(%3286, %3297, %5, %94, %87, %1, %3298) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3299 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %3300 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1573 = "equeue.launch"(%3286, %3299, %5, %101, %94, %1, %3300) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3301 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %3302 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1574 = "equeue.launch"(%3286, %3301, %5, %108, %101, %1, %3302) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3303 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %3304 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1575 = "equeue.launch"(%3286, %3303, %5, %115, %108, %1, %3304) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3305 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %3306 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1576 = "equeue.launch"(%3286, %3305, %5, %122, %115, %1, %3306) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3307 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %3308 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1577 = "equeue.launch"(%3286, %3307, %5, %129, %122, %1, %3308) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3309 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %3310 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1578 = "equeue.launch"(%3286, %3309, %5, %136, %129, %1, %3310) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3311 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %3312 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1579 = "equeue.launch"(%3286, %3311, %5, %143, %136, %1, %3312) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3313 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %3314 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1580 = "equeue.launch"(%3286, %3313, %5, %150, %143, %1, %3314) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3315 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %3316 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1581 = "equeue.launch"(%3286, %3315, %5, %157, %150, %1, %3316) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3317 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1582 = "equeue.launch"(%3286, %3317, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %3318 = "equeue.control_start"() : () -> !equeue.signal
    %3319 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %3320 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1583 = "equeue.launch"(%3318, %3319, %5, %59, %1, %3320) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3321 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %3322 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1584 = "equeue.launch"(%3318, %3321, %5, %66, %59, %1, %3322) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3323 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %3324 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1585 = "equeue.launch"(%3318, %3323, %5, %73, %66, %1, %3324) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3325 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %3326 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1586 = "equeue.launch"(%3318, %3325, %5, %80, %73, %1, %3326) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3327 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %3328 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1587 = "equeue.launch"(%3318, %3327, %5, %87, %80, %1, %3328) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3329 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %3330 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1588 = "equeue.launch"(%3318, %3329, %5, %94, %87, %1, %3330) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3331 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %3332 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1589 = "equeue.launch"(%3318, %3331, %5, %101, %94, %1, %3332) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3333 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %3334 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1590 = "equeue.launch"(%3318, %3333, %5, %108, %101, %1, %3334) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3335 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %3336 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1591 = "equeue.launch"(%3318, %3335, %5, %115, %108, %1, %3336) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3337 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %3338 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1592 = "equeue.launch"(%3318, %3337, %5, %122, %115, %1, %3338) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3339 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %3340 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1593 = "equeue.launch"(%3318, %3339, %5, %129, %122, %1, %3340) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3341 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %3342 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1594 = "equeue.launch"(%3318, %3341, %5, %136, %129, %1, %3342) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3343 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %3344 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1595 = "equeue.launch"(%3318, %3343, %5, %143, %136, %1, %3344) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3345 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %3346 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1596 = "equeue.launch"(%3318, %3345, %5, %150, %143, %1, %3346) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3347 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %3348 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1597 = "equeue.launch"(%3318, %3347, %5, %157, %150, %1, %3348) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3349 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1598 = "equeue.launch"(%3318, %3349, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %3350 = "equeue.control_start"() : () -> !equeue.signal
    %3351 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %3352 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1599 = "equeue.launch"(%3350, %3351, %5, %59, %1, %3352) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3353 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %3354 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1600 = "equeue.launch"(%3350, %3353, %5, %66, %59, %1, %3354) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3355 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %3356 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1601 = "equeue.launch"(%3350, %3355, %5, %73, %66, %1, %3356) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3357 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %3358 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1602 = "equeue.launch"(%3350, %3357, %5, %80, %73, %1, %3358) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3359 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %3360 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1603 = "equeue.launch"(%3350, %3359, %5, %87, %80, %1, %3360) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3361 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %3362 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1604 = "equeue.launch"(%3350, %3361, %5, %94, %87, %1, %3362) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3363 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %3364 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1605 = "equeue.launch"(%3350, %3363, %5, %101, %94, %1, %3364) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3365 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %3366 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1606 = "equeue.launch"(%3350, %3365, %5, %108, %101, %1, %3366) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3367 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %3368 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1607 = "equeue.launch"(%3350, %3367, %5, %115, %108, %1, %3368) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3369 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %3370 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1608 = "equeue.launch"(%3350, %3369, %5, %122, %115, %1, %3370) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3371 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %3372 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1609 = "equeue.launch"(%3350, %3371, %5, %129, %122, %1, %3372) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3373 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %3374 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1610 = "equeue.launch"(%3350, %3373, %5, %136, %129, %1, %3374) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3375 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %3376 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1611 = "equeue.launch"(%3350, %3375, %5, %143, %136, %1, %3376) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3377 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %3378 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1612 = "equeue.launch"(%3350, %3377, %5, %150, %143, %1, %3378) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3379 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %3380 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1613 = "equeue.launch"(%3350, %3379, %5, %157, %150, %1, %3380) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3381 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1614 = "equeue.launch"(%3350, %3381, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %3382 = "equeue.control_start"() : () -> !equeue.signal
    %3383 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %3384 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1615 = "equeue.launch"(%3382, %3383, %5, %59, %1, %3384) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3385 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %3386 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1616 = "equeue.launch"(%3382, %3385, %5, %66, %59, %1, %3386) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3387 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %3388 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1617 = "equeue.launch"(%3382, %3387, %5, %73, %66, %1, %3388) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3389 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %3390 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1618 = "equeue.launch"(%3382, %3389, %5, %80, %73, %1, %3390) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3391 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %3392 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1619 = "equeue.launch"(%3382, %3391, %5, %87, %80, %1, %3392) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3393 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %3394 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1620 = "equeue.launch"(%3382, %3393, %5, %94, %87, %1, %3394) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3395 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %3396 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1621 = "equeue.launch"(%3382, %3395, %5, %101, %94, %1, %3396) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3397 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %3398 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1622 = "equeue.launch"(%3382, %3397, %5, %108, %101, %1, %3398) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3399 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %3400 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1623 = "equeue.launch"(%3382, %3399, %5, %115, %108, %1, %3400) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3401 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %3402 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1624 = "equeue.launch"(%3382, %3401, %5, %122, %115, %1, %3402) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3403 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %3404 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1625 = "equeue.launch"(%3382, %3403, %5, %129, %122, %1, %3404) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3405 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %3406 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1626 = "equeue.launch"(%3382, %3405, %5, %136, %129, %1, %3406) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3407 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %3408 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1627 = "equeue.launch"(%3382, %3407, %5, %143, %136, %1, %3408) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3409 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %3410 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1628 = "equeue.launch"(%3382, %3409, %5, %150, %143, %1, %3410) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3411 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %3412 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1629 = "equeue.launch"(%3382, %3411, %5, %157, %150, %1, %3412) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3413 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1630 = "equeue.launch"(%3382, %3413, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %3414 = "equeue.control_start"() : () -> !equeue.signal
    %3415 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %3416 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1631 = "equeue.launch"(%3414, %3415, %5, %59, %1, %3416) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3417 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %3418 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1632 = "equeue.launch"(%3414, %3417, %5, %66, %59, %1, %3418) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3419 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %3420 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1633 = "equeue.launch"(%3414, %3419, %5, %73, %66, %1, %3420) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3421 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %3422 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1634 = "equeue.launch"(%3414, %3421, %5, %80, %73, %1, %3422) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3423 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %3424 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1635 = "equeue.launch"(%3414, %3423, %5, %87, %80, %1, %3424) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3425 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %3426 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1636 = "equeue.launch"(%3414, %3425, %5, %94, %87, %1, %3426) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3427 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %3428 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1637 = "equeue.launch"(%3414, %3427, %5, %101, %94, %1, %3428) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3429 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %3430 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1638 = "equeue.launch"(%3414, %3429, %5, %108, %101, %1, %3430) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3431 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %3432 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1639 = "equeue.launch"(%3414, %3431, %5, %115, %108, %1, %3432) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3433 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %3434 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1640 = "equeue.launch"(%3414, %3433, %5, %122, %115, %1, %3434) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3435 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %3436 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1641 = "equeue.launch"(%3414, %3435, %5, %129, %122, %1, %3436) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3437 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %3438 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1642 = "equeue.launch"(%3414, %3437, %5, %136, %129, %1, %3438) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3439 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %3440 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1643 = "equeue.launch"(%3414, %3439, %5, %143, %136, %1, %3440) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3441 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %3442 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1644 = "equeue.launch"(%3414, %3441, %5, %150, %143, %1, %3442) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3443 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %3444 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1645 = "equeue.launch"(%3414, %3443, %5, %157, %150, %1, %3444) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3445 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1646 = "equeue.launch"(%3414, %3445, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %3446 = "equeue.control_start"() : () -> !equeue.signal
    %3447 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %3448 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1647 = "equeue.launch"(%3446, %3447, %5, %59, %1, %3448) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3449 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %3450 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1648 = "equeue.launch"(%3446, %3449, %5, %66, %59, %1, %3450) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3451 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %3452 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1649 = "equeue.launch"(%3446, %3451, %5, %73, %66, %1, %3452) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3453 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %3454 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1650 = "equeue.launch"(%3446, %3453, %5, %80, %73, %1, %3454) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3455 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %3456 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1651 = "equeue.launch"(%3446, %3455, %5, %87, %80, %1, %3456) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3457 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %3458 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1652 = "equeue.launch"(%3446, %3457, %5, %94, %87, %1, %3458) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3459 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %3460 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1653 = "equeue.launch"(%3446, %3459, %5, %101, %94, %1, %3460) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3461 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %3462 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1654 = "equeue.launch"(%3446, %3461, %5, %108, %101, %1, %3462) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3463 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %3464 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1655 = "equeue.launch"(%3446, %3463, %5, %115, %108, %1, %3464) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3465 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %3466 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1656 = "equeue.launch"(%3446, %3465, %5, %122, %115, %1, %3466) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3467 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %3468 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1657 = "equeue.launch"(%3446, %3467, %5, %129, %122, %1, %3468) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3469 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %3470 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1658 = "equeue.launch"(%3446, %3469, %5, %136, %129, %1, %3470) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3471 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %3472 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1659 = "equeue.launch"(%3446, %3471, %5, %143, %136, %1, %3472) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3473 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %3474 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1660 = "equeue.launch"(%3446, %3473, %5, %150, %143, %1, %3474) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3475 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %3476 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1661 = "equeue.launch"(%3446, %3475, %5, %157, %150, %1, %3476) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3477 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1662 = "equeue.launch"(%3446, %3477, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %3478 = "equeue.control_start"() : () -> !equeue.signal
    %3479 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %3480 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1663 = "equeue.launch"(%3478, %3479, %5, %59, %1, %3480) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3481 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %3482 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1664 = "equeue.launch"(%3478, %3481, %5, %66, %59, %1, %3482) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3483 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %3484 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1665 = "equeue.launch"(%3478, %3483, %5, %73, %66, %1, %3484) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3485 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %3486 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1666 = "equeue.launch"(%3478, %3485, %5, %80, %73, %1, %3486) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3487 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %3488 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1667 = "equeue.launch"(%3478, %3487, %5, %87, %80, %1, %3488) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3489 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %3490 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1668 = "equeue.launch"(%3478, %3489, %5, %94, %87, %1, %3490) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3491 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %3492 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1669 = "equeue.launch"(%3478, %3491, %5, %101, %94, %1, %3492) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3493 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %3494 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1670 = "equeue.launch"(%3478, %3493, %5, %108, %101, %1, %3494) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3495 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %3496 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1671 = "equeue.launch"(%3478, %3495, %5, %115, %108, %1, %3496) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3497 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %3498 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1672 = "equeue.launch"(%3478, %3497, %5, %122, %115, %1, %3498) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3499 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %3500 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1673 = "equeue.launch"(%3478, %3499, %5, %129, %122, %1, %3500) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3501 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %3502 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1674 = "equeue.launch"(%3478, %3501, %5, %136, %129, %1, %3502) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3503 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %3504 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1675 = "equeue.launch"(%3478, %3503, %5, %143, %136, %1, %3504) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3505 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %3506 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1676 = "equeue.launch"(%3478, %3505, %5, %150, %143, %1, %3506) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3507 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %3508 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1677 = "equeue.launch"(%3478, %3507, %5, %157, %150, %1, %3508) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3509 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1678 = "equeue.launch"(%3478, %3509, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %3510 = "equeue.control_start"() : () -> !equeue.signal
    %3511 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %3512 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1679 = "equeue.launch"(%3510, %3511, %5, %59, %1, %3512) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3513 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %3514 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1680 = "equeue.launch"(%3510, %3513, %5, %66, %59, %1, %3514) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3515 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %3516 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1681 = "equeue.launch"(%3510, %3515, %5, %73, %66, %1, %3516) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3517 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %3518 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1682 = "equeue.launch"(%3510, %3517, %5, %80, %73, %1, %3518) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3519 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %3520 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1683 = "equeue.launch"(%3510, %3519, %5, %87, %80, %1, %3520) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3521 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %3522 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1684 = "equeue.launch"(%3510, %3521, %5, %94, %87, %1, %3522) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3523 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %3524 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1685 = "equeue.launch"(%3510, %3523, %5, %101, %94, %1, %3524) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3525 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %3526 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1686 = "equeue.launch"(%3510, %3525, %5, %108, %101, %1, %3526) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3527 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %3528 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1687 = "equeue.launch"(%3510, %3527, %5, %115, %108, %1, %3528) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3529 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %3530 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1688 = "equeue.launch"(%3510, %3529, %5, %122, %115, %1, %3530) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3531 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %3532 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1689 = "equeue.launch"(%3510, %3531, %5, %129, %122, %1, %3532) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3533 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %3534 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1690 = "equeue.launch"(%3510, %3533, %5, %136, %129, %1, %3534) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3535 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %3536 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1691 = "equeue.launch"(%3510, %3535, %5, %143, %136, %1, %3536) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3537 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %3538 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1692 = "equeue.launch"(%3510, %3537, %5, %150, %143, %1, %3538) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3539 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %3540 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1693 = "equeue.launch"(%3510, %3539, %5, %157, %150, %1, %3540) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3541 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1694 = "equeue.launch"(%3510, %3541, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %3542 = "equeue.control_start"() : () -> !equeue.signal
    %3543 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %3544 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1695 = "equeue.launch"(%3542, %3543, %5, %59, %1, %3544) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3545 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %3546 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1696 = "equeue.launch"(%3542, %3545, %5, %66, %59, %1, %3546) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3547 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %3548 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1697 = "equeue.launch"(%3542, %3547, %5, %73, %66, %1, %3548) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3549 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %3550 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1698 = "equeue.launch"(%3542, %3549, %5, %80, %73, %1, %3550) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3551 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %3552 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1699 = "equeue.launch"(%3542, %3551, %5, %87, %80, %1, %3552) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3553 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %3554 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1700 = "equeue.launch"(%3542, %3553, %5, %94, %87, %1, %3554) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3555 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %3556 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1701 = "equeue.launch"(%3542, %3555, %5, %101, %94, %1, %3556) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3557 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %3558 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1702 = "equeue.launch"(%3542, %3557, %5, %108, %101, %1, %3558) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3559 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %3560 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1703 = "equeue.launch"(%3542, %3559, %5, %115, %108, %1, %3560) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3561 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %3562 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1704 = "equeue.launch"(%3542, %3561, %5, %122, %115, %1, %3562) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3563 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %3564 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1705 = "equeue.launch"(%3542, %3563, %5, %129, %122, %1, %3564) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3565 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %3566 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1706 = "equeue.launch"(%3542, %3565, %5, %136, %129, %1, %3566) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3567 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %3568 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1707 = "equeue.launch"(%3542, %3567, %5, %143, %136, %1, %3568) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3569 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %3570 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1708 = "equeue.launch"(%3542, %3569, %5, %150, %143, %1, %3570) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3571 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %3572 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1709 = "equeue.launch"(%3542, %3571, %5, %157, %150, %1, %3572) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3573 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1710 = "equeue.launch"(%3542, %3573, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %3574 = "equeue.control_start"() : () -> !equeue.signal
    %3575 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %3576 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1711 = "equeue.launch"(%3574, %3575, %5, %59, %1, %3576) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3577 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %3578 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1712 = "equeue.launch"(%3574, %3577, %5, %66, %59, %1, %3578) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3579 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %3580 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1713 = "equeue.launch"(%3574, %3579, %5, %73, %66, %1, %3580) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3581 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %3582 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1714 = "equeue.launch"(%3574, %3581, %5, %80, %73, %1, %3582) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3583 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %3584 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1715 = "equeue.launch"(%3574, %3583, %5, %87, %80, %1, %3584) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3585 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %3586 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1716 = "equeue.launch"(%3574, %3585, %5, %94, %87, %1, %3586) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3587 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %3588 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1717 = "equeue.launch"(%3574, %3587, %5, %101, %94, %1, %3588) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3589 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %3590 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1718 = "equeue.launch"(%3574, %3589, %5, %108, %101, %1, %3590) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3591 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %3592 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1719 = "equeue.launch"(%3574, %3591, %5, %115, %108, %1, %3592) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3593 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %3594 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1720 = "equeue.launch"(%3574, %3593, %5, %122, %115, %1, %3594) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3595 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %3596 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1721 = "equeue.launch"(%3574, %3595, %5, %129, %122, %1, %3596) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3597 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %3598 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1722 = "equeue.launch"(%3574, %3597, %5, %136, %129, %1, %3598) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3599 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %3600 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1723 = "equeue.launch"(%3574, %3599, %5, %143, %136, %1, %3600) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3601 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %3602 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1724 = "equeue.launch"(%3574, %3601, %5, %150, %143, %1, %3602) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3603 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %3604 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1725 = "equeue.launch"(%3574, %3603, %5, %157, %150, %1, %3604) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3605 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1726 = "equeue.launch"(%3574, %3605, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %3606 = "equeue.control_start"() : () -> !equeue.signal
    %3607 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %3608 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1727 = "equeue.launch"(%3606, %3607, %5, %59, %1, %3608) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3609 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %3610 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1728 = "equeue.launch"(%3606, %3609, %5, %66, %59, %1, %3610) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3611 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %3612 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1729 = "equeue.launch"(%3606, %3611, %5, %73, %66, %1, %3612) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3613 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %3614 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1730 = "equeue.launch"(%3606, %3613, %5, %80, %73, %1, %3614) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3615 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %3616 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1731 = "equeue.launch"(%3606, %3615, %5, %87, %80, %1, %3616) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3617 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %3618 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1732 = "equeue.launch"(%3606, %3617, %5, %94, %87, %1, %3618) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3619 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %3620 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1733 = "equeue.launch"(%3606, %3619, %5, %101, %94, %1, %3620) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3621 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %3622 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1734 = "equeue.launch"(%3606, %3621, %5, %108, %101, %1, %3622) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3623 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %3624 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1735 = "equeue.launch"(%3606, %3623, %5, %115, %108, %1, %3624) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3625 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %3626 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1736 = "equeue.launch"(%3606, %3625, %5, %122, %115, %1, %3626) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3627 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %3628 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1737 = "equeue.launch"(%3606, %3627, %5, %129, %122, %1, %3628) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3629 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %3630 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1738 = "equeue.launch"(%3606, %3629, %5, %136, %129, %1, %3630) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3631 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %3632 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1739 = "equeue.launch"(%3606, %3631, %5, %143, %136, %1, %3632) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3633 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %3634 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1740 = "equeue.launch"(%3606, %3633, %5, %150, %143, %1, %3634) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3635 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %3636 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1741 = "equeue.launch"(%3606, %3635, %5, %157, %150, %1, %3636) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3637 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1742 = "equeue.launch"(%3606, %3637, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %3638 = "equeue.control_start"() : () -> !equeue.signal
    %3639 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %3640 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1743 = "equeue.launch"(%3638, %3639, %5, %59, %1, %3640) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3641 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %3642 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1744 = "equeue.launch"(%3638, %3641, %5, %66, %59, %1, %3642) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3643 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %3644 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1745 = "equeue.launch"(%3638, %3643, %5, %73, %66, %1, %3644) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3645 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %3646 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1746 = "equeue.launch"(%3638, %3645, %5, %80, %73, %1, %3646) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3647 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %3648 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1747 = "equeue.launch"(%3638, %3647, %5, %87, %80, %1, %3648) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3649 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %3650 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1748 = "equeue.launch"(%3638, %3649, %5, %94, %87, %1, %3650) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3651 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %3652 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1749 = "equeue.launch"(%3638, %3651, %5, %101, %94, %1, %3652) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3653 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %3654 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1750 = "equeue.launch"(%3638, %3653, %5, %108, %101, %1, %3654) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3655 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %3656 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1751 = "equeue.launch"(%3638, %3655, %5, %115, %108, %1, %3656) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3657 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %3658 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1752 = "equeue.launch"(%3638, %3657, %5, %122, %115, %1, %3658) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3659 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %3660 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1753 = "equeue.launch"(%3638, %3659, %5, %129, %122, %1, %3660) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3661 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %3662 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1754 = "equeue.launch"(%3638, %3661, %5, %136, %129, %1, %3662) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3663 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %3664 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1755 = "equeue.launch"(%3638, %3663, %5, %143, %136, %1, %3664) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3665 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %3666 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1756 = "equeue.launch"(%3638, %3665, %5, %150, %143, %1, %3666) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3667 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %3668 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1757 = "equeue.launch"(%3638, %3667, %5, %157, %150, %1, %3668) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3669 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1758 = "equeue.launch"(%3638, %3669, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %3670 = "equeue.control_start"() : () -> !equeue.signal
    %3671 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %3672 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1759 = "equeue.launch"(%3670, %3671, %5, %59, %1, %3672) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3673 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %3674 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1760 = "equeue.launch"(%3670, %3673, %5, %66, %59, %1, %3674) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3675 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %3676 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1761 = "equeue.launch"(%3670, %3675, %5, %73, %66, %1, %3676) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3677 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %3678 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1762 = "equeue.launch"(%3670, %3677, %5, %80, %73, %1, %3678) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3679 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %3680 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1763 = "equeue.launch"(%3670, %3679, %5, %87, %80, %1, %3680) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3681 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %3682 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1764 = "equeue.launch"(%3670, %3681, %5, %94, %87, %1, %3682) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3683 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %3684 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1765 = "equeue.launch"(%3670, %3683, %5, %101, %94, %1, %3684) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3685 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %3686 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1766 = "equeue.launch"(%3670, %3685, %5, %108, %101, %1, %3686) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3687 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %3688 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1767 = "equeue.launch"(%3670, %3687, %5, %115, %108, %1, %3688) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3689 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %3690 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1768 = "equeue.launch"(%3670, %3689, %5, %122, %115, %1, %3690) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3691 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %3692 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1769 = "equeue.launch"(%3670, %3691, %5, %129, %122, %1, %3692) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3693 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %3694 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1770 = "equeue.launch"(%3670, %3693, %5, %136, %129, %1, %3694) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3695 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %3696 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1771 = "equeue.launch"(%3670, %3695, %5, %143, %136, %1, %3696) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3697 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %3698 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1772 = "equeue.launch"(%3670, %3697, %5, %150, %143, %1, %3698) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3699 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %3700 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1773 = "equeue.launch"(%3670, %3699, %5, %157, %150, %1, %3700) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3701 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1774 = "equeue.launch"(%3670, %3701, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %3702 = "equeue.control_start"() : () -> !equeue.signal
    %3703 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %3704 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1775 = "equeue.launch"(%3702, %3703, %5, %59, %1, %3704) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3705 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %3706 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1776 = "equeue.launch"(%3702, %3705, %5, %66, %59, %1, %3706) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3707 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %3708 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1777 = "equeue.launch"(%3702, %3707, %5, %73, %66, %1, %3708) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3709 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %3710 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1778 = "equeue.launch"(%3702, %3709, %5, %80, %73, %1, %3710) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3711 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %3712 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1779 = "equeue.launch"(%3702, %3711, %5, %87, %80, %1, %3712) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3713 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %3714 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1780 = "equeue.launch"(%3702, %3713, %5, %94, %87, %1, %3714) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3715 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %3716 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1781 = "equeue.launch"(%3702, %3715, %5, %101, %94, %1, %3716) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3717 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %3718 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1782 = "equeue.launch"(%3702, %3717, %5, %108, %101, %1, %3718) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3719 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %3720 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1783 = "equeue.launch"(%3702, %3719, %5, %115, %108, %1, %3720) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3721 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %3722 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1784 = "equeue.launch"(%3702, %3721, %5, %122, %115, %1, %3722) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3723 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %3724 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1785 = "equeue.launch"(%3702, %3723, %5, %129, %122, %1, %3724) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3725 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %3726 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1786 = "equeue.launch"(%3702, %3725, %5, %136, %129, %1, %3726) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3727 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %3728 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1787 = "equeue.launch"(%3702, %3727, %5, %143, %136, %1, %3728) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3729 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %3730 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1788 = "equeue.launch"(%3702, %3729, %5, %150, %143, %1, %3730) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3731 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %3732 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1789 = "equeue.launch"(%3702, %3731, %5, %157, %150, %1, %3732) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3733 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1790 = "equeue.launch"(%3702, %3733, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %3734 = "equeue.control_start"() : () -> !equeue.signal
    %3735 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %3736 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1791 = "equeue.launch"(%3734, %3735, %5, %59, %1, %3736) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3737 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %3738 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1792 = "equeue.launch"(%3734, %3737, %5, %66, %59, %1, %3738) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3739 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %3740 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1793 = "equeue.launch"(%3734, %3739, %5, %73, %66, %1, %3740) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3741 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %3742 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1794 = "equeue.launch"(%3734, %3741, %5, %80, %73, %1, %3742) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3743 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %3744 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1795 = "equeue.launch"(%3734, %3743, %5, %87, %80, %1, %3744) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3745 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %3746 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1796 = "equeue.launch"(%3734, %3745, %5, %94, %87, %1, %3746) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3747 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %3748 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1797 = "equeue.launch"(%3734, %3747, %5, %101, %94, %1, %3748) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3749 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %3750 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1798 = "equeue.launch"(%3734, %3749, %5, %108, %101, %1, %3750) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3751 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %3752 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1799 = "equeue.launch"(%3734, %3751, %5, %115, %108, %1, %3752) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3753 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %3754 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1800 = "equeue.launch"(%3734, %3753, %5, %122, %115, %1, %3754) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3755 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %3756 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1801 = "equeue.launch"(%3734, %3755, %5, %129, %122, %1, %3756) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3757 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %3758 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1802 = "equeue.launch"(%3734, %3757, %5, %136, %129, %1, %3758) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3759 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %3760 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1803 = "equeue.launch"(%3734, %3759, %5, %143, %136, %1, %3760) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3761 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %3762 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1804 = "equeue.launch"(%3734, %3761, %5, %150, %143, %1, %3762) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3763 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %3764 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1805 = "equeue.launch"(%3734, %3763, %5, %157, %150, %1, %3764) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3765 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1806 = "equeue.launch"(%3734, %3765, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %3766 = "equeue.control_start"() : () -> !equeue.signal
    %3767 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %3768 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1807 = "equeue.launch"(%3766, %3767, %5, %59, %1, %3768) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3769 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %3770 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1808 = "equeue.launch"(%3766, %3769, %5, %66, %59, %1, %3770) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3771 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %3772 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1809 = "equeue.launch"(%3766, %3771, %5, %73, %66, %1, %3772) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3773 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %3774 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1810 = "equeue.launch"(%3766, %3773, %5, %80, %73, %1, %3774) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3775 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %3776 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1811 = "equeue.launch"(%3766, %3775, %5, %87, %80, %1, %3776) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3777 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %3778 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1812 = "equeue.launch"(%3766, %3777, %5, %94, %87, %1, %3778) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3779 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %3780 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1813 = "equeue.launch"(%3766, %3779, %5, %101, %94, %1, %3780) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3781 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %3782 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1814 = "equeue.launch"(%3766, %3781, %5, %108, %101, %1, %3782) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3783 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %3784 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1815 = "equeue.launch"(%3766, %3783, %5, %115, %108, %1, %3784) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3785 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %3786 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1816 = "equeue.launch"(%3766, %3785, %5, %122, %115, %1, %3786) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3787 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %3788 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1817 = "equeue.launch"(%3766, %3787, %5, %129, %122, %1, %3788) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3789 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %3790 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1818 = "equeue.launch"(%3766, %3789, %5, %136, %129, %1, %3790) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3791 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %3792 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1819 = "equeue.launch"(%3766, %3791, %5, %143, %136, %1, %3792) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3793 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %3794 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1820 = "equeue.launch"(%3766, %3793, %5, %150, %143, %1, %3794) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3795 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %3796 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1821 = "equeue.launch"(%3766, %3795, %5, %157, %150, %1, %3796) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3797 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1822 = "equeue.launch"(%3766, %3797, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %3798 = "equeue.control_start"() : () -> !equeue.signal
    %3799 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %3800 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1823 = "equeue.launch"(%3798, %3799, %5, %59, %1, %3800) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3801 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %3802 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1824 = "equeue.launch"(%3798, %3801, %5, %66, %59, %1, %3802) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3803 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %3804 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1825 = "equeue.launch"(%3798, %3803, %5, %73, %66, %1, %3804) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3805 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %3806 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1826 = "equeue.launch"(%3798, %3805, %5, %80, %73, %1, %3806) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3807 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %3808 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1827 = "equeue.launch"(%3798, %3807, %5, %87, %80, %1, %3808) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3809 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %3810 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1828 = "equeue.launch"(%3798, %3809, %5, %94, %87, %1, %3810) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3811 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %3812 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1829 = "equeue.launch"(%3798, %3811, %5, %101, %94, %1, %3812) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3813 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %3814 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1830 = "equeue.launch"(%3798, %3813, %5, %108, %101, %1, %3814) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3815 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %3816 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1831 = "equeue.launch"(%3798, %3815, %5, %115, %108, %1, %3816) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3817 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %3818 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1832 = "equeue.launch"(%3798, %3817, %5, %122, %115, %1, %3818) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3819 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %3820 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1833 = "equeue.launch"(%3798, %3819, %5, %129, %122, %1, %3820) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3821 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %3822 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1834 = "equeue.launch"(%3798, %3821, %5, %136, %129, %1, %3822) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3823 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %3824 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1835 = "equeue.launch"(%3798, %3823, %5, %143, %136, %1, %3824) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3825 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %3826 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1836 = "equeue.launch"(%3798, %3825, %5, %150, %143, %1, %3826) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3827 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %3828 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1837 = "equeue.launch"(%3798, %3827, %5, %157, %150, %1, %3828) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3829 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1838 = "equeue.launch"(%3798, %3829, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %3830 = "equeue.control_start"() : () -> !equeue.signal
    %3831 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %3832 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1839 = "equeue.launch"(%3830, %3831, %5, %59, %1, %3832) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3833 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %3834 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1840 = "equeue.launch"(%3830, %3833, %5, %66, %59, %1, %3834) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3835 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %3836 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1841 = "equeue.launch"(%3830, %3835, %5, %73, %66, %1, %3836) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3837 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %3838 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1842 = "equeue.launch"(%3830, %3837, %5, %80, %73, %1, %3838) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3839 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %3840 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1843 = "equeue.launch"(%3830, %3839, %5, %87, %80, %1, %3840) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3841 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %3842 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1844 = "equeue.launch"(%3830, %3841, %5, %94, %87, %1, %3842) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3843 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %3844 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1845 = "equeue.launch"(%3830, %3843, %5, %101, %94, %1, %3844) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3845 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %3846 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1846 = "equeue.launch"(%3830, %3845, %5, %108, %101, %1, %3846) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3847 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %3848 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1847 = "equeue.launch"(%3830, %3847, %5, %115, %108, %1, %3848) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3849 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %3850 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1848 = "equeue.launch"(%3830, %3849, %5, %122, %115, %1, %3850) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3851 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %3852 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1849 = "equeue.launch"(%3830, %3851, %5, %129, %122, %1, %3852) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3853 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %3854 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1850 = "equeue.launch"(%3830, %3853, %5, %136, %129, %1, %3854) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3855 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %3856 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1851 = "equeue.launch"(%3830, %3855, %5, %143, %136, %1, %3856) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3857 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %3858 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1852 = "equeue.launch"(%3830, %3857, %5, %150, %143, %1, %3858) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3859 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %3860 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1853 = "equeue.launch"(%3830, %3859, %5, %157, %150, %1, %3860) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3861 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1854 = "equeue.launch"(%3830, %3861, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %3862 = "equeue.control_start"() : () -> !equeue.signal
    %3863 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %3864 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1855 = "equeue.launch"(%3862, %3863, %5, %59, %1, %3864) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3865 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %3866 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1856 = "equeue.launch"(%3862, %3865, %5, %66, %59, %1, %3866) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3867 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %3868 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1857 = "equeue.launch"(%3862, %3867, %5, %73, %66, %1, %3868) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3869 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %3870 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1858 = "equeue.launch"(%3862, %3869, %5, %80, %73, %1, %3870) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3871 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %3872 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1859 = "equeue.launch"(%3862, %3871, %5, %87, %80, %1, %3872) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3873 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %3874 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1860 = "equeue.launch"(%3862, %3873, %5, %94, %87, %1, %3874) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3875 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %3876 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1861 = "equeue.launch"(%3862, %3875, %5, %101, %94, %1, %3876) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3877 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %3878 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1862 = "equeue.launch"(%3862, %3877, %5, %108, %101, %1, %3878) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3879 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %3880 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1863 = "equeue.launch"(%3862, %3879, %5, %115, %108, %1, %3880) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3881 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %3882 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1864 = "equeue.launch"(%3862, %3881, %5, %122, %115, %1, %3882) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3883 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %3884 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1865 = "equeue.launch"(%3862, %3883, %5, %129, %122, %1, %3884) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3885 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %3886 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1866 = "equeue.launch"(%3862, %3885, %5, %136, %129, %1, %3886) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3887 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %3888 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1867 = "equeue.launch"(%3862, %3887, %5, %143, %136, %1, %3888) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3889 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %3890 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1868 = "equeue.launch"(%3862, %3889, %5, %150, %143, %1, %3890) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3891 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %3892 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1869 = "equeue.launch"(%3862, %3891, %5, %157, %150, %1, %3892) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3893 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1870 = "equeue.launch"(%3862, %3893, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %3894 = "equeue.control_start"() : () -> !equeue.signal
    %3895 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %3896 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1871 = "equeue.launch"(%3894, %3895, %5, %59, %1, %3896) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3897 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %3898 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1872 = "equeue.launch"(%3894, %3897, %5, %66, %59, %1, %3898) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3899 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %3900 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1873 = "equeue.launch"(%3894, %3899, %5, %73, %66, %1, %3900) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3901 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %3902 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1874 = "equeue.launch"(%3894, %3901, %5, %80, %73, %1, %3902) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3903 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %3904 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1875 = "equeue.launch"(%3894, %3903, %5, %87, %80, %1, %3904) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3905 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %3906 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1876 = "equeue.launch"(%3894, %3905, %5, %94, %87, %1, %3906) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3907 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %3908 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1877 = "equeue.launch"(%3894, %3907, %5, %101, %94, %1, %3908) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3909 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %3910 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1878 = "equeue.launch"(%3894, %3909, %5, %108, %101, %1, %3910) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3911 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %3912 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1879 = "equeue.launch"(%3894, %3911, %5, %115, %108, %1, %3912) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3913 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %3914 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1880 = "equeue.launch"(%3894, %3913, %5, %122, %115, %1, %3914) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3915 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %3916 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1881 = "equeue.launch"(%3894, %3915, %5, %129, %122, %1, %3916) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3917 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %3918 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1882 = "equeue.launch"(%3894, %3917, %5, %136, %129, %1, %3918) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3919 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %3920 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1883 = "equeue.launch"(%3894, %3919, %5, %143, %136, %1, %3920) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3921 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %3922 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1884 = "equeue.launch"(%3894, %3921, %5, %150, %143, %1, %3922) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3923 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %3924 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1885 = "equeue.launch"(%3894, %3923, %5, %157, %150, %1, %3924) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3925 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1886 = "equeue.launch"(%3894, %3925, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %3926 = "equeue.control_start"() : () -> !equeue.signal
    %3927 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %3928 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1887 = "equeue.launch"(%3926, %3927, %5, %59, %1, %3928) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3929 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %3930 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1888 = "equeue.launch"(%3926, %3929, %5, %66, %59, %1, %3930) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3931 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %3932 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1889 = "equeue.launch"(%3926, %3931, %5, %73, %66, %1, %3932) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3933 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %3934 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1890 = "equeue.launch"(%3926, %3933, %5, %80, %73, %1, %3934) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3935 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %3936 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1891 = "equeue.launch"(%3926, %3935, %5, %87, %80, %1, %3936) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3937 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %3938 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1892 = "equeue.launch"(%3926, %3937, %5, %94, %87, %1, %3938) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3939 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %3940 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1893 = "equeue.launch"(%3926, %3939, %5, %101, %94, %1, %3940) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3941 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %3942 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1894 = "equeue.launch"(%3926, %3941, %5, %108, %101, %1, %3942) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3943 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %3944 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1895 = "equeue.launch"(%3926, %3943, %5, %115, %108, %1, %3944) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3945 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %3946 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1896 = "equeue.launch"(%3926, %3945, %5, %122, %115, %1, %3946) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3947 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %3948 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1897 = "equeue.launch"(%3926, %3947, %5, %129, %122, %1, %3948) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3949 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %3950 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1898 = "equeue.launch"(%3926, %3949, %5, %136, %129, %1, %3950) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3951 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %3952 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1899 = "equeue.launch"(%3926, %3951, %5, %143, %136, %1, %3952) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3953 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %3954 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1900 = "equeue.launch"(%3926, %3953, %5, %150, %143, %1, %3954) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3955 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %3956 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1901 = "equeue.launch"(%3926, %3955, %5, %157, %150, %1, %3956) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3957 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1902 = "equeue.launch"(%3926, %3957, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %3958 = "equeue.control_start"() : () -> !equeue.signal
    %3959 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %3960 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1903 = "equeue.launch"(%3958, %3959, %5, %59, %1, %3960) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3961 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %3962 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1904 = "equeue.launch"(%3958, %3961, %5, %66, %59, %1, %3962) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3963 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %3964 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1905 = "equeue.launch"(%3958, %3963, %5, %73, %66, %1, %3964) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3965 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %3966 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1906 = "equeue.launch"(%3958, %3965, %5, %80, %73, %1, %3966) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3967 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %3968 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1907 = "equeue.launch"(%3958, %3967, %5, %87, %80, %1, %3968) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3969 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %3970 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1908 = "equeue.launch"(%3958, %3969, %5, %94, %87, %1, %3970) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3971 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %3972 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1909 = "equeue.launch"(%3958, %3971, %5, %101, %94, %1, %3972) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3973 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %3974 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1910 = "equeue.launch"(%3958, %3973, %5, %108, %101, %1, %3974) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3975 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %3976 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1911 = "equeue.launch"(%3958, %3975, %5, %115, %108, %1, %3976) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3977 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %3978 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1912 = "equeue.launch"(%3958, %3977, %5, %122, %115, %1, %3978) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3979 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %3980 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1913 = "equeue.launch"(%3958, %3979, %5, %129, %122, %1, %3980) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3981 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %3982 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1914 = "equeue.launch"(%3958, %3981, %5, %136, %129, %1, %3982) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3983 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %3984 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1915 = "equeue.launch"(%3958, %3983, %5, %143, %136, %1, %3984) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3985 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %3986 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1916 = "equeue.launch"(%3958, %3985, %5, %150, %143, %1, %3986) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3987 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %3988 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1917 = "equeue.launch"(%3958, %3987, %5, %157, %150, %1, %3988) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3989 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1918 = "equeue.launch"(%3958, %3989, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %3990 = "equeue.control_start"() : () -> !equeue.signal
    %3991 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %3992 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1919 = "equeue.launch"(%3990, %3991, %5, %59, %1, %3992) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3993 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %3994 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1920 = "equeue.launch"(%3990, %3993, %5, %66, %59, %1, %3994) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3995 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %3996 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1921 = "equeue.launch"(%3990, %3995, %5, %73, %66, %1, %3996) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3997 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %3998 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1922 = "equeue.launch"(%3990, %3997, %5, %80, %73, %1, %3998) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %3999 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %4000 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1923 = "equeue.launch"(%3990, %3999, %5, %87, %80, %1, %4000) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4001 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %4002 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1924 = "equeue.launch"(%3990, %4001, %5, %94, %87, %1, %4002) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4003 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %4004 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1925 = "equeue.launch"(%3990, %4003, %5, %101, %94, %1, %4004) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4005 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %4006 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1926 = "equeue.launch"(%3990, %4005, %5, %108, %101, %1, %4006) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4007 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %4008 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1927 = "equeue.launch"(%3990, %4007, %5, %115, %108, %1, %4008) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4009 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %4010 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1928 = "equeue.launch"(%3990, %4009, %5, %122, %115, %1, %4010) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4011 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %4012 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1929 = "equeue.launch"(%3990, %4011, %5, %129, %122, %1, %4012) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4013 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %4014 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1930 = "equeue.launch"(%3990, %4013, %5, %136, %129, %1, %4014) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4015 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %4016 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1931 = "equeue.launch"(%3990, %4015, %5, %143, %136, %1, %4016) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4017 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %4018 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1932 = "equeue.launch"(%3990, %4017, %5, %150, %143, %1, %4018) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4019 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %4020 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1933 = "equeue.launch"(%3990, %4019, %5, %157, %150, %1, %4020) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4021 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1934 = "equeue.launch"(%3990, %4021, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %4022 = "equeue.control_start"() : () -> !equeue.signal
    %4023 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %4024 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1935 = "equeue.launch"(%4022, %4023, %5, %59, %1, %4024) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4025 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %4026 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1936 = "equeue.launch"(%4022, %4025, %5, %66, %59, %1, %4026) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4027 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %4028 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1937 = "equeue.launch"(%4022, %4027, %5, %73, %66, %1, %4028) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4029 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %4030 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1938 = "equeue.launch"(%4022, %4029, %5, %80, %73, %1, %4030) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4031 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %4032 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1939 = "equeue.launch"(%4022, %4031, %5, %87, %80, %1, %4032) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4033 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %4034 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1940 = "equeue.launch"(%4022, %4033, %5, %94, %87, %1, %4034) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4035 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %4036 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1941 = "equeue.launch"(%4022, %4035, %5, %101, %94, %1, %4036) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4037 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %4038 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1942 = "equeue.launch"(%4022, %4037, %5, %108, %101, %1, %4038) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4039 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %4040 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1943 = "equeue.launch"(%4022, %4039, %5, %115, %108, %1, %4040) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4041 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %4042 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1944 = "equeue.launch"(%4022, %4041, %5, %122, %115, %1, %4042) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4043 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %4044 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1945 = "equeue.launch"(%4022, %4043, %5, %129, %122, %1, %4044) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4045 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %4046 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1946 = "equeue.launch"(%4022, %4045, %5, %136, %129, %1, %4046) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4047 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %4048 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1947 = "equeue.launch"(%4022, %4047, %5, %143, %136, %1, %4048) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4049 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %4050 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1948 = "equeue.launch"(%4022, %4049, %5, %150, %143, %1, %4050) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4051 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %4052 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1949 = "equeue.launch"(%4022, %4051, %5, %157, %150, %1, %4052) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4053 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1950 = "equeue.launch"(%4022, %4053, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %4054 = "equeue.control_start"() : () -> !equeue.signal
    %4055 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %4056 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1951 = "equeue.launch"(%4054, %4055, %5, %59, %1, %4056) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4057 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %4058 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1952 = "equeue.launch"(%4054, %4057, %5, %66, %59, %1, %4058) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4059 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %4060 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1953 = "equeue.launch"(%4054, %4059, %5, %73, %66, %1, %4060) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4061 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %4062 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1954 = "equeue.launch"(%4054, %4061, %5, %80, %73, %1, %4062) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4063 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %4064 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1955 = "equeue.launch"(%4054, %4063, %5, %87, %80, %1, %4064) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4065 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %4066 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1956 = "equeue.launch"(%4054, %4065, %5, %94, %87, %1, %4066) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4067 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %4068 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1957 = "equeue.launch"(%4054, %4067, %5, %101, %94, %1, %4068) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4069 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %4070 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1958 = "equeue.launch"(%4054, %4069, %5, %108, %101, %1, %4070) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4071 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %4072 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1959 = "equeue.launch"(%4054, %4071, %5, %115, %108, %1, %4072) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4073 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %4074 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1960 = "equeue.launch"(%4054, %4073, %5, %122, %115, %1, %4074) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4075 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %4076 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1961 = "equeue.launch"(%4054, %4075, %5, %129, %122, %1, %4076) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4077 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %4078 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1962 = "equeue.launch"(%4054, %4077, %5, %136, %129, %1, %4078) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4079 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %4080 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1963 = "equeue.launch"(%4054, %4079, %5, %143, %136, %1, %4080) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4081 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %4082 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1964 = "equeue.launch"(%4054, %4081, %5, %150, %143, %1, %4082) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4083 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %4084 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1965 = "equeue.launch"(%4054, %4083, %5, %157, %150, %1, %4084) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4085 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1966 = "equeue.launch"(%4054, %4085, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %4086 = "equeue.control_start"() : () -> !equeue.signal
    %4087 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %4088 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1967 = "equeue.launch"(%4086, %4087, %5, %59, %1, %4088) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4089 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %4090 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1968 = "equeue.launch"(%4086, %4089, %5, %66, %59, %1, %4090) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4091 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %4092 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1969 = "equeue.launch"(%4086, %4091, %5, %73, %66, %1, %4092) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4093 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %4094 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1970 = "equeue.launch"(%4086, %4093, %5, %80, %73, %1, %4094) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4095 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %4096 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1971 = "equeue.launch"(%4086, %4095, %5, %87, %80, %1, %4096) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4097 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %4098 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1972 = "equeue.launch"(%4086, %4097, %5, %94, %87, %1, %4098) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4099 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %4100 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1973 = "equeue.launch"(%4086, %4099, %5, %101, %94, %1, %4100) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4101 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %4102 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1974 = "equeue.launch"(%4086, %4101, %5, %108, %101, %1, %4102) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4103 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %4104 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1975 = "equeue.launch"(%4086, %4103, %5, %115, %108, %1, %4104) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4105 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %4106 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1976 = "equeue.launch"(%4086, %4105, %5, %122, %115, %1, %4106) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4107 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %4108 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1977 = "equeue.launch"(%4086, %4107, %5, %129, %122, %1, %4108) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4109 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %4110 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1978 = "equeue.launch"(%4086, %4109, %5, %136, %129, %1, %4110) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4111 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %4112 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1979 = "equeue.launch"(%4086, %4111, %5, %143, %136, %1, %4112) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4113 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %4114 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1980 = "equeue.launch"(%4086, %4113, %5, %150, %143, %1, %4114) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4115 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %4116 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1981 = "equeue.launch"(%4086, %4115, %5, %157, %150, %1, %4116) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4117 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1982 = "equeue.launch"(%4086, %4117, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %4118 = "equeue.control_start"() : () -> !equeue.signal
    %4119 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %4120 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1983 = "equeue.launch"(%4118, %4119, %5, %59, %1, %4120) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4121 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %4122 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1984 = "equeue.launch"(%4118, %4121, %5, %66, %59, %1, %4122) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4123 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %4124 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1985 = "equeue.launch"(%4118, %4123, %5, %73, %66, %1, %4124) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4125 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %4126 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1986 = "equeue.launch"(%4118, %4125, %5, %80, %73, %1, %4126) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4127 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %4128 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1987 = "equeue.launch"(%4118, %4127, %5, %87, %80, %1, %4128) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4129 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %4130 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1988 = "equeue.launch"(%4118, %4129, %5, %94, %87, %1, %4130) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4131 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %4132 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1989 = "equeue.launch"(%4118, %4131, %5, %101, %94, %1, %4132) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4133 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %4134 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1990 = "equeue.launch"(%4118, %4133, %5, %108, %101, %1, %4134) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4135 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %4136 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1991 = "equeue.launch"(%4118, %4135, %5, %115, %108, %1, %4136) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4137 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %4138 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1992 = "equeue.launch"(%4118, %4137, %5, %122, %115, %1, %4138) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4139 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %4140 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1993 = "equeue.launch"(%4118, %4139, %5, %129, %122, %1, %4140) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4141 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %4142 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1994 = "equeue.launch"(%4118, %4141, %5, %136, %129, %1, %4142) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4143 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %4144 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1995 = "equeue.launch"(%4118, %4143, %5, %143, %136, %1, %4144) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4145 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %4146 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1996 = "equeue.launch"(%4118, %4145, %5, %150, %143, %1, %4146) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4147 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %4148 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1997 = "equeue.launch"(%4118, %4147, %5, %157, %150, %1, %4148) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4149 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_1998 = "equeue.launch"(%4118, %4149, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %4150 = "equeue.control_start"() : () -> !equeue.signal
    %4151 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %4152 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_1999 = "equeue.launch"(%4150, %4151, %5, %59, %1, %4152) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4153 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %4154 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2000 = "equeue.launch"(%4150, %4153, %5, %66, %59, %1, %4154) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4155 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %4156 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2001 = "equeue.launch"(%4150, %4155, %5, %73, %66, %1, %4156) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4157 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %4158 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2002 = "equeue.launch"(%4150, %4157, %5, %80, %73, %1, %4158) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4159 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %4160 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2003 = "equeue.launch"(%4150, %4159, %5, %87, %80, %1, %4160) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4161 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %4162 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2004 = "equeue.launch"(%4150, %4161, %5, %94, %87, %1, %4162) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4163 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %4164 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2005 = "equeue.launch"(%4150, %4163, %5, %101, %94, %1, %4164) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4165 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %4166 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2006 = "equeue.launch"(%4150, %4165, %5, %108, %101, %1, %4166) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4167 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %4168 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2007 = "equeue.launch"(%4150, %4167, %5, %115, %108, %1, %4168) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4169 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %4170 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2008 = "equeue.launch"(%4150, %4169, %5, %122, %115, %1, %4170) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4171 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %4172 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2009 = "equeue.launch"(%4150, %4171, %5, %129, %122, %1, %4172) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4173 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %4174 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2010 = "equeue.launch"(%4150, %4173, %5, %136, %129, %1, %4174) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4175 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %4176 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2011 = "equeue.launch"(%4150, %4175, %5, %143, %136, %1, %4176) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4177 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %4178 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2012 = "equeue.launch"(%4150, %4177, %5, %150, %143, %1, %4178) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4179 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %4180 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2013 = "equeue.launch"(%4150, %4179, %5, %157, %150, %1, %4180) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4181 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_2014 = "equeue.launch"(%4150, %4181, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %4182 = "equeue.control_start"() : () -> !equeue.signal
    %4183 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %4184 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2015 = "equeue.launch"(%4182, %4183, %5, %59, %1, %4184) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4185 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %4186 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2016 = "equeue.launch"(%4182, %4185, %5, %66, %59, %1, %4186) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4187 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %4188 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2017 = "equeue.launch"(%4182, %4187, %5, %73, %66, %1, %4188) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4189 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %4190 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2018 = "equeue.launch"(%4182, %4189, %5, %80, %73, %1, %4190) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4191 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %4192 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2019 = "equeue.launch"(%4182, %4191, %5, %87, %80, %1, %4192) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4193 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %4194 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2020 = "equeue.launch"(%4182, %4193, %5, %94, %87, %1, %4194) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4195 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %4196 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2021 = "equeue.launch"(%4182, %4195, %5, %101, %94, %1, %4196) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4197 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %4198 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2022 = "equeue.launch"(%4182, %4197, %5, %108, %101, %1, %4198) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4199 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %4200 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2023 = "equeue.launch"(%4182, %4199, %5, %115, %108, %1, %4200) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4201 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %4202 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2024 = "equeue.launch"(%4182, %4201, %5, %122, %115, %1, %4202) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4203 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %4204 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2025 = "equeue.launch"(%4182, %4203, %5, %129, %122, %1, %4204) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4205 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %4206 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2026 = "equeue.launch"(%4182, %4205, %5, %136, %129, %1, %4206) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4207 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %4208 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2027 = "equeue.launch"(%4182, %4207, %5, %143, %136, %1, %4208) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4209 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %4210 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2028 = "equeue.launch"(%4182, %4209, %5, %150, %143, %1, %4210) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4211 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %4212 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2029 = "equeue.launch"(%4182, %4211, %5, %157, %150, %1, %4212) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4213 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_2030 = "equeue.launch"(%4182, %4213, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %4214 = "equeue.control_start"() : () -> !equeue.signal
    %4215 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %4216 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2031 = "equeue.launch"(%4214, %4215, %5, %59, %1, %4216) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4217 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %4218 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2032 = "equeue.launch"(%4214, %4217, %5, %66, %59, %1, %4218) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4219 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %4220 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2033 = "equeue.launch"(%4214, %4219, %5, %73, %66, %1, %4220) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4221 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %4222 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2034 = "equeue.launch"(%4214, %4221, %5, %80, %73, %1, %4222) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4223 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %4224 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2035 = "equeue.launch"(%4214, %4223, %5, %87, %80, %1, %4224) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4225 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %4226 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2036 = "equeue.launch"(%4214, %4225, %5, %94, %87, %1, %4226) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4227 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %4228 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2037 = "equeue.launch"(%4214, %4227, %5, %101, %94, %1, %4228) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4229 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %4230 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2038 = "equeue.launch"(%4214, %4229, %5, %108, %101, %1, %4230) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4231 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %4232 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2039 = "equeue.launch"(%4214, %4231, %5, %115, %108, %1, %4232) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4233 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %4234 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2040 = "equeue.launch"(%4214, %4233, %5, %122, %115, %1, %4234) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4235 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %4236 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2041 = "equeue.launch"(%4214, %4235, %5, %129, %122, %1, %4236) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4237 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %4238 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2042 = "equeue.launch"(%4214, %4237, %5, %136, %129, %1, %4238) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4239 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %4240 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2043 = "equeue.launch"(%4214, %4239, %5, %143, %136, %1, %4240) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4241 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %4242 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2044 = "equeue.launch"(%4214, %4241, %5, %150, %143, %1, %4242) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4243 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %4244 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2045 = "equeue.launch"(%4214, %4243, %5, %157, %150, %1, %4244) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4245 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_2046 = "equeue.launch"(%4214, %4245, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    %4246 = "equeue.control_start"() : () -> !equeue.signal
    %4247 = "equeue.get_comp_field"(%59) {name = "proc"} : (i32) -> i32
    %4248 = "equeue.get_comp_field"(%59) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2047 = "equeue.launch"(%4246, %4247, %5, %59, %1, %4248) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: memref<512xf32>, %arg4: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream0"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4281 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4283 = "equeue.read"(%arg3, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4283, %4280) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4284 = "equeue.unkOp"(%4282, %4280, %4281) {op_name = "mul4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4285 = "equeue.read"(%4282) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4285, %arg4, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4249 = "equeue.get_comp_field"(%66) {name = "proc"} : (i32) -> i32
    %4250 = "equeue.get_comp_field"(%66) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2048 = "equeue.launch"(%4246, %4249, %5, %66, %59, %1, %4250) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream1"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream16"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4251 = "equeue.get_comp_field"(%73) {name = "proc"} : (i32) -> i32
    %4252 = "equeue.get_comp_field"(%73) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2049 = "equeue.launch"(%4246, %4251, %5, %73, %66, %1, %4252) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream2"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream17"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4253 = "equeue.get_comp_field"(%80) {name = "proc"} : (i32) -> i32
    %4254 = "equeue.get_comp_field"(%80) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2050 = "equeue.launch"(%4246, %4253, %5, %80, %73, %1, %4254) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream3"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream18"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4255 = "equeue.get_comp_field"(%87) {name = "proc"} : (i32) -> i32
    %4256 = "equeue.get_comp_field"(%87) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2051 = "equeue.launch"(%4246, %4255, %5, %87, %80, %1, %4256) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream4"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream19"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4257 = "equeue.get_comp_field"(%94) {name = "proc"} : (i32) -> i32
    %4258 = "equeue.get_comp_field"(%94) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2052 = "equeue.launch"(%4246, %4257, %5, %94, %87, %1, %4258) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream5"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream20"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4259 = "equeue.get_comp_field"(%101) {name = "proc"} : (i32) -> i32
    %4260 = "equeue.get_comp_field"(%101) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2053 = "equeue.launch"(%4246, %4259, %5, %101, %94, %1, %4260) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream6"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream21"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4261 = "equeue.get_comp_field"(%108) {name = "proc"} : (i32) -> i32
    %4262 = "equeue.get_comp_field"(%108) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2054 = "equeue.launch"(%4246, %4261, %5, %108, %101, %1, %4262) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream7"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream22"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4263 = "equeue.get_comp_field"(%115) {name = "proc"} : (i32) -> i32
    %4264 = "equeue.get_comp_field"(%115) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2055 = "equeue.launch"(%4246, %4263, %5, %115, %108, %1, %4264) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream8"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream23"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4265 = "equeue.get_comp_field"(%122) {name = "proc"} : (i32) -> i32
    %4266 = "equeue.get_comp_field"(%122) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2056 = "equeue.launch"(%4246, %4265, %5, %122, %115, %1, %4266) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream9"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream24"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4267 = "equeue.get_comp_field"(%129) {name = "proc"} : (i32) -> i32
    %4268 = "equeue.get_comp_field"(%129) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2057 = "equeue.launch"(%4246, %4267, %5, %129, %122, %1, %4268) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream10"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream25"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4269 = "equeue.get_comp_field"(%136) {name = "proc"} : (i32) -> i32
    %4270 = "equeue.get_comp_field"(%136) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2058 = "equeue.launch"(%4246, %4269, %5, %136, %129, %1, %4270) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream11"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream26"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4271 = "equeue.get_comp_field"(%143) {name = "proc"} : (i32) -> i32
    %4272 = "equeue.get_comp_field"(%143) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2059 = "equeue.launch"(%4246, %4271, %5, %143, %136, %1, %4272) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream12"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream27"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4273 = "equeue.get_comp_field"(%150) {name = "proc"} : (i32) -> i32
    %4274 = "equeue.get_comp_field"(%150) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2060 = "equeue.launch"(%4246, %4273, %5, %150, %143, %1, %4274) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream13"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream28"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4275 = "equeue.get_comp_field"(%157) {name = "proc"} : (i32) -> i32
    %4276 = "equeue.get_comp_field"(%157) {name = "ofmap"} : (i32) -> memref<4xi32>
    %done_2061 = "equeue.launch"(%4246, %4275, %5, %157, %150, %1, %4276) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<4xi32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream14"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream29"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<4xi32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<4xi32>) -> !equeue.signal
    %4277 = "equeue.get_comp_field"(%164) {name = "proc"} : (i32) -> i32
    %done_2062 = "equeue.launch"(%4246, %4277, %5, %164, %157, %1, %3) ( {
    ^bb0(%arg1: i32, %arg2: i32, %arg3: i32, %arg4: memref<512xf32>, %arg5: memref<481xf32>):  // no predecessors
      %4278 = "equeue.get_comp_field"(%5) {name = "stream15"} : (i32) -> i32
      %4279 = "equeue.get_comp_field"(%5) {name = "stream30"} : (i32) -> i32
      %4280 = "equeue.get_comp_field"(%5) {name = "stream31"} : (i32) -> i32
      %4281 = "equeue.get_comp_field"(%arg2) {name = "ifmap"} : (i32) -> memref<16xi32>
      %4282 = "equeue.get_comp_field"(%arg2) {name = "filter"} : (i32) -> memref<8xi32>
      %4283 = "equeue.get_comp_field"(%arg2) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4284 = "equeue.get_comp_field"(%arg3) {name = "ofmap"} : (i32) -> memref<4xi32>
      %4285 = "equeue.read"(%4284, %4279) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<4xi32>, i32) -> tensor<4xi32>
      "equeue.write"(%4285, %4283) {bank = 0 : i64} : (tensor<4xi32>, memref<4xi32>) -> ()
      %4286 = "equeue.read"(%arg4, %4278) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (memref<512xf32>, i32) -> tensor<512xf32>
      "equeue.write"(%4286, %4281) {bank = 0 : i64} : (tensor<512xf32>, memref<16xi32>) -> ()
      %4287 = "equeue.unkOp"(%4283, %4281, %4282) {op_name = "mac4"} : (memref<4xi32>, memref<16xi32>, memref<8xi32>) -> memref<4xi32>
      %4288 = "equeue.read"(%4283) {bank = 0 : i64} : (memref<4xi32>) -> tensor<i32>
      "equeue.write"(%4288, %arg5, %4280) {bank = 0 : i64, size = dense<4> : tensor<1xi64>} : (tensor<i32>, memref<481xf32>, i32) -> ()
      "equeue.return"() : () -> ()
    }) : (!equeue.signal, i32, i32, i32, i32, memref<512xf32>, memref<481xf32>) -> !equeue.signal
    "equeue.await"(%done_2062) : (!equeue.signal) -> ()
    return
  }
}
